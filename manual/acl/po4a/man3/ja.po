# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2012-06-04 15:28+0900\n"
"PO-Revision-Date: 2025-05-24 10:07+0000\n"
"Last-Translator: Yasumichi Akahoshi <sekiseijuju@gmail.com>\n"
"Language-Team: Japanese <https://v163-44-112-237.zyew.static.cnode.jp/"
"projects/linuxjm/linux-packages/acl/man3/ja/>\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: Weblate 5.11.4\n"

#. type: Dd
#: original/man3/acl_add_perm.3:24 original/man3/acl_calc_mask.3:24
#: original/man3/acl_check.3:24 original/man3/acl_clear_perms.3:24
#: original/man3/acl_cmp.3:24 original/man3/acl_copy_entry.3:24
#: original/man3/acl_copy_ext.3:24 original/man3/acl_copy_int.3:24
#: original/man3/acl_create_entry.3:24 original/man3/acl_delete_def_file.3:24
#: original/man3/acl_delete_entry.3:24 original/man3/acl_delete_perm.3:24
#: original/man3/acl_dup.3:24 original/man3/acl_entries.3:24
#: original/man3/acl_equiv_mode.3:24 original/man3/acl_error.3:24
#: original/man3/acl_extended_fd.3:24 original/man3/acl_extended_file.3:24
#: original/man3/acl_free.3:24 original/man3/acl_from_mode.3:24
#: original/man3/acl_from_text.3:24 original/man3/acl_get_entry.3:24
#: original/man3/acl_get_fd.3:24 original/man3/acl_get_file.3:24
#: original/man3/acl_get_perm.3:24 original/man3/acl_get_permset.3:24
#: original/man3/acl_get_qualifier.3:24 original/man3/acl_get_tag_type.3:24
#: original/man3/acl_init.3:24 original/man3/acl_set_fd.3:24
#: original/man3/acl_set_file.3:24 original/man3/acl_set_permset.3:24
#: original/man3/acl_set_qualifier.3:24 original/man3/acl_set_tag_type.3:24
#: original/man3/acl_size.3:24 original/man3/acl_to_text.3:24
#: original/man3/acl_valid.3:24
#, no-wrap
msgid "March 23, 2002"
msgstr ""

#. type: Dt
#: original/man3/acl_add_perm.3:25
#, no-wrap
msgid "ACL_ADD_PERM 3"
msgstr ""

#. type: Os
#: original/man3/acl_add_perm.3:26 original/man3/acl_calc_mask.3:26
#: original/man3/acl_check.3:26 original/man3/acl_clear_perms.3:26
#: original/man3/acl_cmp.3:26 original/man3/acl_copy_entry.3:26
#: original/man3/acl_copy_ext.3:26 original/man3/acl_copy_int.3:26
#: original/man3/acl_create_entry.3:26 original/man3/acl_delete_def_file.3:26
#: original/man3/acl_delete_entry.3:26 original/man3/acl_delete_perm.3:26
#: original/man3/acl_dup.3:26 original/man3/acl_entries.3:26
#: original/man3/acl_equiv_mode.3:26 original/man3/acl_error.3:26
#: original/man3/acl_extended_fd.3:26 original/man3/acl_extended_file.3:26
#: original/man3/acl_free.3:26 original/man3/acl_from_mode.3:26
#: original/man3/acl_from_text.3:26 original/man3/acl_get_entry.3:26
#: original/man3/acl_get_fd.3:26 original/man3/acl_get_file.3:26
#: original/man3/acl_get_perm.3:26 original/man3/acl_get_permset.3:26
#: original/man3/acl_get_qualifier.3:26 original/man3/acl_get_tag_type.3:26
#: original/man3/acl_init.3:26 original/man3/acl_set_fd.3:26
#: original/man3/acl_set_file.3:26 original/man3/acl_set_permset.3:26
#: original/man3/acl_set_qualifier.3:26 original/man3/acl_set_tag_type.3:26
#: original/man3/acl_size.3:26 original/man3/acl_to_any_text.3:26
#: original/man3/acl_to_text.3:26 original/man3/acl_valid.3:26
#, no-wrap
msgid "Linux ACL"
msgstr ""

#. type: Sh
#: original/man3/acl_add_perm.3:27 original/man3/acl_calc_mask.3:27
#: original/man3/acl_check.3:27 original/man3/acl_clear_perms.3:27
#: original/man3/acl_cmp.3:27 original/man3/acl_copy_entry.3:27
#: original/man3/acl_copy_ext.3:27 original/man3/acl_copy_int.3:27
#: original/man3/acl_create_entry.3:27 original/man3/acl_delete_def_file.3:27
#: original/man3/acl_delete_entry.3:27 original/man3/acl_delete_perm.3:27
#: original/man3/acl_dup.3:27 original/man3/acl_entries.3:27
#: original/man3/acl_equiv_mode.3:27 original/man3/acl_error.3:27
#: original/man3/acl_extended_fd.3:27 original/man3/acl_extended_file.3:27
#: original/man3/acl_free.3:27 original/man3/acl_from_mode.3:27
#: original/man3/acl_from_text.3:27 original/man3/acl_get_entry.3:27
#: original/man3/acl_get_fd.3:27 original/man3/acl_get_file.3:27
#: original/man3/acl_get_perm.3:27 original/man3/acl_get_permset.3:27
#: original/man3/acl_get_qualifier.3:27 original/man3/acl_get_tag_type.3:27
#: original/man3/acl_init.3:27 original/man3/acl_set_fd.3:27
#: original/man3/acl_set_file.3:27 original/man3/acl_set_permset.3:27
#: original/man3/acl_set_qualifier.3:27 original/man3/acl_set_tag_type.3:27
#: original/man3/acl_size.3:27 original/man3/acl_to_any_text.3:27
#: original/man3/acl_to_text.3:27 original/man3/acl_valid.3:27
#, no-wrap
msgid "NAME"
msgstr "名前"

#. type: Plain text
#: original/man3/acl_add_perm.3:29
msgid "E<.Nm acl_add_perm>"
msgstr ""

#. type: Nd
#: original/man3/acl_add_perm.3:29
#, no-wrap
msgid "add a permission to an ACL permission set"
msgstr ""

#. type: Sh
#: original/man3/acl_add_perm.3:30 original/man3/acl_calc_mask.3:30
#: original/man3/acl_check.3:30 original/man3/acl_clear_perms.3:30
#: original/man3/acl_cmp.3:30 original/man3/acl_copy_entry.3:30
#: original/man3/acl_copy_ext.3:30 original/man3/acl_copy_int.3:30
#: original/man3/acl_create_entry.3:30 original/man3/acl_delete_def_file.3:30
#: original/man3/acl_delete_entry.3:30 original/man3/acl_delete_perm.3:30
#: original/man3/acl_dup.3:30 original/man3/acl_entries.3:30
#: original/man3/acl_equiv_mode.3:30 original/man3/acl_error.3:30
#: original/man3/acl_extended_fd.3:30 original/man3/acl_extended_file.3:30
#: original/man3/acl_free.3:30 original/man3/acl_from_mode.3:30
#: original/man3/acl_from_text.3:30 original/man3/acl_get_entry.3:30
#: original/man3/acl_get_fd.3:30 original/man3/acl_get_file.3:30
#: original/man3/acl_get_perm.3:30 original/man3/acl_get_permset.3:30
#: original/man3/acl_get_qualifier.3:30 original/man3/acl_get_tag_type.3:30
#: original/man3/acl_init.3:30 original/man3/acl_set_fd.3:30
#: original/man3/acl_set_file.3:30 original/man3/acl_set_permset.3:30
#: original/man3/acl_set_qualifier.3:30 original/man3/acl_set_tag_type.3:30
#: original/man3/acl_size.3:30 original/man3/acl_to_any_text.3:30
#: original/man3/acl_to_text.3:30 original/man3/acl_valid.3:30
#, no-wrap
msgid "LIBRARY"
msgstr ""

#. type: Plain text
#: original/man3/acl_add_perm.3:32 original/man3/acl_calc_mask.3:32
#: original/man3/acl_check.3:32 original/man3/acl_clear_perms.3:32
#: original/man3/acl_cmp.3:32 original/man3/acl_copy_entry.3:32
#: original/man3/acl_copy_ext.3:32 original/man3/acl_copy_int.3:32
#: original/man3/acl_create_entry.3:32 original/man3/acl_delete_def_file.3:32
#: original/man3/acl_delete_entry.3:32 original/man3/acl_delete_perm.3:32
#: original/man3/acl_dup.3:32 original/man3/acl_entries.3:32
#: original/man3/acl_equiv_mode.3:32 original/man3/acl_error.3:32
#: original/man3/acl_extended_fd.3:32 original/man3/acl_extended_file.3:32
#: original/man3/acl_free.3:32 original/man3/acl_from_mode.3:32
#: original/man3/acl_from_text.3:32 original/man3/acl_get_entry.3:32
#: original/man3/acl_get_fd.3:32 original/man3/acl_get_file.3:32
#: original/man3/acl_get_perm.3:32 original/man3/acl_get_permset.3:32
#: original/man3/acl_get_qualifier.3:32 original/man3/acl_get_tag_type.3:32
#: original/man3/acl_init.3:32 original/man3/acl_set_fd.3:32
#: original/man3/acl_set_file.3:32 original/man3/acl_set_permset.3:32
#: original/man3/acl_set_qualifier.3:32 original/man3/acl_set_tag_type.3:32
#: original/man3/acl_size.3:32 original/man3/acl_to_any_text.3:32
#: original/man3/acl_to_text.3:32 original/man3/acl_valid.3:32
msgid "Linux Access Control Lists library (libacl, \\-lacl)."
msgstr ""

#. type: Sh
#: original/man3/acl_add_perm.3:32 original/man3/acl_calc_mask.3:32
#: original/man3/acl_check.3:32 original/man3/acl_clear_perms.3:32
#: original/man3/acl_cmp.3:32 original/man3/acl_copy_entry.3:32
#: original/man3/acl_copy_ext.3:32 original/man3/acl_copy_int.3:32
#: original/man3/acl_create_entry.3:32 original/man3/acl_delete_def_file.3:32
#: original/man3/acl_delete_entry.3:32 original/man3/acl_delete_perm.3:32
#: original/man3/acl_dup.3:32 original/man3/acl_entries.3:32
#: original/man3/acl_equiv_mode.3:32 original/man3/acl_error.3:32
#: original/man3/acl_extended_fd.3:32 original/man3/acl_extended_file.3:32
#: original/man3/acl_free.3:32 original/man3/acl_from_mode.3:32
#: original/man3/acl_from_text.3:32 original/man3/acl_get_entry.3:32
#: original/man3/acl_get_fd.3:32 original/man3/acl_get_file.3:32
#: original/man3/acl_get_perm.3:32 original/man3/acl_get_permset.3:32
#: original/man3/acl_get_qualifier.3:32 original/man3/acl_get_tag_type.3:32
#: original/man3/acl_init.3:32 original/man3/acl_set_fd.3:32
#: original/man3/acl_set_file.3:32 original/man3/acl_set_permset.3:32
#: original/man3/acl_set_qualifier.3:32 original/man3/acl_set_tag_type.3:32
#: original/man3/acl_size.3:32 original/man3/acl_to_any_text.3:32
#: original/man3/acl_to_text.3:32 original/man3/acl_valid.3:32
#, no-wrap
msgid "SYNOPSIS"
msgstr ""

#. type: In
#: original/man3/acl_add_perm.3:33 original/man3/acl_calc_mask.3:33
#: original/man3/acl_check.3:33 original/man3/acl_clear_perms.3:33
#: original/man3/acl_cmp.3:33 original/man3/acl_copy_entry.3:33
#: original/man3/acl_copy_ext.3:33 original/man3/acl_copy_int.3:33
#: original/man3/acl_create_entry.3:33 original/man3/acl_delete_def_file.3:33
#: original/man3/acl_delete_entry.3:33 original/man3/acl_delete_perm.3:33
#: original/man3/acl_dup.3:33 original/man3/acl_entries.3:33
#: original/man3/acl_equiv_mode.3:33 original/man3/acl_error.3:33
#: original/man3/acl_extended_fd.3:33 original/man3/acl_extended_file.3:33
#: original/man3/acl_free.3:33 original/man3/acl_from_mode.3:33
#: original/man3/acl_from_text.3:33 original/man3/acl_get_entry.3:33
#: original/man3/acl_get_fd.3:33 original/man3/acl_get_file.3:33
#: original/man3/acl_get_perm.3:33 original/man3/acl_get_permset.3:33
#: original/man3/acl_get_qualifier.3:33 original/man3/acl_get_tag_type.3:33
#: original/man3/acl_init.3:33 original/man3/acl_set_fd.3:33
#: original/man3/acl_set_file.3:33 original/man3/acl_set_permset.3:33
#: original/man3/acl_set_qualifier.3:33 original/man3/acl_set_tag_type.3:33
#: original/man3/acl_size.3:33 original/man3/acl_to_any_text.3:33
#: original/man3/acl_to_text.3:33 original/man3/acl_valid.3:33
#, no-wrap
msgid "sys/types.h"
msgstr ""

#. type: In
#: original/man3/acl_add_perm.3:34 original/man3/acl_calc_mask.3:34
#: original/man3/acl_clear_perms.3:34 original/man3/acl_copy_entry.3:34
#: original/man3/acl_copy_ext.3:34 original/man3/acl_copy_int.3:34
#: original/man3/acl_create_entry.3:34 original/man3/acl_delete_def_file.3:34
#: original/man3/acl_delete_entry.3:34 original/man3/acl_delete_perm.3:34
#: original/man3/acl_dup.3:34 original/man3/acl_free.3:34
#: original/man3/acl_from_text.3:34 original/man3/acl_get_entry.3:34
#: original/man3/acl_get_fd.3:34 original/man3/acl_get_file.3:34
#: original/man3/acl_get_permset.3:34 original/man3/acl_get_qualifier.3:34
#: original/man3/acl_get_tag_type.3:34 original/man3/acl_init.3:34
#: original/man3/acl_set_fd.3:34 original/man3/acl_set_file.3:34
#: original/man3/acl_set_permset.3:34 original/man3/acl_set_qualifier.3:34
#: original/man3/acl_set_tag_type.3:34 original/man3/acl_size.3:34
#: original/man3/acl_to_text.3:34 original/man3/acl_valid.3:34
#, no-wrap
msgid "sys/acl.h"
msgstr ""

#. type: Plain text
#: original/man3/acl_add_perm.3:37
msgid ""
"E<.Ft int> E<.Fn acl_add_perm \"acl_permset_t permset_d\" \"acl_perm_t perm"
"\">"
msgstr ""

#. type: Sh
#: original/man3/acl_add_perm.3:37 original/man3/acl_calc_mask.3:37
#: original/man3/acl_check.3:37 original/man3/acl_clear_perms.3:37
#: original/man3/acl_cmp.3:37 original/man3/acl_copy_entry.3:37
#: original/man3/acl_copy_ext.3:37 original/man3/acl_copy_int.3:37
#: original/man3/acl_create_entry.3:37 original/man3/acl_delete_def_file.3:37
#: original/man3/acl_delete_entry.3:37 original/man3/acl_delete_perm.3:37
#: original/man3/acl_dup.3:37 original/man3/acl_entries.3:37
#: original/man3/acl_equiv_mode.3:37 original/man3/acl_error.3:37
#: original/man3/acl_extended_fd.3:37 original/man3/acl_extended_file.3:39
#: original/man3/acl_free.3:37 original/man3/acl_from_mode.3:37
#: original/man3/acl_from_text.3:37 original/man3/acl_get_entry.3:37
#: original/man3/acl_get_fd.3:37 original/man3/acl_get_file.3:37
#: original/man3/acl_get_perm.3:37 original/man3/acl_get_permset.3:37
#: original/man3/acl_get_qualifier.3:37 original/man3/acl_get_tag_type.3:37
#: original/man3/acl_init.3:37 original/man3/acl_set_fd.3:37
#: original/man3/acl_set_file.3:37 original/man3/acl_set_permset.3:37
#: original/man3/acl_set_qualifier.3:37 original/man3/acl_set_tag_type.3:37
#: original/man3/acl_size.3:37 original/man3/acl_to_any_text.3:42
#: original/man3/acl_to_text.3:37 original/man3/acl_valid.3:37
#, no-wrap
msgid "DESCRIPTION"
msgstr ""

#. type: Plain text
#: original/man3/acl_add_perm.3:46
msgid ""
"The E<.Fn acl_add_perm> function adds the permission contained in the "
"argument E<.Va perm> to the permission set referred to by the argument E<.Va "
"permset_d>.  An attempt to add a permission that is already contained in the "
"permission set is not considered an error."
msgstr ""

#. type: Plain text
#: original/man3/acl_add_perm.3:50 original/man3/acl_delete_perm.3:50
#: original/man3/acl_get_perm.3:48
msgid ""
"Any existing descriptors that refer to E<.Va permset_d> continue to refer to "
"that permission set."
msgstr ""

#. type: Sh
#: original/man3/acl_add_perm.3:50 original/man3/acl_calc_mask.3:70
#: original/man3/acl_check.3:87 original/man3/acl_clear_perms.3:46
#: original/man3/acl_cmp.3:49 original/man3/acl_copy_entry.3:49
#: original/man3/acl_copy_ext.3:63 original/man3/acl_copy_int.3:52
#: original/man3/acl_create_entry.3:74 original/man3/acl_delete_def_file.3:52
#: original/man3/acl_delete_entry.3:55 original/man3/acl_delete_perm.3:50
#: original/man3/acl_dup.3:51 original/man3/acl_entries.3:42
#: original/man3/acl_equiv_mode.3:60 original/man3/acl_error.3:56
#: original/man3/acl_extended_fd.3:62 original/man3/acl_extended_file.3:73
#: original/man3/acl_free.3:51 original/man3/acl_from_mode.3:45
#: original/man3/acl_from_text.3:56 original/man3/acl_get_entry.3:91
#: original/man3/acl_get_fd.3:57 original/man3/acl_get_file.3:79
#: original/man3/acl_get_perm.3:48 original/man3/acl_get_permset.3:49
#: original/man3/acl_get_qualifier.3:83 original/man3/acl_get_tag_type.3:50
#: original/man3/acl_init.3:53 original/man3/acl_set_fd.3:44
#: original/man3/acl_set_file.3:84 original/man3/acl_set_permset.3:52
#: original/man3/acl_set_qualifier.3:69 original/man3/acl_set_tag_type.3:48
#: original/man3/acl_size.3:53 original/man3/acl_to_any_text.3:130
#: original/man3/acl_to_text.3:70 original/man3/acl_valid.3:51
#, no-wrap
msgid "RETURN VALUE"
msgstr ""

#. type: Plain text
#: original/man3/acl_add_perm.3:52
msgid "E<.Rv -std acl_add_perm>"
msgstr ""

#. type: Sh
#: original/man3/acl_add_perm.3:52 original/man3/acl_calc_mask.3:72
#: original/man3/acl_check.3:100 original/man3/acl_clear_perms.3:48
#: original/man3/acl_cmp.3:65 original/man3/acl_copy_entry.3:51
#: original/man3/acl_copy_ext.3:71 original/man3/acl_copy_int.3:62
#: original/man3/acl_create_entry.3:76 original/man3/acl_delete_def_file.3:54
#: original/man3/acl_delete_entry.3:57 original/man3/acl_delete_perm.3:52
#: original/man3/acl_dup.3:58 original/man3/acl_entries.3:52
#: original/man3/acl_equiv_mode.3:74 original/man3/acl_extended_fd.3:78
#: original/man3/acl_extended_file.3:89 original/man3/acl_free.3:53
#: original/man3/acl_from_mode.3:52 original/man3/acl_from_text.3:63
#: original/man3/acl_get_entry.3:111 original/man3/acl_get_fd.3:64
#: original/man3/acl_get_file.3:86 original/man3/acl_get_perm.3:65
#: original/man3/acl_get_permset.3:51 original/man3/acl_get_qualifier.3:89
#: original/man3/acl_get_tag_type.3:52 original/man3/acl_init.3:60
#: original/man3/acl_set_fd.3:46 original/man3/acl_set_file.3:86
#: original/man3/acl_set_permset.3:54 original/man3/acl_set_qualifier.3:71
#: original/man3/acl_set_tag_type.3:50 original/man3/acl_size.3:62
#: original/man3/acl_to_any_text.3:137 original/man3/acl_to_text.3:78
#: original/man3/acl_valid.3:53
#, no-wrap
msgid "ERRORS"
msgstr ""

#. type: Plain text
#: original/man3/acl_add_perm.3:60
msgid ""
"If any of the following conditions occur, the E<.Fn acl_add_perm> function "
"returns E<.Li -1> and sets E<.Va errno> to the corresponding value:"
msgstr ""

#. type: It
#: original/man3/acl_add_perm.3:61 original/man3/acl_calc_mask.3:81
#: original/man3/acl_check.3:109 original/man3/acl_clear_perms.3:57
#: original/man3/acl_cmp.3:74 original/man3/acl_copy_entry.3:60
#: original/man3/acl_copy_ext.3:80 original/man3/acl_copy_int.3:71
#: original/man3/acl_create_entry.3:85 original/man3/acl_delete_def_file.3:63
#: original/man3/acl_delete_entry.3:66 original/man3/acl_delete_perm.3:61
#: original/man3/acl_dup.3:67 original/man3/acl_entries.3:61
#: original/man3/acl_equiv_mode.3:83 original/man3/acl_free.3:62
#: original/man3/acl_from_text.3:72 original/man3/acl_get_entry.3:120
#: original/man3/acl_get_file.3:103 original/man3/acl_get_perm.3:74
#: original/man3/acl_get_permset.3:60 original/man3/acl_get_qualifier.3:98
#: original/man3/acl_get_tag_type.3:61 original/man3/acl_init.3:69
#: original/man3/acl_set_fd.3:59 original/man3/acl_set_file.3:103
#: original/man3/acl_set_permset.3:63 original/man3/acl_set_qualifier.3:80
#: original/man3/acl_set_tag_type.3:59 original/man3/acl_size.3:71
#: original/man3/acl_to_any_text.3:146 original/man3/acl_to_text.3:87
#: original/man3/acl_valid.3:62
#, no-wrap
msgid "Bq Er EINVAL"
msgstr ""

#. type: Plain text
#: original/man3/acl_add_perm.3:65 original/man3/acl_clear_perms.3:61
#: original/man3/acl_delete_perm.3:65 original/man3/acl_get_perm.3:78
#: original/man3/acl_set_permset.3:71
msgid ""
"The argument E<.Va permset_d> is not a valid descriptor for a permission set "
"within an ACL entry."
msgstr ""

#. type: Plain text
#: original/man3/acl_add_perm.3:71 original/man3/acl_delete_perm.3:71
msgid ""
"The argument E<.Va perm> does not contain a valid E<.Va acl_perm_t> value."
msgstr ""

#. type: Sh
#: original/man3/acl_add_perm.3:72 original/man3/acl_calc_mask.3:90
#: original/man3/acl_check.3:114 original/man3/acl_clear_perms.3:62
#: original/man3/acl_cmp.3:83 original/man3/acl_copy_entry.3:73
#: original/man3/acl_copy_ext.3:98 original/man3/acl_copy_int.3:78
#: original/man3/acl_create_entry.3:92 original/man3/acl_delete_def_file.3:76
#: original/man3/acl_delete_entry.3:75 original/man3/acl_delete_perm.3:72
#: original/man3/acl_dup.3:77 original/man3/acl_entries.3:66
#: original/man3/acl_equiv_mode.3:88 original/man3/acl_error.3:62
#: original/man3/acl_extended_fd.3:96 original/man3/acl_extended_file.3:115
#: original/man3/acl_free.3:67 original/man3/acl_from_mode.3:65
#: original/man3/acl_from_text.3:82 original/man3/acl_get_entry.3:129
#: original/man3/acl_get_fd.3:84 original/man3/acl_get_file.3:124
#: original/man3/acl_get_perm.3:85 original/man3/acl_get_permset.3:65
#: original/man3/acl_get_qualifier.3:109 original/man3/acl_get_tag_type.3:66
#: original/man3/acl_init.3:77 original/man3/acl_set_fd.3:79
#: original/man3/acl_set_file.3:143 original/man3/acl_set_permset.3:81
#: original/man3/acl_set_qualifier.3:97 original/man3/acl_set_tag_type.3:68
#: original/man3/acl_size.3:76 original/man3/acl_to_any_text.3:159
#: original/man3/acl_to_text.3:100 original/man3/acl_valid.3:76
#, no-wrap
msgid "STANDARDS"
msgstr ""

#. type: Plain text
#: original/man3/acl_add_perm.3:74 original/man3/acl_calc_mask.3:92
#: original/man3/acl_clear_perms.3:64 original/man3/acl_copy_entry.3:75
#: original/man3/acl_copy_ext.3:100 original/man3/acl_copy_int.3:80
#: original/man3/acl_create_entry.3:94 original/man3/acl_delete_def_file.3:78
#: original/man3/acl_delete_entry.3:77 original/man3/acl_delete_perm.3:74
#: original/man3/acl_dup.3:79 original/man3/acl_free.3:69
#: original/man3/acl_from_text.3:84 original/man3/acl_get_entry.3:131
#: original/man3/acl_get_fd.3:86 original/man3/acl_get_file.3:126
#: original/man3/acl_get_permset.3:67 original/man3/acl_get_qualifier.3:111
#: original/man3/acl_get_tag_type.3:68 original/man3/acl_init.3:79
#: original/man3/acl_set_fd.3:81 original/man3/acl_set_file.3:145
#: original/man3/acl_set_permset.3:83 original/man3/acl_set_qualifier.3:99
#: original/man3/acl_set_tag_type.3:70 original/man3/acl_size.3:78
#: original/man3/acl_to_text.3:102 original/man3/acl_valid.3:78
msgid "IEEE Std 1003.1e draft 17 (\\(lqPOSIX.1e\\(rq, abandoned)"
msgstr ""

#. type: Sh
#: original/man3/acl_add_perm.3:74 original/man3/acl_calc_mask.3:92
#: original/man3/acl_check.3:117 original/man3/acl_clear_perms.3:64
#: original/man3/acl_cmp.3:86 original/man3/acl_copy_entry.3:75
#: original/man3/acl_copy_ext.3:100 original/man3/acl_copy_int.3:80
#: original/man3/acl_create_entry.3:94 original/man3/acl_delete_def_file.3:78
#: original/man3/acl_delete_entry.3:77 original/man3/acl_delete_perm.3:74
#: original/man3/acl_dup.3:79 original/man3/acl_entries.3:69
#: original/man3/acl_equiv_mode.3:91 original/man3/acl_error.3:65
#: original/man3/acl_extended_fd.3:99 original/man3/acl_extended_file.3:118
#: original/man3/acl_free.3:69 original/man3/acl_from_mode.3:68
#: original/man3/acl_from_text.3:84 original/man3/acl_get_entry.3:131
#: original/man3/acl_get_fd.3:86 original/man3/acl_get_file.3:126
#: original/man3/acl_get_perm.3:88 original/man3/acl_get_permset.3:67
#: original/man3/acl_get_qualifier.3:111 original/man3/acl_get_tag_type.3:68
#: original/man3/acl_init.3:79 original/man3/acl_set_fd.3:81
#: original/man3/acl_set_file.3:158 original/man3/acl_set_permset.3:83
#: original/man3/acl_set_qualifier.3:99 original/man3/acl_set_tag_type.3:70
#: original/man3/acl_size.3:78 original/man3/acl_to_any_text.3:162
#: original/man3/acl_to_text.3:102 original/man3/acl_valid.3:78
#, no-wrap
msgid "SEE ALSO"
msgstr ""

#. type: Plain text
#: original/man3/acl_add_perm.3:81
msgid ""
"E<.Xr acl_clear_perms 3>, E<.Xr acl_delete_perm 3>, E<.Xr acl_get_perm 3>, "
"E<.Xr acl_get_permset 3>, E<.Xr acl_set_permset 3>, E<.Xr acl 5>"
msgstr ""

#. type: Sh
#: original/man3/acl_add_perm.3:81 original/man3/acl_calc_mask.3:97
#: original/man3/acl_check.3:120 original/man3/acl_clear_perms.3:71
#: original/man3/acl_cmp.3:88 original/man3/acl_copy_entry.3:78
#: original/man3/acl_copy_ext.3:104 original/man3/acl_copy_int.3:85
#: original/man3/acl_create_entry.3:100 original/man3/acl_delete_def_file.3:82
#: original/man3/acl_delete_entry.3:82 original/man3/acl_delete_perm.3:81
#: original/man3/acl_dup.3:83 original/man3/acl_entries.3:71
#: original/man3/acl_equiv_mode.3:94 original/man3/acl_error.3:69
#: original/man3/acl_extended_fd.3:103 original/man3/acl_extended_file.3:122
#: original/man3/acl_free.3:78 original/man3/acl_from_mode.3:72
#: original/man3/acl_from_text.3:89 original/man3/acl_get_entry.3:138
#: original/man3/acl_get_fd.3:92 original/man3/acl_get_file.3:132
#: original/man3/acl_get_perm.3:95 original/man3/acl_get_permset.3:78
#: original/man3/acl_get_qualifier.3:121 original/man3/acl_get_tag_type.3:77
#: original/man3/acl_init.3:83 original/man3/acl_set_fd.3:87
#: original/man3/acl_set_file.3:164 original/man3/acl_set_permset.3:94
#: original/man3/acl_set_qualifier.3:109 original/man3/acl_set_tag_type.3:79
#: original/man3/acl_size.3:81 original/man3/acl_to_any_text.3:167
#: original/man3/acl_to_text.3:107 original/man3/acl_valid.3:82
#, no-wrap
msgid "AUTHOR"
msgstr ""

#. type: Plain text
#: original/man3/acl_add_perm.3:85 original/man3/acl_calc_mask.3:101
#: original/man3/acl_clear_perms.3:75 original/man3/acl_copy_entry.3:82
#: original/man3/acl_copy_ext.3:108 original/man3/acl_copy_int.3:89
#: original/man3/acl_create_entry.3:104 original/man3/acl_delete_def_file.3:86
#: original/man3/acl_delete_entry.3:86 original/man3/acl_delete_perm.3:85
#: original/man3/acl_dup.3:87 original/man3/acl_free.3:82
#: original/man3/acl_from_text.3:93 original/man3/acl_get_entry.3:142
#: original/man3/acl_get_fd.3:96 original/man3/acl_get_file.3:136
#: original/man3/acl_get_permset.3:82 original/man3/acl_get_qualifier.3:125
#: original/man3/acl_get_tag_type.3:81 original/man3/acl_init.3:87
#: original/man3/acl_set_fd.3:91 original/man3/acl_set_file.3:168
#: original/man3/acl_set_permset.3:98 original/man3/acl_set_qualifier.3:113
#: original/man3/acl_set_tag_type.3:83 original/man3/acl_size.3:85
#: original/man3/acl_to_text.3:111 original/man3/acl_valid.3:86
msgid ""
"Derived from the FreeBSD manual pages written by E<.An \"Robert N M Watson\" "
"Aq rwatson@FreeBSD.org>, and adapted for Linux by E<.An \"Andreas Gruenbacher"
"\" Aq a.gruenbacher@bestbits.at>."
msgstr ""

#. type: Dt
#: original/man3/acl_calc_mask.3:25
#, no-wrap
msgid "ACL_CALC_MASK 3"
msgstr ""

#. type: Plain text
#: original/man3/acl_calc_mask.3:29
msgid "E<.Nm acl_calc_mask>"
msgstr ""

#. type: Nd
#: original/man3/acl_calc_mask.3:29
#, no-wrap
msgid "calculate the file group class mask"
msgstr ""

#. type: Plain text
#: original/man3/acl_calc_mask.3:37
msgid "E<.Ft int> E<.Fn acl_calc_mask \"acl_t *acl_p\">"
msgstr ""

#. type: Plain text
#: original/man3/acl_calc_mask.3:49
msgid ""
"The E<.Fn acl_calc_mask> function calculates and sets the permissions "
"associated with the ACL_MASK ACL entry of the ACL referred to by E<.Va "
"acl_p>.  The value of the new permissions is the union of the permissions "
"granted by all entries of tag type ACL_GROUP, ACL_GROUP_OBJ, or ACL_USER.  "
"If the ACL referred to by E<.Va acl_p> already contains an ACL_MASK entry, "
"its permissions are overwritten; if it does not contain an ACL_MASK entry, "
"one is added."
msgstr ""

#. type: Plain text
#: original/man3/acl_calc_mask.3:57
msgid ""
"If the ACL referred to by E<.Va acl_p> does not contain enough space for the "
"new ACL entry, then additional working storage may be allocated. If the "
"working storage cannot be increased in the current location, then it may be "
"relocated and the previous working storage is released and a pointer to the "
"new working storage is returned via E<.Va acl_p>."
msgstr ""

#. type: Plain text
#: original/man3/acl_calc_mask.3:59
msgid ""
"The order of existing entries in the ACL is undefined after this function."
msgstr ""

#.  <AG>
#.  Conflict between requirements:
#.  (a) ACL may be relocated,
#.  (b) all pointers remain valid.
#.  </AG>
#. type: Plain text
#: original/man3/acl_calc_mask.3:70
msgid ""
"Any existing ACL entry descriptors that refer to entries in the ACL continue "
"to refer to those entries. Any existing ACL pointers that refer to the ACL "
"referred to by E<.Va acl_p> continue to refer to the ACL."
msgstr ""

#. type: Plain text
#: original/man3/acl_calc_mask.3:72
msgid "E<.Rv -std acl_calc_mask>"
msgstr ""

#. type: Plain text
#: original/man3/acl_calc_mask.3:80
msgid ""
"If any of the following conditions occur, the E<.Fn acl_calc_mask> function "
"returns E<.Li -1> and sets E<.Va errno> to the corresponding value:"
msgstr ""

#. type: Plain text
#: original/man3/acl_calc_mask.3:85 original/man3/acl_check.3:113
#: original/man3/acl_copy_ext.3:88 original/man3/acl_dup.3:71
#: original/man3/acl_entries.3:65 original/man3/acl_equiv_mode.3:87
#: original/man3/acl_size.3:75 original/man3/acl_to_any_text.3:150
#: original/man3/acl_to_text.3:91 original/man3/acl_valid.3:66
msgid "The argument E<.Va acl> is not a valid pointer to an ACL."
msgstr ""

#. type: It
#: original/man3/acl_calc_mask.3:85 original/man3/acl_copy_int.3:75
#: original/man3/acl_create_entry.3:89 original/man3/acl_dup.3:71
#: original/man3/acl_from_mode.3:61 original/man3/acl_from_text.3:76
#: original/man3/acl_get_fd.3:77 original/man3/acl_get_file.3:115
#: original/man3/acl_get_qualifier.3:106 original/man3/acl_init.3:71
#: original/man3/acl_set_qualifier.3:92 original/man3/acl_to_any_text.3:155
#: original/man3/acl_to_text.3:96
#, no-wrap
msgid "Bq Er ENOMEM"
msgstr ""

#. type: Plain text
#: original/man3/acl_calc_mask.3:89
msgid ""
"The E<.Fn acl_calc_mask> function is unable to allocate the memory required "
"for an ACL_MASK ACL entry."
msgstr ""

#. type: Plain text
#: original/man3/acl_calc_mask.3:97
msgid ""
"E<.Xr acl_check 3>, E<.Xr acl_get_entry 3>, E<.Xr acl_valid 3>, E<.Xr acl 5>"
msgstr ""

#. type: Dt
#: original/man3/acl_check.3:25 original/man3/acl_error.3:25
#, no-wrap
msgid "ACL_CHECK 3"
msgstr ""

#. type: Plain text
#: original/man3/acl_check.3:29
msgid "E<.Nm acl_check>"
msgstr ""

#. type: Nd
#: original/man3/acl_check.3:29
#, no-wrap
msgid "check an ACL for validity"
msgstr ""

#. type: In
#: original/man3/acl_check.3:34 original/man3/acl_cmp.3:34
#: original/man3/acl_entries.3:34 original/man3/acl_equiv_mode.3:34
#: original/man3/acl_error.3:34 original/man3/acl_extended_fd.3:34
#: original/man3/acl_extended_file.3:34 original/man3/acl_from_mode.3:34
#: original/man3/acl_get_perm.3:34 original/man3/acl_to_any_text.3:34
#, no-wrap
msgid "acl/libacl.h"
msgstr ""

#. type: Plain text
#: original/man3/acl_check.3:37
msgid "E<.Ft int> E<.Fn acl_check \"acl_t acl\" \"int *last\">"
msgstr ""

#. type: Plain text
#: original/man3/acl_check.3:43
msgid ""
"The E<.Fn acl_check> function checks the ACL referred to by the argument E<."
"Va acl> for validity."
msgstr ""

#. type: Plain text
#: original/man3/acl_check.3:48 original/man3/acl_valid.3:48
msgid ""
"The three required entries ACL_USER_OBJ, ACL_GROUP_OBJ, and ACL_OTHER must "
"exist exactly once in the ACL. If the ACL contains any ACL_USER or ACL_GROUP "
"entries, then an ACL_MASK entry is also required. The ACL may contain at "
"most one ACL_MASK entry."
msgstr ""

#. type: Plain text
#: original/man3/acl_check.3:51 original/man3/acl_valid.3:51
msgid ""
"The user identifiers must be unique among all entries of type ACL_USER.  The "
"group identifiers must be unique among all entries of type ACL_GROUP."
msgstr ""

#. type: Plain text
#: original/man3/acl_check.3:58
msgid ""
"If the ACL referred to by E<.Va acl> is invalid, E<.Fn acl_check> returns a "
"positive error code that indicates which type of error was detected.  The "
"following symbolic error codes are defined:"
msgstr ""

#. type: It
#: original/man3/acl_check.3:59 original/man3/acl_error.3:47
#, no-wrap
msgid "ACL_MULTI_ERROR"
msgstr ""

#. type: Plain text
#: original/man3/acl_check.3:62
msgid ""
"The ACL contains multiple entries that have a tag type that may occur at "
"most once."
msgstr ""

#. type: It
#: original/man3/acl_check.3:62 original/man3/acl_error.3:49
#, no-wrap
msgid "ACL_DUPLICATE_ERROR"
msgstr ""

#. type: Plain text
#: original/man3/acl_check.3:65
msgid ""
"The ACL contains multiple ACL_USER entries with the same user ID, or "
"multiple ACL_GROUP entries with the same group ID."
msgstr ""

#. type: It
#: original/man3/acl_check.3:65 original/man3/acl_error.3:51
#, no-wrap
msgid "ACL_MISS_ERROR"
msgstr ""

#. type: Plain text
#: original/man3/acl_check.3:67
msgid "A required entry is missing."
msgstr ""

#. type: It
#: original/man3/acl_check.3:67 original/man3/acl_error.3:53
#, no-wrap
msgid "ACL_ENTRY_ERROR"
msgstr ""

#. type: Plain text
#: original/man3/acl_check.3:69
msgid "The ACL contains an invalid entry tag type."
msgstr ""

#. type: Plain text
#: original/man3/acl_check.3:74
msgid ""
"The E<.Fn acl_error> function can be used to translate error codes to text "
"messages."
msgstr ""

#. type: Plain text
#: original/man3/acl_check.3:87
msgid ""
"In addition, if the pointer E<.Va last> is not E<.Li NULL>, E<.Fn acl_check> "
"assigns the number of the ACL entry at which the error was detected to the "
"value pointed to by E<.Va last>.  Entries are numbered starting with zero, "
"in the order in which they would be returned by the E<.Fn acl_get_entry> "
"function."
msgstr ""

#. type: Plain text
#: original/man3/acl_check.3:100
msgid ""
"If successful, the E<.Fn acl_check> function returns E<.Li 0> if the ACL "
"referred to by E<.Va acl> is valid, and a positive error code if the ACL is "
"invalid. Otherwise, a value of E<.Li -1> is returned and the global variable "
"E<.Va errno> is set to indicate the error."
msgstr ""

#. type: Plain text
#: original/man3/acl_check.3:108
msgid ""
"If any of the following conditions occur, the E<.Fn acl_check> function "
"returns E<.Li -1> and sets E<.Va errno> to the corresponding value:"
msgstr ""

#. type: Plain text
#: original/man3/acl_check.3:117 original/man3/acl_cmp.3:86
#: original/man3/acl_entries.3:69 original/man3/acl_equiv_mode.3:91
#: original/man3/acl_error.3:65 original/man3/acl_extended_fd.3:99
#: original/man3/acl_extended_file.3:118 original/man3/acl_from_mode.3:68
#: original/man3/acl_get_perm.3:88 original/man3/acl_to_any_text.3:162
msgid ""
"This is a non-portable, Linux specific extension to the ACL manipulation "
"functions defined in IEEE Std 1003.1e draft 17 (\\(lqPOSIX.1e\\(rq, "
"abandoned)."
msgstr ""

#. type: Plain text
#: original/man3/acl_check.3:120
msgid "E<.Xr acl_valid 3>, E<.Xr acl 5>"
msgstr ""

#. type: Plain text
#: original/man3/acl_check.3:122 original/man3/acl_cmp.3:90
#: original/man3/acl_entries.3:73 original/man3/acl_equiv_mode.3:96
#: original/man3/acl_error.3:71 original/man3/acl_extended_fd.3:105
#: original/man3/acl_extended_file.3:124 original/man3/acl_from_mode.3:74
#: original/man3/acl_get_perm.3:97 original/man3/acl_to_any_text.3:169
msgid "Written by E<.An \"Andreas Gruenbacher\" Aq a.gruenbacher@bestbits.at>."
msgstr ""

#. type: Dt
#: original/man3/acl_clear_perms.3:25
#, no-wrap
msgid "ACL_CLEAR_PERMS 3"
msgstr ""

#. type: Plain text
#: original/man3/acl_clear_perms.3:29
msgid "E<.Nm acl_clear_perms>"
msgstr ""

#. type: Nd
#: original/man3/acl_clear_perms.3:29
#, no-wrap
msgid "clear all permissions from an ACL permission set"
msgstr ""

#. type: Plain text
#: original/man3/acl_clear_perms.3:37
msgid "E<.Ft int> E<.Fn acl_clear_perms \"acl_permset_t permset_d\">"
msgstr ""

#. type: Plain text
#: original/man3/acl_clear_perms.3:42
msgid ""
"The E<.Fn acl_clear_perms> function clears all permissions from the "
"permission set referred to by the argument E<.Va permset_d>."
msgstr ""

#. type: Plain text
#: original/man3/acl_clear_perms.3:46
msgid ""
"Any existing descriptors that refer to E<.Va permset_d> shall continue to "
"refer to that permission set."
msgstr ""

#. type: Plain text
#: original/man3/acl_clear_perms.3:48
msgid "E<.Rv -std acl_clear_perms>"
msgstr ""

#. type: Plain text
#: original/man3/acl_clear_perms.3:56
msgid ""
"If any of the following conditions occur, the E<.Fn acl_clear_perms> "
"function returns E<.Li -1> and sets E<.Va errno> to the corresponding value:"
msgstr ""

#. type: Plain text
#: original/man3/acl_clear_perms.3:71
msgid ""
"E<.Xr acl_add_perm 3>, E<.Xr acl_delete_perm 3>, E<.Xr acl_get_perm 3>, E<."
"Xr acl_get_permset 3>, E<.Xr acl_set_permset 3>, E<.Xr acl 5>"
msgstr ""

#. type: Dt
#: original/man3/acl_cmp.3:25
#, no-wrap
msgid "ACL_CMP 3"
msgstr ""

#. type: Plain text
#: original/man3/acl_cmp.3:29
msgid "E<.Nm acl_cmp>"
msgstr ""

#. type: Nd
#: original/man3/acl_cmp.3:29
#, no-wrap
msgid "compare two ACLs"
msgstr ""

#. type: Plain text
#: original/man3/acl_cmp.3:37
msgid "E<.Ft int> E<.Fn acl_cmp \"acl_t acl1\" \"acl_t acl2\">"
msgstr ""

#. type: Plain text
#: original/man3/acl_cmp.3:49
msgid ""
"The E<.Fn acl_cmp> function compares the ACLs pointed to by the arguments E<."
"Va acl1> and E<.Va acl2> for equality. The two ACLs are considered equal if "
"for each entry in E<.Va acl1> there is an entry in E<.Va acl2> with matching "
"tag type, qualifier, and permissions, and vice versa."
msgstr ""

#. type: Plain text
#: original/man3/acl_cmp.3:65
msgid ""
"If successful, the E<.Fn acl_cmp> function returns E<.Li 0> if the two ACLs "
"E<.Va acl1> and E<.Va acl2> are equal, and E<.Li 1> if they differ. "
"Otherwise, the value E<.Li -1> is returned and the global variable E<.Va "
"errno> is set to indicate the error."
msgstr ""

#. type: Plain text
#: original/man3/acl_cmp.3:73
msgid ""
"If any of the following conditions occur, the E<.Fn acl_cmp> function "
"returns E<.Li -1> and sets E<.Va errno> to the corresponding value:"
msgstr ""

#. type: Plain text
#: original/man3/acl_cmp.3:78
msgid "The argument E<.Va acl1> is not a valid pointer to an ACL."
msgstr ""

#. type: Plain text
#: original/man3/acl_cmp.3:82
msgid "The argument E<.Va acl2> is not a valid pointer to an ACL."
msgstr ""

#. type: Plain text
#: original/man3/acl_cmp.3:88 original/man3/acl_entries.3:71
msgid "E<.Xr acl 5>"
msgstr ""

#. type: Dt
#: original/man3/acl_copy_entry.3:25
#, no-wrap
msgid "ACL_COPY_ENTRY 3"
msgstr ""

#. type: Plain text
#: original/man3/acl_copy_entry.3:29
msgid "E<.Nm acl_copy_entry>"
msgstr ""

#. type: Nd
#: original/man3/acl_copy_entry.3:29
#, no-wrap
msgid "copy an ACL entry"
msgstr ""

#. type: Plain text
#: original/man3/acl_copy_entry.3:37
msgid ""
"E<.Ft int> E<.Fn acl_copy_entry \"acl_entry_t dest_d\" \"acl_entry_t src_d\">"
msgstr ""

#. type: Plain text
#: original/man3/acl_copy_entry.3:49
msgid ""
"The E<.Fn acl_copy_entry> function copies the contents of the ACL entry "
"indicated by the E<.Va src_d> descriptor to the existing ACL entry indicated "
"by the E<.Va dest_d> descriptor. The E<.Va src_d> and E<.Va dest_d> "
"descriptors may refer to entries in different ACLs."
msgstr ""

#. type: Plain text
#: original/man3/acl_copy_entry.3:51
msgid "E<.Rv -std acl_copy_entry>"
msgstr ""

#. type: Plain text
#: original/man3/acl_copy_entry.3:59
msgid ""
"If any of the following conditions occur, the E<.Fn acl_copy_entry> function "
"returns E<.Li -1> and sets E<.Va errno> to the corresponding value:"
msgstr ""

#. type: Plain text
#: original/man3/acl_copy_entry.3:66
msgid ""
"The argument E<.Va src_d> or E<.Va dest_d> is not a valid descriptor for an "
"ACL entry."
msgstr ""

#. type: Plain text
#: original/man3/acl_copy_entry.3:72
msgid ""
"The arguments E<.Va src_d> and E<.Va dest_d> reference the same ACL entry."
msgstr ""

#. type: Plain text
#: original/man3/acl_copy_entry.3:78
msgid "E<.Xr acl_get_entry 3>, E<.Xr acl 5>"
msgstr ""

#. type: Dt
#: original/man3/acl_copy_ext.3:25
#, no-wrap
msgid "ACL_COPY_EXT 3"
msgstr ""

#. type: Plain text
#: original/man3/acl_copy_ext.3:29
msgid "E<.Nm acl_copy_ext>"
msgstr ""

#. type: Nd
#: original/man3/acl_copy_ext.3:29
#, no-wrap
msgid "copy an ACL from internal to external representation"
msgstr ""

#. type: Plain text
#: original/man3/acl_copy_ext.3:37
msgid ""
"E<.Ft ssize_t> E<.Fn acl_copy_ext \"void *buf_p\" \"acl_t acl\" \"ssize_t "
"size\">"
msgstr ""

#. type: Plain text
#: original/man3/acl_copy_ext.3:56
msgid ""
"The E<.Fn acl_copy_ext> function copies the ACL pointed to by E<.Va acl> "
"from system-managed space to the user managed space pointed to by E<.Va "
"buf_p>.  The E<.Va size> parameter represents the size in bytes of the "
"buffer pointed to by E<.Va buf_p>.  The format of the ACL placed in the "
"buffer pointed to by E<.Va buf_p> is a contiguous, persistent data item, the "
"format of which is unspecified.  It is the responsibility of the invoker to "
"allocate an area large enough to hold the copied ACL. The size of the "
"exportable, contiguous, persistent form of the ACL may be obtained by "
"invoking the E<.Fn acl_size> function."
msgstr ""

#. type: Plain text
#: original/man3/acl_copy_ext.3:63
msgid ""
"Any ACL entry descriptors that refer to an entry in the ACL referenced by E<."
"Va acl> continue to refer to those entries. Any existing ACL pointers that "
"refer to the ACL referenced by E<.Va acl> continue to refer to the ACL."
msgstr ""

#. type: Plain text
#: original/man3/acl_copy_ext.3:71
msgid ""
"Upon success, this function returns the number of bytes placed in the buffer "
"pointed to by E<.Va buf_p>.  On error, a value of E<.Li (ssize_t)-1> is "
"returned and E<.Va errno> is set appropriately."
msgstr ""

#. type: Plain text
#: original/man3/acl_copy_ext.3:79
msgid ""
"If any of the following conditions occur, the E<.Fn acl_copy_ext> function "
"returns a value of E<.Li (ssize_t)-1> and sets E<.Va errno> to the "
"corresponding value:"
msgstr ""

#. type: Plain text
#: original/man3/acl_copy_ext.3:84
msgid "The E<.Va size> parameter is zero or negative."
msgstr ""

#. type: Plain text
#: original/man3/acl_copy_ext.3:93
msgid ""
"The ACL referenced by E<.Va acl> contains one or more improperly formed ACL "
"entries, or for some other reason cannot be translated into the external "
"form of an ACL."
msgstr ""

#. type: It
#: original/man3/acl_copy_ext.3:93
#, no-wrap
msgid "Bq Er ERANGE"
msgstr ""

#. type: Plain text
#: original/man3/acl_copy_ext.3:97
msgid ""
"The E<.Va size> parameter is greater than zero but smaller than the length "
"of the contiguous, persistent form of the ACL."
msgstr ""

#. type: Plain text
#: original/man3/acl_copy_ext.3:104
msgid "E<.Xr acl_copy_int 3>, E<.Xr acl_size 3>, E<.Xr acl 5>"
msgstr ""

#. type: Dt
#: original/man3/acl_copy_int.3:25
#, no-wrap
msgid "ACL_COPY_INT 3"
msgstr ""

#. type: Plain text
#: original/man3/acl_copy_int.3:29
msgid "E<.Nm acl_copy_int>"
msgstr ""

#. type: Nd
#: original/man3/acl_copy_int.3:29
#, no-wrap
msgid "copy an ACL from external to internal representation"
msgstr ""

#. type: Plain text
#: original/man3/acl_copy_int.3:37
msgid "E<.Ft acl_t> E<.Fn acl_copy_int \"const void *buf_p\">"
msgstr ""

#. type: Plain text
#: original/man3/acl_copy_int.3:43
msgid ""
"The E<.Fn acl_copy_int> function copies an exportable, contiguous, "
"persistent form of an ACL, pointed to by E<.Va buf_p>, to the internal "
"representation."
msgstr ""

#. type: Plain text
#: original/man3/acl_copy_int.3:52
msgid ""
"This function may cause memory to be allocated.  The caller should free any "
"releasable memory, when the new ACL is no longer required, by calling E<.Xr "
"acl_free 3> with the E<.Va (void*)acl_t> returned by E<.Fn acl_copy_int> as "
"an argument."
msgstr ""

#. type: Plain text
#: original/man3/acl_copy_int.3:62
msgid ""
"Upon success, the E<.Fn acl_copy_int> function returns a pointer that "
"references the ACL in working storage.  On error, a value of E<.Li (acl_t)"
"NULL> is returned, and E<.Va errno> is set appropriately."
msgstr ""

#. type: Plain text
#: original/man3/acl_copy_int.3:70
msgid ""
"If any of the following conditions occur, the E<.Fn acl_copy_int> function "
"returns a value of E<.Li (acl_t)NULL> and sets E<.Va errno> to the "
"corresponding value:"
msgstr ""

#. type: Plain text
#: original/man3/acl_copy_int.3:75
msgid ""
"The buffer pointed to by the argument E<.Va buf_p> does not contain a valid "
"external form ACL."
msgstr ""

#. type: Plain text
#: original/man3/acl_copy_int.3:77 original/man3/acl_create_entry.3:91
#: original/man3/acl_from_mode.3:64 original/man3/acl_get_fd.3:79
#: original/man3/acl_get_file.3:117
msgid ""
"The ACL working storage requires more memory than is allowed by the hardware "
"or system-imposed memory management constraints."
msgstr ""

#. type: Plain text
#: original/man3/acl_copy_int.3:85
msgid ""
"E<.Xr acl_copy_ext 3>, E<.Xr acl_get_entry 3>, E<.Xr acl_free 3>, E<.Xr acl "
"5>"
msgstr ""

#. type: Dt
#: original/man3/acl_create_entry.3:25
#, no-wrap
msgid "ACL_CREATE_ENTRY 3"
msgstr ""

#. type: Plain text
#: original/man3/acl_create_entry.3:29
msgid "E<.Nm acl_create_entry>"
msgstr ""

#. type: Nd
#: original/man3/acl_create_entry.3:29
#, no-wrap
msgid "create a new ACL entry"
msgstr ""

#. type: Plain text
#: original/man3/acl_create_entry.3:37
msgid ""
"E<.Ft int> E<.Fn acl_create_entry \"acl_t *acl_p\" \"acl_entry_t *entry_p\">"
msgstr ""

#. type: Plain text
#: original/man3/acl_create_entry.3:45
msgid ""
"The E<.Fn acl_create_entry> function creates a new ACL entry in the ACL "
"pointed to by the contents of the pointer argument E<.Va acl_p>.  On "
"success, the function returns a descriptor for the new ACL entry via E<.Va "
"entry_p>."
msgstr ""

#.  <AG>
#.  1003.1e says:
#.  .Va (void*)acl_t
#.  this makes no sense, so:
#.  </AG>
#. type: Plain text
#: original/man3/acl_create_entry.3:63
msgid ""
"This function may cause memory to be allocated.  The caller should free any "
"releasable memory, when the new ACL is no longer required, by calling E<.Xr "
"acl_free 3> with E<.Va (void*)*acl_p> as an argument.  If the ACL working "
"storage cannot be increased in the current location, then the working "
"storage for the ACL pointed to by E<.Va acl_p> may be relocated and the "
"previous working storage is released. A pointer to the new working storage "
"is returned via E<.Va acl_p>."
msgstr ""

#.  <AG>
#.  Conflict between requirements:
#.  (a) ACL may be relocated,
#.  (b) all pointers remain valid.
#.  </AG>
#. type: Plain text
#: original/man3/acl_create_entry.3:74
msgid ""
"The components of the new ACL entry are initialized in the following ways: "
"the ACL tag type component contains ACL_UNDEFINED_TAG, the qualifier "
"component contains ACL_UNDEFINED_ID, and the set of permissions has no "
"permissions enabled. Any existing ACL entry descriptors that refer to "
"entries in the ACL continue to refer to those entries."
msgstr ""

#. type: Plain text
#: original/man3/acl_create_entry.3:76
msgid "E<.Rv -std acl_create_entry>"
msgstr ""

#. type: Plain text
#: original/man3/acl_create_entry.3:84
msgid ""
"If any of the following conditions occur, the E<.Fn acl_create_entry> "
"function returns E<.Li -1> and sets E<.Va errno> to the corresponding value:"
msgstr ""

#. type: Plain text
#: original/man3/acl_create_entry.3:89 original/man3/acl_delete_entry.3:70
#: original/man3/acl_get_entry.3:124
msgid "The argument E<.Va acl_p> is not a valid pointer to an ACL."
msgstr ""

#. type: Plain text
#: original/man3/acl_create_entry.3:100
msgid ""
"E<.Xr acl_init 3>, E<.Xr acl_delete_entry 3>, E<.Xr acl_free 3>, E<.Xr "
"acl_create_entry 3>, E<.Xr acl 5>"
msgstr ""

#. type: Dt
#: original/man3/acl_delete_def_file.3:25
#, no-wrap
msgid "ACL_DELETE_DEF_FILE 3"
msgstr ""

#. type: Plain text
#: original/man3/acl_delete_def_file.3:29
msgid "E<.Nm acl_delete_def_file>"
msgstr ""

#. type: Nd
#: original/man3/acl_delete_def_file.3:29
#, no-wrap
msgid "delete a default ACL by filename"
msgstr ""

#. type: Plain text
#: original/man3/acl_delete_def_file.3:37
msgid "E<.Ft int> E<.Fn acl_delete_def_file \"const char *path_p\">"
msgstr ""

#. type: Plain text
#: original/man3/acl_delete_def_file.3:42
msgid ""
"The E<.Fn acl_delete_def_file> function deletes a default ACL from the "
"directory whose pathname is pointed to by the argument E<.Va path_p>."
msgstr ""

#. type: Plain text
#: original/man3/acl_delete_def_file.3:46 original/man3/acl_set_file.3:48
msgid ""
"The effective user ID of the process must match the owner of the file or "
"directory or the process must have the CAP_FOWNER capability for the request "
"to succeed."
msgstr ""

#. type: Plain text
#: original/man3/acl_delete_def_file.3:52
msgid ""
"If the argument E<.Va path_p> is not a directory, then the function fails. "
"It is no error if the directory whose pathname is pointed to by the argument "
"E<.Va path_p> does not have a default ACL."
msgstr ""

#. type: Plain text
#: original/man3/acl_delete_def_file.3:54
msgid "E<.Rv -std acl_delete_def_file>"
msgstr ""

#. type: Plain text
#: original/man3/acl_delete_def_file.3:62
msgid ""
"If any of the following conditions occur, the E<.Fn acl_delete_def_file> "
"function returns the value E<.Li -1> and and sets E<.Va errno> to the "
"corresponding value:"
msgstr ""

#. type: Plain text
#: original/man3/acl_delete_def_file.3:67
msgid "The file referred to by E<.Va path_p> is not a directory."
msgstr ""

#. type: It
#: original/man3/acl_delete_def_file.3:67 original/man3/acl_extended_fd.3:91
#: original/man3/acl_extended_file.3:110 original/man3/acl_get_fd.3:79
#: original/man3/acl_get_file.3:119 original/man3/acl_set_fd.3:69
#: original/man3/acl_set_file.3:133
#, no-wrap
msgid "Bq Er ENOTSUP"
msgstr ""

#. type: Plain text
#: original/man3/acl_delete_def_file.3:71
#: original/man3/acl_extended_file.3:114 original/man3/acl_get_file.3:123
msgid ""
"The file system on which the file identified by E<.Va path_p> is located "
"does not support ACLs, or ACLs are disabled."
msgstr ""

#. type: It
#: original/man3/acl_delete_def_file.3:71 original/man3/acl_set_fd.3:74
#: original/man3/acl_set_file.3:138
#, no-wrap
msgid "Bq Er EPERM"
msgstr ""

#. type: Plain text
#: original/man3/acl_delete_def_file.3:73
msgid ""
"The process does not have appropriate privilege to perform the operation to "
"delete the default ACL."
msgstr ""

#. type: It
#: original/man3/acl_delete_def_file.3:73 original/man3/acl_set_fd.3:76
#: original/man3/acl_set_file.3:140
#, no-wrap
msgid "Bq Er EROFS"
msgstr ""

#. type: Plain text
#: original/man3/acl_delete_def_file.3:75 original/man3/acl_set_fd.3:78
#: original/man3/acl_set_file.3:142
msgid ""
"This function requires modification of a file system which is currently read-"
"only."
msgstr ""

#. type: Plain text
#: original/man3/acl_delete_def_file.3:82
msgid "E<.Xr acl_get_file 3>, E<.Xr acl_set_file 3>, E<.Xr acl 5>"
msgstr ""

#. type: Dt
#: original/man3/acl_delete_entry.3:25
#, no-wrap
msgid "ACL_DELETE_ENTRY 3"
msgstr ""

#. type: Plain text
#: original/man3/acl_delete_entry.3:29
msgid "E<.Nm acl_delete_entry>"
msgstr ""

#. type: Nd
#: original/man3/acl_delete_entry.3:29
#, no-wrap
msgid "delete an ACL entry"
msgstr ""

#. type: Plain text
#: original/man3/acl_delete_entry.3:37
msgid ""
"E<.Ft int> E<.Fn acl_delete_entry \"acl_t acl\" \"acl_entry_t entry_d\">"
msgstr ""

#. type: Plain text
#: original/man3/acl_delete_entry.3:55
msgid ""
"The E<.Fn acl_delete_entry> function removes the ACL entry indicated by the "
"E<.Va entry_d> descriptor from the ACL pointed to by E<.Va acl>.  Any "
"existing ACL entry descriptors that refer to entries in E<.Va acl> other "
"than that referred to by E<.Va entry_d> continue to refer to the same "
"entries. The argument E<.Va entry_d> and any other ACL entry descriptors "
"that refer to the same ACL entry are undefined after this function "
"completes. Any existing ACL pointers that refer to the ACL referred to by E<."
"Va acl> continue to refer to the ACL."
msgstr ""

#. type: Plain text
#: original/man3/acl_delete_entry.3:57
msgid "E<.Rv -std acl_delete_entry>"
msgstr ""

#. type: Plain text
#: original/man3/acl_delete_entry.3:65
msgid ""
"If any of the following conditions occur, the E<.Fn acl_delete_entry> "
"function returns E<.Li -1> and sets E<.Va errno> to the corresponding value:"
msgstr ""

#. type: Plain text
#: original/man3/acl_delete_entry.3:74
msgid "The argument E<.Va entry_d> is not a valid pointer to an ACL entry."
msgstr ""

#. type: Plain text
#: original/man3/acl_delete_entry.3:82
msgid ""
"E<.Xr acl_copy_entry 3>, E<.Xr acl_create_entry 3>, E<.Xr acl_get_entry 3>, "
"E<.Xr acl 5>"
msgstr ""

#. type: Dt
#: original/man3/acl_delete_perm.3:25
#, no-wrap
msgid "ACL_DELETE_PERM 3"
msgstr ""

#. type: Plain text
#: original/man3/acl_delete_perm.3:29
msgid "E<.Nm acl_delete_perm>"
msgstr ""

#. type: Nd
#: original/man3/acl_delete_perm.3:29
#, no-wrap
msgid "delete a permission from an ACL permission set"
msgstr ""

#. type: Plain text
#: original/man3/acl_delete_perm.3:37
msgid ""
"E<.Ft int> E<.Fn acl_delete_perm \"acl_permset_t permset_d\" \"acl_perm_t "
"perm\">"
msgstr ""

#. type: Plain text
#: original/man3/acl_delete_perm.3:46
msgid ""
"The E<.Fn acl_delete_perm> function deletes the permission contained in the "
"argument E<.Va perm> from the permission set referred to by the argument E<."
"Va permset_d>.  An attempt to delete a permission that is not contained in "
"the permission set is not considered an error."
msgstr ""

#. type: Plain text
#: original/man3/acl_delete_perm.3:52
msgid "E<.Rv -std acl_delete_perm>"
msgstr ""

#. type: Plain text
#: original/man3/acl_delete_perm.3:60
msgid ""
"If any of the following conditions occur, the E<.Fn acl_delete_perm> "
"function returns E<.Li -1> and sets E<.Va errno> to the corresponding value:"
msgstr ""

#. type: Plain text
#: original/man3/acl_delete_perm.3:81
msgid ""
"E<.Xr acl_add_perm 3>, E<.Xr acl_clear_perms 3>, E<.Xr acl_get_perm 3>, E<."
"Xr acl_get_permset 3>, E<.Xr acl_set_permset 3>, E<.Xr acl 5>"
msgstr ""

#. type: Dt
#: original/man3/acl_dup.3:25
#, no-wrap
msgid "ACL_DUP 3"
msgstr ""

#. type: Plain text
#: original/man3/acl_dup.3:29
msgid "E<.Nm acl_dup>"
msgstr ""

#. type: Nd
#: original/man3/acl_dup.3:29
#, no-wrap
msgid "duplicate an ACL"
msgstr ""

#. type: Plain text
#: original/man3/acl_dup.3:37
msgid "E<.Ft acl_t> E<.Fn acl_dup \"acl_t acl\">"
msgstr ""

#. type: Plain text
#: original/man3/acl_dup.3:42
msgid ""
"The E<.Fn acl_dup> function returns a pointer to a copy of the ACL pointed "
"to by E<.Va acl>."
msgstr ""

#. type: Plain text
#: original/man3/acl_dup.3:51
msgid ""
"This function may cause memory to be allocated.  The caller should free any "
"releasable memory, when the new ACL is no longer required, by calling E<.Xr "
"acl_free 3> with the E<.Va (void*)acl_t> returned by E<.Fn acl_dup> as an "
"argument."
msgstr ""

#. type: Plain text
#: original/man3/acl_dup.3:58 original/man3/acl_from_text.3:63
#: original/man3/acl_get_file.3:86 original/man3/acl_init.3:60
msgid ""
"On success, this function returns a pointer to the working storage.  On "
"error, a value of E<.Li (acl_t)NULL> is returned, and E<.Va errno> is set "
"appropriately."
msgstr ""

#. type: Plain text
#: original/man3/acl_dup.3:66
msgid ""
"If any of the following conditions occur, the E<.Fn acl_dup> function "
"returns a value of E<.Li (acl_t)NULL> and sets E<.Va errno> to the "
"corresponding value:"
msgstr ""

#. type: Plain text
#: original/man3/acl_dup.3:76 original/man3/acl_from_text.3:81
#: original/man3/acl_init.3:76
msgid ""
"The E<.Va acl_t> to be returned requires more memory than is allowed by the "
"hardware or system-imposed memory management constraints."
msgstr ""

#. type: Plain text
#: original/man3/acl_dup.3:83
msgid "E<.Xr acl_free 3>, E<.Xr acl_get_entry 3>, E<.Xr acl 5>"
msgstr ""

#. type: Dt
#: original/man3/acl_entries.3:25
#, no-wrap
msgid "ACL_ENTRIES 3"
msgstr ""

#. type: Plain text
#: original/man3/acl_entries.3:29
msgid "E<.Nm acl_entries>"
msgstr ""

#. type: Nd
#: original/man3/acl_entries.3:29
#, no-wrap
msgid "return the number of entries in an ACL"
msgstr ""

#. type: Plain text
#: original/man3/acl_entries.3:37
msgid "E<.Ft int> E<.Fn acl_entries \"acl_t acl\">"
msgstr ""

#. type: Plain text
#: original/man3/acl_entries.3:42
msgid ""
"The E<.Fn acl_entries> function returns the number of ACL entries that are "
"contained in the ACL referred to by the argument E<.Va acl>."
msgstr ""

#. type: Plain text
#: original/man3/acl_entries.3:52
msgid ""
"The E<.Fn acl_entries> function returns the number of entries in E<.Va acl> "
"if successful; otherwise the value E<.Li -1> is returned and the global "
"variable E<.Va errno> is set to indicate the error."
msgstr ""

#. type: Plain text
#: original/man3/acl_entries.3:60
msgid ""
"If any of the following conditions occur, the E<.Fn acl_entries> function "
"returns E<.Li -1> and sets E<.Va errno> to the corresponding value:"
msgstr ""

#. type: Dt
#: original/man3/acl_equiv_mode.3:25
#, no-wrap
msgid "ACL_EQUIV_MODE 3"
msgstr ""

#. type: Plain text
#: original/man3/acl_equiv_mode.3:29
msgid "E<.Nm acl_equiv_mode>"
msgstr ""

#. type: Nd
#: original/man3/acl_equiv_mode.3:29
#, no-wrap
msgid "check for an equivalent ACL"
msgstr ""

#. type: Plain text
#: original/man3/acl_equiv_mode.3:37
msgid "E<.Ft int> E<.Fn acl_equiv_mode \"acl_t acl\" \"mode_t *mode_p\">"
msgstr ""

#. type: Plain text
#: original/man3/acl_equiv_mode.3:48
msgid ""
"The E<.Fn acl_equiv_mode> function checks if the ACL pointed to by the "
"argument E<.Va acl> contains only the required ACL entries of tag types "
"ACL_USER_OBJ, ACL_GROUP_OBJ, and ACL_OTHER, and contains no permissions "
"other that ACL_READ, ACL_WRITE or ACL_EXECUTE.  If the ACL has this form, it "
"can can be fully represented with the traditional file permission bits, and "
"is considered equivalent with the traditional file permission bits."
msgstr ""

#. type: Plain text
#: original/man3/acl_equiv_mode.3:60
msgid ""
"If E<.Va acl> is an equivalent ACL and the pointer E<.Va mode_p> is not E<."
"Li NULL>, the value pointed to by E<.Va mode_p> is set to the value that "
"defines the same owner, group and other permissions as contained in the ACL."
msgstr ""

#. type: Plain text
#: original/man3/acl_equiv_mode.3:74
msgid ""
"On success, this function returns the value E<.Li 0> if E<.Va acl> is an "
"equivalent ACL, and the value E<.Li 1> if E<.Va acl> is not an equivalent "
"ACL. On error, the value E<.Li -1> is returned, and E<.Va errno> is set "
"appropriately."
msgstr ""

#. type: Plain text
#: original/man3/acl_equiv_mode.3:82
msgid ""
"If any of the following conditions occur, the E<.Fn acl_equiv_mode> function "
"returns the value E<.Li -1> and sets E<.Va errno> to the corresponding value:"
msgstr ""

#. type: Plain text
#: original/man3/acl_equiv_mode.3:94
msgid "E<.Xr acl_from_mode 3>, E<.Xr acl 5>"
msgstr ""

#. type: Plain text
#: original/man3/acl_error.3:29
msgid "E<.Nm acl_error>"
msgstr ""

#. type: Nd
#: original/man3/acl_error.3:29
#, no-wrap
msgid "convert an ACL error code to a text message"
msgstr ""

#. type: Plain text
#: original/man3/acl_error.3:37
msgid "E<.Ft const char *> E<.Fn acl_error \"int code\">"
msgstr ""

#. type: Plain text
#: original/man3/acl_error.3:46
msgid ""
"The E<.Fn acl_error> function converts an ACL error code such as returned by "
"the E<.Fn acl_check> function to a text message describing the error "
"condition. In the \\(lqPOSIX\\(rq locale, E<.Fn acl_check> returns the "
"following descriptions for the error codes."
msgstr ""

#. type: Plain text
#: original/man3/acl_error.3:49
msgid "\\(lqMultiple entries\\(rq"
msgstr ""

#. type: Plain text
#: original/man3/acl_error.3:51
msgid "\\(lqDuplicate entries\\(rq"
msgstr ""

#. type: Plain text
#: original/man3/acl_error.3:53
msgid "\\(lqMissing or wrong entry\\(rq"
msgstr ""

#. type: Plain text
#: original/man3/acl_error.3:55
msgid "\\(lqInvalid entry type\\(rq"
msgstr ""

#. type: Plain text
#: original/man3/acl_error.3:62
msgid ""
"The E<.Fn acl_error> function returns a text message if the error code is "
"recognized, and a value of E<.Li (const char *)NULL> otherwise."
msgstr ""

#. type: Plain text
#: original/man3/acl_error.3:69
msgid "E<.Xr acl_check 3>, E<.Xr acl_valid 3>, E<.Xr acl 5>"
msgstr ""

#. type: Dt
#: original/man3/acl_extended_fd.3:25
#, no-wrap
msgid "ACL_EXTENDED_FD 3"
msgstr ""

#. type: Plain text
#: original/man3/acl_extended_fd.3:29
msgid "E<.Nm acl_extended_fd>"
msgstr ""

#. type: Nd
#: original/man3/acl_extended_fd.3:29
#, no-wrap
msgid "test for information in the ACL by file descriptor"
msgstr ""

#. type: Plain text
#: original/man3/acl_extended_fd.3:37
msgid "E<.Ft int> E<.Fn acl_extended_fd \"int fd\">"
msgstr ""

#. type: Plain text
#: original/man3/acl_extended_fd.3:47
msgid ""
"The E<.Fn acl_extended_fd> function returns E<.Li 1> if the file identified "
"by the argument E<.Va fd> is associated with an extended access ACL. The "
"function returns E<.Li 0> if the file does not have an extended access ACL."
msgstr ""

#. type: Plain text
#: original/man3/acl_extended_fd.3:56
msgid ""
"An extended ACL is an ACL that contains entries other than the three "
"required entries of tag types ACL_USER_OBJ, ACL_GROUP_OBJ and ACL_OTHER.  If "
"the result of the E<.Fn acl_extended_fd> function for a file object is E<.Li "
"0>, then the ACL defines no discretionary access rights other than those "
"already defined by the traditional file permission bits."
msgstr ""

#. type: Plain text
#: original/man3/acl_extended_fd.3:62 original/man3/acl_extended_file.3:66
msgid ""
"Access to the file object may be further restricted by other mechanisms, "
"such as Mandatory Access Control schemes. The E<.Xr access 2> system call "
"can be used to check whether a given type of access to a file object would "
"be granted."
msgstr ""

#. type: Plain text
#: original/man3/acl_extended_fd.3:78
msgid ""
"If successful, the E<.Fn acl_extended_fd> function returns E<.Li 1> if the "
"file object identified by E<.Va fd> has an extended access ACL, and E<.Li 0> "
"if the file object identified by E<.Va fd> does not have an extended access "
"ACL. Otherwise, the value E<.Li -1> is returned and the global variable E<."
"Va errno> is set to indicate the error."
msgstr ""

#. type: Plain text
#: original/man3/acl_extended_fd.3:86
msgid ""
"If any of the following conditions occur, the E<.Fn acl_extended_fd> "
"function returns E<.Li -1> and sets E<.Va errno> to the corresponding value:"
msgstr ""

#. type: It
#: original/man3/acl_extended_fd.3:87 original/man3/acl_get_fd.3:73
#: original/man3/acl_set_fd.3:55
#, no-wrap
msgid "Bq Er EBADF"
msgstr ""

#. type: Plain text
#: original/man3/acl_extended_fd.3:91 original/man3/acl_get_fd.3:77
#: original/man3/acl_set_fd.3:59
msgid "The E<.Va fd> argument is not a valid file descriptor."
msgstr ""

#. type: Plain text
#: original/man3/acl_extended_fd.3:95 original/man3/acl_get_fd.3:83
msgid ""
"The file system on which the file identified by E<.Va fd> is located does "
"not support ACLs, or ACLs are disabled."
msgstr ""

#. type: Plain text
#: original/man3/acl_extended_fd.3:103
msgid "E<.Xr access 2>, E<.Xr acl_get_fd 3>, E<.Xr acl 5>"
msgstr ""

#. type: Dt
#: original/man3/acl_extended_file.3:25
#, no-wrap
msgid "ACL_EXTENDED_FILE 3"
msgstr ""

#. type: Plain text
#: original/man3/acl_extended_file.3:29
msgid "E<.Nm acl_extended_file, acl_extended_file_nofollow>"
msgstr ""

#. type: Nd
#: original/man3/acl_extended_file.3:29
#, no-wrap
msgid "test for information in ACLs by file name"
msgstr ""

#. type: Plain text
#: original/man3/acl_extended_file.3:39
msgid ""
"E<.Ft int> E<.Fn acl_extended_file \"const char *path_p\"> E<.Ft int> E<.Fn "
"acl_extended_file_nofollow \"const char *path_p\">"
msgstr ""

#. type: Plain text
#: original/man3/acl_extended_file.3:51
msgid ""
"The E<.Fn acl_extended_file> function returns E<.Li 1> if the file or "
"directory referred to by the argument E<.Va path_p> is associated with an "
"extended access ACL, or if the directory referred to by E<.Va path_p> is "
"associated with a default ACL. The function returns E<.Li 0> if the file has "
"neither an extended access ACL nor a default ACL."
msgstr ""

#. type: Plain text
#: original/man3/acl_extended_file.3:60
msgid ""
"An extended ACL is an ACL that contains entries other than the three "
"required entries of tag types ACL_USER_OBJ, ACL_GROUP_OBJ and ACL_OTHER.  If "
"the result of the E<.Fn acl_extended_file> function for a file object is E<."
"Li 0>, then ACLs define no discretionary access rights other than those "
"already defined by the traditional file permission bits."
msgstr ""

#. type: Plain text
#: original/man3/acl_extended_file.3:73
msgid ""
"E<.Fn acl_extended_file_nofollow> is identical to E<.Fn acl_extended_file>, "
"except in the case of a symbolic link, where the link itself is "
"interrogated, not the file that it refers to.  Since symbolic links have no "
"ACL themselves, the operation is supposed to fail on them."
msgstr ""

#. type: Plain text
#: original/man3/acl_extended_file.3:89
msgid ""
"If successful, the E<.Fn acl_extended_file> function returns E<.Li 1> if the "
"file object referred to by E<.Va path_p> has an extended access ACL or a "
"default ACL, and E<.Li 0> if the file object referred to by E<.Va path_p> "
"has neither an extended access ACL nor a default ACL. Otherwise, the value "
"E<.Li -1> is returned and the global variable E<.Va errno> is set to "
"indicate the error."
msgstr ""

#. type: Plain text
#: original/man3/acl_extended_file.3:97
msgid ""
"If any of the following conditions occur, the E<.Fn acl_extended_file> "
"function returns E<.Li -1> and sets E<.Va errno> to the corresponding value:"
msgstr ""

#. type: It
#: original/man3/acl_extended_file.3:98 original/man3/acl_get_file.3:95
#: original/man3/acl_set_file.3:95
#, no-wrap
msgid "Bq Er EACCES"
msgstr ""

#. type: Plain text
#: original/man3/acl_extended_file.3:100
msgid "Search permission is denied for a component of the path prefix."
msgstr ""

#. type: It
#: original/man3/acl_extended_file.3:100 original/man3/acl_get_file.3:107
#: original/man3/acl_set_file.3:121
#, no-wrap
msgid "Bq Er ENAMETOOLONG"
msgstr ""

#. type: Plain text
#: original/man3/acl_extended_file.3:104 original/man3/acl_get_file.3:111
#: original/man3/acl_set_file.3:125
msgid "The length of the argument E<.Va path_p> is too long."
msgstr ""

#. type: It
#: original/man3/acl_extended_file.3:104 original/man3/acl_get_file.3:111
#: original/man3/acl_set_file.3:125
#, no-wrap
msgid "Bq Er ENOENT"
msgstr ""

#. type: Plain text
#: original/man3/acl_extended_file.3:108 original/man3/acl_get_file.3:115
#: original/man3/acl_set_file.3:129
msgid ""
"The named object does not exist or the argument E<.Va path_p> points to an "
"empty string."
msgstr ""

#. type: It
#: original/man3/acl_extended_file.3:108 original/man3/acl_get_file.3:117
#: original/man3/acl_set_file.3:131
#, no-wrap
msgid "Bq Er ENOTDIR"
msgstr ""

#. type: Plain text
#: original/man3/acl_extended_file.3:110 original/man3/acl_get_file.3:119
#: original/man3/acl_set_file.3:133
msgid "A component of the path prefix is not a directory."
msgstr ""

#. type: Plain text
#: original/man3/acl_extended_file.3:122
msgid "E<.Xr access 2>, E<.Xr acl_get_file 3>, E<.Xr acl 5>"
msgstr ""

#. type: Dt
#: original/man3/acl_free.3:25
#, no-wrap
msgid "ACL_FREE 3"
msgstr ""

#. type: Plain text
#: original/man3/acl_free.3:29
msgid "E<.Nm acl_free>"
msgstr ""

#. type: Nd
#: original/man3/acl_free.3:29
#, no-wrap
msgid "release memory allocated to an ACL data object"
msgstr ""

#. type: Plain text
#: original/man3/acl_free.3:37
msgid "E<.Ft int> E<.Fn acl_free \"void *obj_p\">"
msgstr ""

#.  .Sh IMPLEMENTATION NOTES
#.  True64 prints a compile time warning for acl_free(text) if text was
#.  produced by acl_to_text(). Bad!
#. type: Plain text
#: original/man3/acl_free.3:51
msgid ""
"The E<.Fn acl_free> function frees any releasable memory currently allocated "
"by to the ACL data object identified by E<.Va obj_p>.  The argument E<.Va "
"obj_p> may identify an ACL, an ACL entry qualifier, or a pointer to a string "
"allocated by the E<.Fn acl_to_text> function."
msgstr ""

#. type: Plain text
#: original/man3/acl_free.3:53
msgid "E<.Rv -std acl_free>"
msgstr ""

#. type: Plain text
#: original/man3/acl_free.3:61
msgid ""
"If any of the following conditions occur, the E<.Fn acl_free> function "
"returns the value E<.Li -1> and and sets E<.Va errno> to the corresponding "
"value:"
msgstr ""

#. type: Plain text
#: original/man3/acl_free.3:66
msgid "The value of the argument E<.Va obj_p> is invalid."
msgstr ""

#. type: Plain text
#: original/man3/acl_free.3:78
msgid ""
"E<.Xr acl_copy_int 3>, E<.Xr acl_create_entry 3>, E<.Xr acl_dup 3>, E<.Xr "
"acl_from_text 3>, E<.Xr acl_get_fd>, E<.Xr acl_get_file 3>, E<.Xr acl_init "
"3>, E<.Xr acl 5>"
msgstr ""

#. type: Dt
#: original/man3/acl_from_mode.3:25
#, no-wrap
msgid "ACL_FROM_MODE 3"
msgstr ""

#. type: Plain text
#: original/man3/acl_from_mode.3:29
msgid "E<.Nm acl_from_mode>"
msgstr ""

#. type: Nd
#: original/man3/acl_from_mode.3:29
#, no-wrap
msgid "create an ACL from file permission bits"
msgstr ""

#. type: Plain text
#: original/man3/acl_from_mode.3:37
msgid "E<.Ft acl_t> E<.Fn acl_from_mode \"mode_t mode\">"
msgstr ""

#. type: Plain text
#: original/man3/acl_from_mode.3:45
msgid ""
"The E<.Fn acl_from_mode> function creates a minimal ACL that contains the "
"three entries with tag types ACL_USER_OBJ, ACL_GROUP_OBJ, and ACL_OTHER, "
"with permissions corresponding to the owner, group, and other permission "
"bits of its argument E<.Va mode>."
msgstr ""

#. type: Plain text
#: original/man3/acl_from_mode.3:52
msgid ""
"On success, this function returns a pointer to the working storage. On "
"error, a value of E<.Li (acl_t)NULL> is returned, and E<.Va errno> is set "
"appropriately."
msgstr ""

#. type: Plain text
#: original/man3/acl_from_mode.3:60
msgid ""
"If any of the following conditions occur, the E<.Fn acl_from_mode> function "
"returns a value of E<.Li (acl_t)NULL> and sets E<.Va errno> to the "
"corresponding value:"
msgstr ""

#. type: Plain text
#: original/man3/acl_from_mode.3:72
msgid "E<.Xr acl_equiv_mode 3>, E<.Xr acl_get_file 3>, E<.Xr acl 5>"
msgstr ""

#. type: Dt
#: original/man3/acl_from_text.3:25 original/man3/acl_to_text.3:25
#, no-wrap
msgid "ACL_FROM_TEXT 3"
msgstr ""

#. type: Plain text
#: original/man3/acl_from_text.3:29
msgid "E<.Nm acl_from_text>"
msgstr ""

#. type: Nd
#: original/man3/acl_from_text.3:29
#, no-wrap
msgid "create an ACL from text"
msgstr ""

#. type: Plain text
#: original/man3/acl_from_text.3:37
msgid "E<.Ft acl_t> E<.Fn acl_from_text \"const char *buf_p\">"
msgstr ""

#. type: Plain text
#: original/man3/acl_from_text.3:47
msgid ""
"The E<.Fn acl_from_text> function converts the text form of the ACL referred "
"to by E<.Va buf_p> into the internal form of an ACL and returns a pointer to "
"the working storage that contains the ACL. The E<.Fn acl_from_text> function "
"accepts as input the long text form and short text form of an ACL as "
"described in E<.Xr acl 5>."
msgstr ""

#. type: Plain text
#: original/man3/acl_from_text.3:56
msgid ""
"This function may cause memory to be allocated.  The caller should free any "
"releasable memory, when the new ACL is no longer required, by calling E<.Xr "
"acl_free 3> with the E<.Va (void*)acl_t> returned by E<.Fn acl_from_text> as "
"an argument."
msgstr ""

#. type: Plain text
#: original/man3/acl_from_text.3:71
msgid ""
"If any of the following conditions occur, the E<.Fn acl_from_text> function "
"returns a value of E<.Li (acl_t)NULL> and sets E<.Va errno> to the "
"corresponding value:"
msgstr ""

#. type: Plain text
#: original/man3/acl_from_text.3:76
msgid "The argument E<.Va buf_p> cannot be translated into an ACL."
msgstr ""

#. type: Plain text
#: original/man3/acl_from_text.3:89
msgid ""
"E<.Xr acl_free 3>, E<.Xr acl_get_entry 3>, E<.Xr acl_to_text 3>, E<.Xr acl 5>"
msgstr ""

#. type: Dt
#: original/man3/acl_get_entry.3:25
#, no-wrap
msgid "ACL_GET_ENTRY 3"
msgstr ""

#. type: Plain text
#: original/man3/acl_get_entry.3:29
msgid "E<.Nm acl_get_entry>"
msgstr ""

#. type: Nd
#: original/man3/acl_get_entry.3:29
#, no-wrap
msgid "get an ACL entry"
msgstr ""

#. type: Plain text
#: original/man3/acl_get_entry.3:37
msgid ""
"E<.Ft int> E<.Fn acl_get_entry \"acl_t acl\" \"int entry_id\" \"acl_entry_t "
"*entry_p\">"
msgstr ""

#. type: Plain text
#: original/man3/acl_get_entry.3:56
msgid ""
"The E<.Fn acl_get_entry> function obtains a descriptor for an ACL entry as "
"specified by E<.Va entry_id> within the ACL indicated by the argument E<.Va "
"acl>.  If the value of E<.Va entry_id> is ACL_FIRST_ENTRY, then the function "
"returns in E<.Va entry_p> a descriptor for the first ACL entry within E<.Va "
"acl>.  If the value of E<.Va entry_id > is ACL_NEXT_ENTRY, then the function "
"returns in E<.Va entry_p > a descriptor for the next ACL entry within E<.Va "
"acl>."
msgstr ""

#. type: Plain text
#: original/man3/acl_get_entry.3:80
msgid ""
"If a call is made to E<.Fn acl_get_entry> with E<.Va entry_id> set to "
"ACL_NEXT_ENTRY when there has not been either an initial successful call to "
"E<.Fn acl_get_entry>, or a previous successful call to E<.Fn acl_get_entry> "
"following a call to E<.Fn acl_calc_mask>, E<.Fn acl_copy_int>, E<.Fn "
"acl_create_entry>, E<.Fn acl_delete_entry>, E<.Fn acl_dup>, E<.Fn "
"acl_from_text>, E<.Fn acl_get_fd>, E<.Fn acl_get_file>, E<.Fn acl_set_fd>, "
"E<.Fn acl_set_file>, or E<.Fn acl_valid>, then the effect is unspecified."
msgstr ""

#. type: Plain text
#: original/man3/acl_get_entry.3:91
msgid ""
"Calls to E<.Fn acl_get_entry> do not modify any ACL entries. Subsequent "
"operations using the returned ACL entry descriptor operate on the ACL entry "
"within the ACL in working storage. The order of all existing entries in the "
"ACL remains unchanged.  Any existing ACL entry descriptors that refer to "
"entries within the ACL continue to refer to those entries. Any existing ACL "
"pointers that refer to the ACL referred to by E<.Va acl> continue to refer "
"to the ACL."
msgstr ""

#. type: Plain text
#: original/man3/acl_get_entry.3:111
msgid ""
"If the function successfully obtains an ACL entry, the function returns a "
"value of E<.Li 1>.  If the ACL has no ACL entries, the function returns the "
"value E<.Li 0>.  If the value of E<.Va entry_id> is ACL_NEXT_ENTRY and the "
"last ACL entry in the ACL has already been returned by a previous call to E<."
"Fn acl_get_entry>, the function returns the value E<.Li 0> until a "
"successful call with an E<.Va entry_id> of ACL_FIRST_ENTRY is made. "
"Otherwise, the value E<.Li -1> is returned and E<.Va errno> is set to "
"indicate the error."
msgstr ""

#. type: Plain text
#: original/man3/acl_get_entry.3:119
msgid ""
"If any of the following conditions occur, the E<.Fn acl_get_entry> function "
"returns E<.Li -1> and sets E<.Va errno> to the corresponding value:"
msgstr ""

#. type: Plain text
#: original/man3/acl_get_entry.3:128
msgid ""
"The argument E<.Va entry_id> is neither ACL_NEXT_ENTRY nor ACL_FIRST_ENTRY."
msgstr ""

#. type: Plain text
#: original/man3/acl_get_entry.3:138
msgid ""
"E<.Xr acl_calc_mask 3>, E<.Xr acl_create_entry 3>, E<.Xr acl_copy_entry 3>, "
"E<.Xr acl_delete_entry 3>, E<.Xr acl_get_file 3>, E<.Xr acl 5>"
msgstr ""

#. type: Dt
#: original/man3/acl_get_fd.3:25
#, no-wrap
msgid "ACL_GET_FD 3"
msgstr ""

#. type: Plain text
#: original/man3/acl_get_fd.3:29
msgid "E<.Nm acl_get_fd>"
msgstr ""

#. type: Nd
#: original/man3/acl_get_fd.3:29
#, no-wrap
msgid "get an ACL by file descriptor"
msgstr ""

#. type: Plain text
#: original/man3/acl_get_fd.3:37
msgid "E<.Ft acl_t> E<.Fn acl_get_fd \"int fd\">"
msgstr ""

#. type: Plain text
#: original/man3/acl_get_fd.3:45
msgid ""
"The E<.Fn acl_get_fd> function retrieves the access ACL associated with the "
"file referred to by E<.Va fd>.  The ACL is placed into working storage and "
"E<.Fn acl_get_fd> returns a pointer to that storage."
msgstr ""

#. type: Plain text
#: original/man3/acl_get_fd.3:48 original/man3/acl_get_file.3:48
msgid ""
"In order to read an ACL from an object, a process must have read access to "
"the object's attributes."
msgstr ""

#. type: Plain text
#: original/man3/acl_get_fd.3:57
msgid ""
"This function may cause memory to be allocated.  The caller should free any "
"releasable memory, when the new ACL is no longer required, by calling E<.Xr "
"acl_free 3> with the E<.Va (void*)acl_t> returned by E<.Fn acl_get_fd> as an "
"argument."
msgstr ""

#. type: Plain text
#: original/man3/acl_get_fd.3:64
msgid ""
"On success, this function shall return a pointer to the working storage.  On "
"error, a value of E<.Li (acl_t)NULL> shall be returned, and E<.Va errno> is "
"set appropriately."
msgstr ""

#. type: Plain text
#: original/man3/acl_get_fd.3:72
msgid ""
"If any of the following conditions occur, the E<.Fn acl_get_fd> function "
"returns a value of E<.Li (acl_t)NULL> and sets E<.Va errno> to the "
"corresponding value:"
msgstr ""

#. type: Plain text
#: original/man3/acl_get_fd.3:92
msgid ""
"E<.Xr acl_free 3>, E<.Xr acl_get_entry 3>, E<.Xr acl_get_file 3>, E<.Xr "
"acl_set_fd 3>, E<.Xr acl 5>"
msgstr ""

#. type: Dt
#: original/man3/acl_get_file.3:25
#, no-wrap
msgid "ACL_GET_FILE 3"
msgstr ""

#. type: Plain text
#: original/man3/acl_get_file.3:29
msgid "E<.Nm acl_get_file>"
msgstr ""

#. type: Nd
#: original/man3/acl_get_file.3:29
#, no-wrap
msgid "get an ACL by filename"
msgstr ""

#. type: Plain text
#: original/man3/acl_get_file.3:37
msgid ""
"E<.Ft acl_t> E<.Fn acl_get_file \"const char *path_p\" \"acl_type_t type\">"
msgstr ""

#. type: Plain text
#: original/man3/acl_get_file.3:45
msgid ""
"The E<.Fn acl_get_file> function retrieves the access ACL associated with a "
"file or directory, or the default ACL associated with a directory. The "
"pathname for the file or directory is pointed to by the argument E<.Va "
"path_p>.  The ACL is placed into working storage and E<.Fn acl_get_file> "
"returns a pointer to that storage."
msgstr ""

#. type: Plain text
#: original/man3/acl_get_file.3:70
msgid ""
"The value of the argument E<.Va type> is used to indicate whether the access "
"ACL or the default ACL associated with E<.Va path_p> is returned. If E<.Va "
"type> is ACL_TYPE_ACCESS, the access ACL of E<.Va path_p> is returned. If E<."
"Va type> is ACL_TYPE_DEFAULT, the default ACL of E<.Va path_p> is returned. "
"If E<.Va type> is ACL_TYPE_DEFAULT and no default ACL is associated with the "
"directory E<.Va path_p>, then an ACL containing zero ACL entries is "
"returned. If E<.Va type> specifies a type of ACL that cannot be associated "
"with E<.Va path_p>, then the function fails."
msgstr ""

#. type: Plain text
#: original/man3/acl_get_file.3:79
msgid ""
"This function may cause memory to be allocated.  The caller should free any "
"releasable memory, when the new ACL is no longer required, by calling E<.Xr "
"acl_free 3> with the E<.Va (void*)acl_t> returned by E<.Fn acl_get_file> as "
"an argument."
msgstr ""

#. type: Plain text
#: original/man3/acl_get_file.3:94
msgid ""
"If any of the following conditions occur, the E<.Fn acl_get_file> function "
"returns a value of E<.Li (acl_t)NULL> and sets E<.Va errno> to the "
"corresponding value:"
msgstr ""

#. type: Plain text
#: original/man3/acl_get_file.3:98 original/man3/acl_set_file.3:98
msgid ""
"Search permission is denied for a component of the path prefix or the object "
"exists and the process does not have appropriate access rights."
msgstr ""

#. type: Plain text
#: original/man3/acl_get_file.3:103 original/man3/acl_set_file.3:103
msgid ""
"Argument E<.Va type> specifies a type of ACL that cannot be associated with "
"E<.Va path_p>."
msgstr ""

#. type: Plain text
#: original/man3/acl_get_file.3:107
msgid "The argument E<.Va type> is not ACL_TYPE_ACCESS or ACL_TYPE_DEFAULT."
msgstr ""

#. type: Plain text
#: original/man3/acl_get_file.3:132
msgid ""
"E<.Xr acl_free 3>, E<.Xr acl_get_entry 3>, E<.Xr acl_get_fd 3>, E<.Xr "
"acl_set_file 3>, E<.Xr acl 5>"
msgstr ""

#. type: Dt
#: original/man3/acl_get_perm.3:25
#, no-wrap
msgid "ACL_GET_PERM 3"
msgstr ""

#. type: Plain text
#: original/man3/acl_get_perm.3:29
msgid "E<.Nm acl_get_perm>"
msgstr ""

#. type: Nd
#: original/man3/acl_get_perm.3:29
#, no-wrap
msgid "test for a permission in an ACL permission set"
msgstr ""

#. type: Plain text
#: original/man3/acl_get_perm.3:37
msgid ""
"E<.Ft int> E<.Fn acl_get_perm \"acl_permset_t permset_d\" \"acl_perm_t perm"
"\">"
msgstr ""

#. type: Plain text
#: original/man3/acl_get_perm.3:44
msgid ""
"The E<.Fn acl_get_perm> function tests if the permission specified by the "
"argument E<.Va perm> is contained in the ACL permission set pointed to by "
"the argument E<.Va permset_d>."
msgstr ""

#. type: Plain text
#: original/man3/acl_get_perm.3:65
msgid ""
"If successful, the E<.Fn acl_get_perm> function returns E<.Li 1> if the "
"permission specified by E<.Va perm> is contained in the ACL permission set "
"E<.Va permset_d>, and E<.Li 0> if the permission is not contained in the "
"permission set. Otherwise, the value E<.Li -1> is returned and the global "
"variable E<.Va errno> is set to indicate the error."
msgstr ""

#. type: Plain text
#: original/man3/acl_get_perm.3:73
msgid ""
"If any of the following conditions occur, the E<.Fn acl_get_perm> function "
"returns E<.Li -1> and sets E<.Va errno> to the corresponding value:"
msgstr ""

#. type: Plain text
#: original/man3/acl_get_perm.3:84
msgid "The argument E<.Va perm> is not a valid E<.Va acl_perm_t> value."
msgstr ""

#. type: Plain text
#: original/man3/acl_get_perm.3:95
msgid ""
"E<.Xr acl_add_perm 3>, E<.Xr acl_clear_perms 3>, E<.Xr acl_delete_perm 3>, "
"E<.Xr acl_get_permset 3>, E<.Xr acl_set_permset 3>, E<.Xr acl 5>"
msgstr ""

#. type: Dt
#: original/man3/acl_get_permset.3:25
#, no-wrap
msgid "ACL_GET_PERMSET 3"
msgstr ""

#. type: Plain text
#: original/man3/acl_get_permset.3:29
msgid "E<.Nm acl_get_permset>"
msgstr ""

#. type: Nd
#: original/man3/acl_get_permset.3:29
#, no-wrap
msgid "retrieve the permission set from an ACL entry"
msgstr ""

#. type: Plain text
#: original/man3/acl_get_permset.3:37
msgid ""
"E<.Ft int> E<.Fn acl_get_permset \"acl_entry_t entry_d\" \"acl_permset_t "
"*permset_p\">"
msgstr ""

#. type: Plain text
#: original/man3/acl_get_permset.3:45
msgid ""
"The E<.Fn acl_get_permset> function returns in E<.Va permset_p> a descriptor "
"to the permission set in the ACL entry indicated by E<.Va entry_d>.  "
"Subsequent operations using the returned permission set descriptor operate "
"on the permission set within the ACL entry."
msgstr ""

#. type: Plain text
#: original/man3/acl_get_permset.3:49
msgid ""
"Any ACL entry descriptors that refer to the entry referred to by E<.Va "
"entry_d> shall continue to refer to those entries."
msgstr ""

#. type: Plain text
#: original/man3/acl_get_permset.3:51
msgid "E<.Rv -std acl_get_permset>"
msgstr ""

#. type: Plain text
#: original/man3/acl_get_permset.3:59
msgid ""
"If any of the following conditions occur, the E<.Fn acl_get_permset> "
"function returns E<.Li -1> and sets E<.Va errno> to the corresponding value:"
msgstr ""

#. type: Plain text
#: original/man3/acl_get_permset.3:64 original/man3/acl_get_qualifier.3:102
#: original/man3/acl_get_tag_type.3:65 original/man3/acl_set_permset.3:67
#: original/man3/acl_set_qualifier.3:84 original/man3/acl_set_tag_type.3:63
msgid "The argument E<.Va entry_d> is not a valid descriptor for an ACL entry."
msgstr ""

#. type: Plain text
#: original/man3/acl_get_permset.3:78
msgid ""
"E<.Xr acl_add_perm 3>, E<.Xr acl_clear_perms 3>, E<.Xr acl_delete_perm 3>, "
"E<.Xr acl_get_perm 3>, E<.Xr acl_get_qualifier 3>, E<.Xr acl_get_tag_type "
"3>, E<.Xr acl_set_permset 3>, E<.Xr acl_set_qualifier 3>, E<.Xr "
"acl_set_tag_type 3>, E<.Xr acl 5>"
msgstr ""

#. type: Dt
#: original/man3/acl_get_qualifier.3:25
#, no-wrap
msgid "ACL_GET_QUALIFIER 3"
msgstr ""

#. type: Plain text
#: original/man3/acl_get_qualifier.3:29
msgid "E<.Nm acl_get_qualifier>"
msgstr ""

#. type: Nd
#: original/man3/acl_get_qualifier.3:29
#, no-wrap
msgid "retrieve the qualifier from an ACL entry"
msgstr ""

#. type: Plain text
#: original/man3/acl_get_qualifier.3:37
msgid "E<.Ft void *> E<.Fn acl_get_qualifier \"acl_entry_t entry_d\">"
msgstr ""

#. type: Plain text
#: original/man3/acl_get_qualifier.3:43
msgid ""
"The E<.Fn acl_get_qualifier> function retrieves the qualifier from the ACL "
"entry indicated by the argument E<.Va entry_d> into working storage and "
"returns a pointer to that storage."
msgstr ""

#. type: Plain text
#: original/man3/acl_get_qualifier.3:64
msgid ""
"If the value of the tag type in the ACL entry referred to by E<.Va entry_d> "
"is ACL_USER, then the value returned by E<.Fn acl_get_qualifier> is a "
"pointer to type E<.Va uid_t>.  If the value of the tag type in the ACL entry "
"referred to by E<.Va entry_d> is ACL_GROUP, then the value returned by E<.Fn "
"acl_get_qualifier> is a pointer to type E<.Va gid_t>.  If the tag type in "
"the ACL entry referred to by E<.Va entry_d> is a tag type for which a "
"qualifier is not supported, E<.Fn acl_get_qualifier> returns a value of E<."
"Li (void *)NULL> and the function fails. Subsequent operations using the "
"returned pointer operate on an independent copy of the qualifier in working "
"storage, and will not change the qualifier of the ACL entry."
msgstr ""

#. type: Plain text
#: original/man3/acl_get_qualifier.3:73
msgid ""
"This function may cause memory to be allocated. The caller should free any "
"releasable memory, when the new qualifier is no longer required, by calling "
"E<.Fn acl_free> with the E<.Va void *> value returned by E<.Fn "
"acl_get_qualifier> as an argument."
msgstr ""

#. type: Plain text
#: original/man3/acl_get_qualifier.3:83
msgid ""
"The argument E<.Va entry_d> and any other ACL entry descriptors that refer "
"to entries within the ACL containing the entry referred to by E<.Va entry_d> "
"continue to refer to those entries. The order of all existing entries in the "
"ACL containing the entry referred to by E<.Va entry_d> remains unchanged."
msgstr ""

#. type: Plain text
#: original/man3/acl_get_qualifier.3:89
msgid ""
"On success, the function returns a pointer to the tag qualifier that was "
"retrieved into ACL working storage. On error, a value of E<.Li (void *)NULL> "
"is returned and E<.Va errno> is set appropriately."
msgstr ""

#. type: Plain text
#: original/man3/acl_get_qualifier.3:97
msgid ""
"If any of the following conditions occur, the E<.Fn acl_get_qualifier> "
"function returns E<.Li (void *)NULL> and sets E<.Va errno> to the "
"corresponding value:"
msgstr ""

#. type: Plain text
#: original/man3/acl_get_qualifier.3:106 original/man3/acl_set_qualifier.3:88
msgid ""
"The value of the tag type in the ACL entry referenced by the argument E<.Va "
"entry_d> is neither ACL_USER nor ACL_GROUP."
msgstr ""

#. type: Plain text
#: original/man3/acl_get_qualifier.3:108
msgid ""
"The value to be returned requires more memory than is allowed by the "
"hardware or system-imposed memory management constraints."
msgstr ""

#. type: Plain text
#: original/man3/acl_get_qualifier.3:121
msgid ""
"E<.Xr acl_create_entry 3>, E<.Xr acl_free 3>, E<.Xr acl_get_entry 3>, E<.Xr "
"acl_get_permset 3>, E<.Xr acl_get_tag_type 3>, E<.Xr acl_set_permset 3>, E<."
"Xr acl_set_qualifier 3>, E<.Xr acl_set_tag_type 3>, E<.Xr acl 5>"
msgstr ""

#. type: Dt
#: original/man3/acl_get_tag_type.3:25
#, no-wrap
msgid "ACL_GET_TAG_TYPE 3"
msgstr ""

#. type: Plain text
#: original/man3/acl_get_tag_type.3:29
msgid "E<.Nm acl_get_tag_type>"
msgstr ""

#. type: Nd
#: original/man3/acl_get_tag_type.3:29
#, no-wrap
msgid "get the tag type of an ACL entry"
msgstr ""

#. type: Plain text
#: original/man3/acl_get_tag_type.3:37
msgid ""
"E<.Ft int> E<.Fn acl_get_tag_type \"acl_entry_t entry_d\" \"acl_tag_t "
"*tag_type_p\">"
msgstr ""

#. type: Plain text
#: original/man3/acl_get_tag_type.3:44
msgid ""
"The E<.Fn acl_get_tag_type> function assigns to the value pointed to by E<."
"Va tag_type_p> the tag type for the ACL entry indicated by the argument E<."
"Va entry_d>."
msgstr ""

#. type: Plain text
#: original/man3/acl_get_tag_type.3:50
msgid ""
"The argument E<.Va entry_d> and any other ACL entry descriptors that refer "
"to entries in the same ACL continue to refer to those entries. The order of "
"all existing entries in the ACL remain unchanged."
msgstr ""

#. type: Plain text
#: original/man3/acl_get_tag_type.3:52
msgid "E<.Rv -std acl_get_tag_type>"
msgstr ""

#. type: Plain text
#: original/man3/acl_get_tag_type.3:60
msgid ""
"If any of the following conditions occur, the E<.Fn acl_get_tag_type> "
"function returns E<.Li -1> and sets E<.Va errno> to the corresponding value:"
msgstr ""

#. type: Plain text
#: original/man3/acl_get_tag_type.3:77
msgid ""
"E<.Xr acl_create_entry 3>, E<.Xr acl_get_entry 3>, E<.Xr acl_get_permset 3>, "
"E<.Xr acl_get_qualifier 3>, E<.Xr acl_set_permset 3>, E<.Xr "
"acl_set_qualifier 3>, E<.Xr acl_set_tag_type 3>, E<.Xr acl 5>"
msgstr ""

#. type: Dt
#: original/man3/acl_init.3:25
#, no-wrap
msgid "ACL_INIT 3"
msgstr ""

#. type: Plain text
#: original/man3/acl_init.3:29
msgid "E<.Nm acl_init>"
msgstr ""

#. type: Nd
#: original/man3/acl_init.3:29
#, no-wrap
msgid "initialize ACL working storage"
msgstr ""

#. type: Plain text
#: original/man3/acl_init.3:37
msgid "E<.Ft acl_t> E<.Fn acl_init \"int count\">"
msgstr ""

#. type: Plain text
#: original/man3/acl_init.3:44
msgid ""
"The E<.Fn acl_init> function allocates and initializes the working storage "
"for an ACL of at least E<.Va count> ACL entries.  The ACL created initially "
"contains no ACL entries.  A pointer to the working storage is returned."
msgstr ""

#. type: Plain text
#: original/man3/acl_init.3:53
msgid ""
"This function may cause memory to be allocated.  The caller should free any "
"releasable memory, when the new ACL is no longer required, by calling E<.Xr "
"acl_free 3> with the E<.Va (void*)acl_t> returned by E<.Fn acl_init> as an "
"argument."
msgstr ""

#. type: Plain text
#: original/man3/acl_init.3:68
msgid ""
"If any of the following conditions occur, the E<.Fn acl_init> function "
"returns a value of E<.Li (acl_t)NULL> and sets E<.Va errno> to the "
"corresponding value:"
msgstr ""

#. type: Plain text
#: original/man3/acl_init.3:71
msgid "The value of count is less than zero."
msgstr ""

#. type: Plain text
#: original/man3/acl_init.3:83
msgid "E<.Xr acl_get_file 3>, E<.Xr acl_free 3>, E<.Xr acl 5>"
msgstr ""

#. type: Dt
#: original/man3/acl_set_fd.3:25
#, no-wrap
msgid "ACL_SET_FD 3"
msgstr ""

#. type: Plain text
#: original/man3/acl_set_fd.3:29
msgid "E<.Nm acl_set_fd>"
msgstr ""

#. type: Nd
#: original/man3/acl_set_fd.3:29
#, no-wrap
msgid "set an ACL by file descriptor"
msgstr ""

#. type: Plain text
#: original/man3/acl_set_fd.3:37
msgid "E<.Ft int> E<.Fn acl_set_fd \"int fd\" \"acl_t acl\">"
msgstr ""

#. type: Plain text
#: original/man3/acl_set_fd.3:42
msgid ""
"The E<.Fn acl_set_fd> function associates an access ACL with the file "
"referred to by E<.Va fd>."
msgstr ""

#. type: Plain text
#: original/man3/acl_set_fd.3:44
msgid ""
"The effective user ID of the process must match the owner of the file or the "
"process must have the CAP_FOWNER capability for the request to succeed."
msgstr ""

#. type: Plain text
#: original/man3/acl_set_fd.3:46
msgid "E<.Rv -std acl_set_fd>"
msgstr ""

#. type: Plain text
#: original/man3/acl_set_fd.3:54
msgid ""
"If any of the following conditions occur, the E<.Fn acl_set_fd> function "
"returns the value E<.Li -1> and and sets E<.Va errno> to the corresponding "
"value:"
msgstr ""

#. type: Plain text
#: original/man3/acl_set_fd.3:63 original/man3/acl_set_file.3:107
#: original/man3/acl_valid.3:70
msgid "The argument E<.Va acl> does not point to a valid ACL."
msgstr ""

#. type: Plain text
#: original/man3/acl_set_fd.3:67
msgid ""
"The ACL has more entries than the file referred to by E<.Va fd> can obtain."
msgstr ""

#. type: It
#: original/man3/acl_set_fd.3:67 original/man3/acl_set_file.3:129
#, no-wrap
msgid "Bq Er ENOSPC"
msgstr ""

#. type: Plain text
#: original/man3/acl_set_fd.3:69 original/man3/acl_set_file.3:131
msgid ""
"The directory or file system that would contain the new ACL cannot be "
"extended or the file system is out of file allocation resources."
msgstr ""

#. type: Plain text
#: original/man3/acl_set_fd.3:74
msgid ""
"The file identified by E<.Va fd > cannot be associated with the ACL because "
"the file system on which the file is located does not support this."
msgstr ""

#. type: Plain text
#: original/man3/acl_set_fd.3:76 original/man3/acl_set_file.3:140
msgid ""
"The process does not have appropriate privilege to perform the operation to "
"set the ACL."
msgstr ""

#. type: Plain text
#: original/man3/acl_set_fd.3:87
msgid ""
"E<.Xr acl_delete_def_file 3>, E<.Xr acl_get_file 3>, E<.Xr acl_set_file 3>, "
"E<.Xr acl_valid 3>, E<.Xr acl 5>"
msgstr ""

#. type: Dt
#: original/man3/acl_set_file.3:25
#, no-wrap
msgid "ACL_SET_FILE 3"
msgstr ""

#. type: Plain text
#: original/man3/acl_set_file.3:29
msgid "E<.Nm acl_set_file>"
msgstr ""

#. type: Nd
#: original/man3/acl_set_file.3:29
#, no-wrap
msgid "set an ACL by filename"
msgstr ""

#. type: Plain text
#: original/man3/acl_set_file.3:37
msgid ""
"E<.Ft int> E<.Fn acl_set_file \"const char *path_p\" \"acl_type_t type\" "
"\"acl_t acl\">"
msgstr ""

#. type: Plain text
#: original/man3/acl_set_file.3:44
msgid ""
"The E<.Fn acl_set_file> function associates an access ACL with a file or "
"directory, or associates a default ACL with a directory. The pathname for "
"the file or directory is pointed to by the argument E<.Va path_p>."
msgstr ""

#. type: Plain text
#: original/man3/acl_set_file.3:67
msgid ""
"The value of the argument E<.Va type> is used to indicate whether the access "
"ACL or the default ACL associated with E<.Va path_p> is being set. If the E<."
"Va type> parameter is ACL_TYPE_ACCESS, the access ACL of E<.Va path_p> shall "
"be set. If the E<.Va type> parameter is ACL_TYPE_DEFAULT, the default ACL of "
"E<.Va path_p> shall be set. If the argument E<.Va type> specifies a type of "
"ACL that cannot be associated with E<.Va path_p>, then the function fails."
msgstr ""

#. type: Plain text
#: original/man3/acl_set_file.3:84
msgid ""
"The E<.Va acl> parameter must reference a valid ACL according to the rules "
"described on the E<.Xr acl_valid 3> manual page if the E<.Va type> parameter "
"is ACL_TYPE_ACCESS, and must either reference a valid ACL or an ACL with "
"zero ACL entries if the E<.Va type> parameter is ACL_TYPE_DEFAULT. If the E<."
"Va acl> parameter references an empty ACL, then the E<.Fn acl_set_file> "
"function removes any default ACL associated with the directory referred to "
"by the E<.Va path_p> parameter."
msgstr ""

#. type: Plain text
#: original/man3/acl_set_file.3:86
msgid "E<.Rv -std acl_set_file>"
msgstr ""

#. type: Plain text
#: original/man3/acl_set_file.3:94
msgid ""
"If any of the following conditions occur, the E<.Fn acl_set_file> function "
"returns E<.Li -1> and sets E<.Va errno> to the corresponding value:"
msgstr ""

#. type: Plain text
#: original/man3/acl_set_file.3:111
msgid ""
"The ACL has more entries than the file referred to by E<.Va path_p> can "
"obtain."
msgstr ""

#. type: Plain text
#: original/man3/acl_set_file.3:115
msgid "The E<.Va type> parameter is not ACL_TYPE_ACCESS or ACL_TYPE_DEFAULT."
msgstr ""

#. type: Plain text
#: original/man3/acl_set_file.3:121
msgid ""
"The E<.Va type> parameter is ACL_TYPE_DEFAULT, but the file referred to by "
"E<.Va path_p> is not a directory."
msgstr ""

#. type: Plain text
#: original/man3/acl_set_file.3:138
msgid ""
"The file identified by E<.Va path_p > cannot be associated with the ACL "
"because the file system on which the file is located does not support this."
msgstr ""

#. type: Plain text
#: original/man3/acl_set_file.3:158
msgid ""
"The behavior of E<.Fn acl_set_file> when the E<.Va acl> parameter refers to "
"an empty ACL and the E<.Va type> parameter is ACL_TYPE_DEFAULT is an "
"extension in the Linux implementation, in order that all values returned by "
"E<.Fn acl_get_file> can be passed to E<.Fn acl_set_file>.  The POSIX.1e "
"function for removing a default ACL is E<.Fn acl_delete_def_file>."
msgstr ""

#. type: Plain text
#: original/man3/acl_set_file.3:164
msgid ""
"E<.Xr acl_delete_def_file 3>, E<.Xr acl_get_file 3>, E<.Xr acl_set_fd 3>, E<."
"Xr acl_valid 3>, E<.Xr acl 5>"
msgstr ""

#. type: Dt
#: original/man3/acl_set_permset.3:25
#, no-wrap
msgid "ACL_SET_PERMSET 3"
msgstr ""

#. type: Plain text
#: original/man3/acl_set_permset.3:29
msgid "E<.Nm acl_set_permset>"
msgstr ""

#. type: Nd
#: original/man3/acl_set_permset.3:29
#, no-wrap
msgid "set the permission set in an ACL entry"
msgstr ""

#. type: Plain text
#: original/man3/acl_set_permset.3:37
msgid ""
"E<.Ft int> E<.Fn acl_set_permset \"acl_entry_t entry_d\" \"acl_permset_t "
"permset_d\">"
msgstr ""

#. type: Plain text
#: original/man3/acl_set_permset.3:44
msgid ""
"The E<.Fn acl_set_permset> function sets the permission set of the ACL entry "
"indicated by the argument E<.Va entry_d > to the permissions contained in "
"the argument E<.Va permset_d>."
msgstr ""

#. type: Plain text
#: original/man3/acl_set_permset.3:52
msgid ""
"Any ACL entry descriptors that refer to the entry containing the permission "
"set referred to by E<.Va permset_d> shall continue to refer to those "
"entries. Any ACL entry descriptors that refer to the entry referred to by E<."
"Va entry_d> shall continue to refer to that entry."
msgstr ""

#. type: Plain text
#: original/man3/acl_set_permset.3:54
msgid "E<.Rv -std acl_set_permset>"
msgstr ""

#. type: Plain text
#: original/man3/acl_set_permset.3:62
msgid ""
"If any of the following conditions occur, the E<.Fn acl_set_permset> "
"function returns E<.Li -1> and sets E<.Va errno> to the corresponding value:"
msgstr ""

#.  <AG>
#.  The following condition seems strange.
#.  </AG>
#. type: Plain text
#: original/man3/acl_set_permset.3:80
msgid ""
"The argument E<.Va permset_d> contains values which are not valid E<.Va "
"acl_permset_t> values."
msgstr ""

#. type: Plain text
#: original/man3/acl_set_permset.3:94
msgid ""
"E<.Xr acl_add_perm 3>, E<.Xr acl_clear_perms 3>, E<.Xr acl_delete_perm 3>, "
"E<.Xr acl_get_perm 3>, E<.Xr acl_get_permset 3>, E<.Xr acl_get_qualifier 3>, "
"E<.Xr acl_get_tag_type 3>, E<.Xr acl_set_qualifier 3>, E<.Xr "
"acl_set_tag_type 3>, E<.Xr acl 5>"
msgstr ""

#. type: Dt
#: original/man3/acl_set_qualifier.3:25
#, no-wrap
msgid "ACL_SET_QUALIFIER 3"
msgstr ""

#. type: Plain text
#: original/man3/acl_set_qualifier.3:29
msgid "E<.Nm acl_set_qualifier>"
msgstr ""

#. type: Nd
#: original/man3/acl_set_qualifier.3:29
#, no-wrap
msgid "set the qualifier of an ACL entry"
msgstr ""

#. type: Plain text
#: original/man3/acl_set_qualifier.3:37
msgid ""
"E<.Ft int> E<.Fn acl_set_qualifier \"acl_entry_t entry_d\" \"const void "
"*qualifier_p\">"
msgstr ""

#. type: Plain text
#: original/man3/acl_set_qualifier.3:61
msgid ""
"The E<.Fn acl_set_qualifier> function sets the qualifier of the ACL entry "
"indicated by the argument E<.Va entry_d> to the value referred to by the "
"argument E<.Va qualifier_p>.  If the value of the tag type in the ACL entry "
"referred to by E<.Va entry_d> is ACL_USER, then the value referred to by E<."
"Va qualifier_p> shall be of type E<.Va uid_t>.  If the value of the tag type "
"in the ACL entry referred to by E<.Va entry_d> is ACL_GROUP, then the value "
"referred to by E<.Va qualifier_p> shall be of type E<.Va gid_t>.  If the "
"value of the tag type in the ACL entry referred to by E<.Va entry_d> is a "
"tag type for which a qualifier is not supported, E<.Fn acl_set_qualifier> "
"returns an error."
msgstr ""

#. type: Plain text
#: original/man3/acl_set_qualifier.3:69
msgid ""
"Any ACL entry descriptors that refer to the entry referred to by E<.Va "
"entry_d> continue to refer to that entry. This function may cause memory to "
"be allocated. The caller should free any releasable memory, when the ACL is "
"no longer required, by calling E<.Fn acl_free> with a pointer to the ACL as "
"argument."
msgstr ""

#. type: Plain text
#: original/man3/acl_set_qualifier.3:71
msgid "E<.Rv -std acl_set_qualifier>"
msgstr ""

#. type: Plain text
#: original/man3/acl_set_qualifier.3:79
msgid ""
"If any of the following conditions occur, the E<.Fn acl_set_qualifier> "
"function returns E<.Li -1> and sets E<.Va errno> to the corresponding value:"
msgstr ""

#. type: Plain text
#: original/man3/acl_set_qualifier.3:92
msgid "The value pointed to by the argument E<.Va qualifier_p> is not valid."
msgstr ""

#. type: Plain text
#: original/man3/acl_set_qualifier.3:96
msgid ""
"The E<.Fn acl_set_qualifier> function is unable to allocate the memory "
"required for the ACL qualifier."
msgstr ""

#. type: Plain text
#: original/man3/acl_set_qualifier.3:109
msgid ""
"E<.Xr acl_create_entry 3>, E<.Xr acl_free 3>, E<.Xr acl_get_permset 3>, E<."
"Xr acl_get_qualifier 3>, E<.Xr acl_get_tag_type 3>, E<.Xr acl_set_entry 3>, "
"E<.Xr acl_set_permset 3>, E<.Xr acl_set_tag_type 3>, E<.Xr acl 5>"
msgstr ""

#. type: Dt
#: original/man3/acl_set_tag_type.3:25
#, no-wrap
msgid "ACL_SET_TAG_TYPE 3"
msgstr ""

#. type: Plain text
#: original/man3/acl_set_tag_type.3:29
msgid "E<.Nm acl_set_tag_type>"
msgstr ""

#. type: Nd
#: original/man3/acl_set_tag_type.3:29
#, no-wrap
msgid "set the tag type of an ACL entry"
msgstr ""

#. type: Plain text
#: original/man3/acl_set_tag_type.3:37
msgid ""
"E<.Ft int> E<.Fn acl_set_tag_type \"acl_entry_t entry_d\" \"acl_tag_t "
"tag_type\">"
msgstr ""

#. type: Plain text
#: original/man3/acl_set_tag_type.3:44
msgid ""
"The E<.Fn acl_set_tag_type> function sets the tag type of the ACL entry "
"indicated by the argument E<.Va entry_d> to the value of the argument E<.Va "
"tag_type>."
msgstr ""

#. type: Plain text
#: original/man3/acl_set_tag_type.3:48
msgid ""
"Any ACL entry descriptors that refer to the entry referred to by E<.Va "
"entry_d> continue to refer to that entry."
msgstr ""

#. type: Plain text
#: original/man3/acl_set_tag_type.3:50
msgid "E<.Rv -std acl_set_tag_type>"
msgstr ""

#. type: Plain text
#: original/man3/acl_set_tag_type.3:58
msgid ""
"If any of the following conditions occur, the E<.Fn acl_set_tag_type> "
"function returns E<.Li -1> and sets E<.Va errno> to the corresponding value:"
msgstr ""

#. type: Plain text
#: original/man3/acl_set_tag_type.3:67
msgid "The argument E<.Va tag_type> is not a valid tag type."
msgstr ""

#. type: Plain text
#: original/man3/acl_set_tag_type.3:79
msgid ""
"E<.Xr acl_create_entry 3>, E<.Xr acl_get_permset 3>, E<.Xr acl_get_qualifier "
"3>, E<.Xr acl_get_tag_type 3>, E<.Xr acl_set_entry 3>, E<.Xr acl_set_permset "
"3>, E<.Xr acl_set_qualifier 3>, E<.Xr acl 5>"
msgstr ""

#. type: Dt
#: original/man3/acl_size.3:25
#, no-wrap
msgid "ACL_SIZE 3"
msgstr ""

#. type: Plain text
#: original/man3/acl_size.3:29
msgid "E<.Nm acl_size>"
msgstr ""

#. type: Nd
#: original/man3/acl_size.3:29
#, no-wrap
msgid "get the size of the external representation of an ACL"
msgstr ""

#. type: Plain text
#: original/man3/acl_size.3:37
msgid "E<.Ft ssize_t> E<.Fn acl_size \"acl_t acl\">"
msgstr ""

#. type: Plain text
#: original/man3/acl_size.3:44
msgid ""
"The E<.Fn acl_size> function return the size, in bytes, of the buffer "
"required to hold the exportable, contiguous, persistent form of the ACL "
"pointed to by the argument E<.Va acl>, when converted by E<.Fn acl_copy_ext>."
msgstr ""

#. type: Plain text
#: original/man3/acl_size.3:53
msgid ""
"Any existing ACL entry descriptors that refer to entries in E<.Va acl> "
"continue to refer to the same entries. Any existing ACL pointers that refer "
"to the ACL referred to by E<.Va acl> continue to refer to the ACL. The order "
"of ACL entries within E<.Va acl> remains unchanged."
msgstr ""

#. type: Plain text
#: original/man3/acl_size.3:62
msgid ""
"On success, the E<.Fn acl_size> function returns the size in bytes of the "
"contiguous, persistent form of the ACL. On error, a value of E<.Li "
"(ssize_t)-1> is returned and E<.Va errno> is set appropriately."
msgstr ""

#. type: Plain text
#: original/man3/acl_size.3:70
msgid ""
"If any of the following conditions occur, the E<.Fn acl_size> function "
"returns a value of E<.Li (ssize_t)-1> and sets E<.Va errno> to the "
"corresponding value:"
msgstr ""

#. type: Plain text
#: original/man3/acl_size.3:81
msgid "E<.Xr acl_copy_ext 3>, E<.Xr acl 5>"
msgstr ""

#. type: Dd
#: original/man3/acl_to_any_text.3:24
#, no-wrap
msgid "March 25, 2002"
msgstr ""

#. type: Dt
#: original/man3/acl_to_any_text.3:25
#, no-wrap
msgid "ACL_TO_ANY_TEXT 3"
msgstr ""

#. type: Plain text
#: original/man3/acl_to_any_text.3:29
msgid "E<.Nm acl_to_any_text>"
msgstr ""

#. type: Nd
#: original/man3/acl_to_any_text.3:29 original/man3/acl_to_text.3:29
#, no-wrap
msgid "convert an ACL to text"
msgstr ""

#. type: Plain text
#: original/man3/acl_to_any_text.3:42
msgid ""
"E<.Ft char *> E<.Fo acl_to_any_text> E<.Fa \"acl_t acl\"> E<.Fa \"const char "
"*prefix\"> E<.Fa \"char separator\"> E<.Fa \"int options\"> E<.Fc>"
msgstr ""

#. type: Plain text
#: original/man3/acl_to_any_text.3:61
msgid ""
"The E<.Fn acl_to_any_text> function translates the ACL pointed to by the "
"argument E<.Va acl> into a E<.Li NULL> terminated character string. This "
"character string is composed of the ACL entries contained in E<.Va acl>, in "
"the entry text format described on E<.Xr acl 5>.  Entries are separated from "
"each other by the E<.Va separator> character. If the argument E<.Va prefix> "
"is not E<.Li (const char *)NULL>, each entry is prefixed by this character "
"string."
msgstr ""

#. type: Plain text
#: original/man3/acl_to_any_text.3:77
msgid ""
"If the argument E<.Va options> is E<.Li 0>, ACL entries are converted using "
"the entry tag type keywords E<.Li user , group , mask>, and E<.Li other>.  "
"User IDs and group IDs of ACL entries that contain such qualifiers are "
"converted to their corresponding names; if an identifier has no "
"corresponding name, a decimal number string is produced. The ACL text "
"representation contains no additional comments.  A bitwise combinations of "
"the following E<.Va options> can be used to modify the result:"
msgstr ""

#. type: It
#: original/man3/acl_to_any_text.3:78
#, no-wrap
msgid "TEXT_ABBREVIATE"
msgstr ""

#. type: Plain text
#: original/man3/acl_to_any_text.3:96
msgid ""
"Instead of the full tag type keywords, single letter abbreviations are "
"used.  The abbreviation for E<.Li user> is E<.Li u>, the abbreviation for E<."
"Li group> is E<.Li g>, the abbreviation for E<.Li mask> is E<.Li m>, and the "
"abbreviation for E<.Li other> is E<.Li o>."
msgstr ""

#. type: It
#: original/man3/acl_to_any_text.3:96
#, no-wrap
msgid "TEXT_NUMERIC_IDS"
msgstr ""

#. type: Plain text
#: original/man3/acl_to_any_text.3:98
msgid ""
"User IDs and group IDs are included as decimal numbers instead of names."
msgstr ""

#. type: It
#: original/man3/acl_to_any_text.3:98
#, no-wrap
msgid "TEXT_SOME_EFFECTIVE"
msgstr ""

#. type: Plain text
#: original/man3/acl_to_any_text.3:103
msgid ""
"A comment containing the effective permissions of the ACL entry is included "
"after ACL entries that contain permissions which are ineffective because "
"they are masked by an ACL_MASK entry. The ACL entry and the comment are "
"separated by a tab character."
msgstr ""

#. type: It
#: original/man3/acl_to_any_text.3:103
#, no-wrap
msgid "TEXT_ALL_EFFECTIVE"
msgstr ""

#. type: Plain text
#: original/man3/acl_to_any_text.3:109
msgid ""
"A comment containing the effective permissions of the ACL entry is included "
"after all ACL entries that are affected by an ACL_MASK entry.  The comment "
"is included even if the permissions contained in the ACL entry equal the "
"effective permissions. The ACL entry and the comment are separated by a tab "
"character."
msgstr ""

#. type: It
#: original/man3/acl_to_any_text.3:109
#, no-wrap
msgid "TEXT_SMART_INDENT"
msgstr ""

#. type: Plain text
#: original/man3/acl_to_any_text.3:115
msgid ""
"This option is used in combination with the TEXT_SOME_EFFECTIVE or "
"TEXT_ALL_EFFECTIVE option. The number of tab characters inserted between the "
"ACL entry and the comment is increased so that the comment is aligned to the "
"fourth tab stop position.  A tab width of 8 characters is assumed."
msgstr ""

#. type: Plain text
#: original/man3/acl_to_any_text.3:120
msgid "The ACL referred to by E<.Va acl> is not changed."
msgstr ""

#. type: Plain text
#: original/man3/acl_to_any_text.3:130
msgid ""
"This function allocates any memory necessary to contain the string and "
"returns a pointer to the string.  The caller should free any releasable "
"memory, when the new string is no longer required, by calling E<.Fn "
"acl_free> with the E<.Va (void*)char> returned by E<.Fn acl_to_any_text> as "
"an argument."
msgstr ""

#. type: Plain text
#: original/man3/acl_to_any_text.3:137
msgid ""
"On success, this function returns a pointer to the text representation of "
"the ACL.  On error, a value of E<.Li (char *)NULL> is returned, and E<.Va "
"errno> is set appropriately."
msgstr ""

#. type: Plain text
#: original/man3/acl_to_any_text.3:145
msgid ""
"If any of the following conditions occur, the E<.Fn acl_to_any_text> "
"function returns a value of E<.Li (char *)NULL> and sets E<.Va errno> to the "
"corresponding value:"
msgstr ""

#. type: Plain text
#: original/man3/acl_to_any_text.3:155
msgid ""
"The ACL referenced by E<.Va acl> contains one or more improperly formed ACL "
"entries, or for some other reason cannot be translated into the text form of "
"an ACL."
msgstr ""

#. type: Plain text
#: original/man3/acl_to_any_text.3:158 original/man3/acl_to_text.3:99
msgid ""
"The character string to be returned requires more memory than is allowed by "
"the hardware or system-imposed memory management constraints."
msgstr ""

#. type: Plain text
#: original/man3/acl_to_any_text.3:167
msgid ""
"E<.Xr acl_from_text 3>, E<.Xr acl_to_text 3>, E<.Xr acl_free 3>, E<.Xr acl 5>"
msgstr ""

#. type: Plain text
#: original/man3/acl_to_text.3:29
msgid "E<.Nm acl_to_text>"
msgstr ""

#. type: Plain text
#: original/man3/acl_to_text.3:37
msgid "E<.Ft char *> E<.Fn acl_to_text \"acl_t acl\" \"ssize_t *len_p\">"
msgstr ""

#. type: Plain text
#: original/man3/acl_to_text.3:60
msgid ""
"The E<.Fn acl_to_text> function translates the ACL pointed to by the "
"argument E<.Va acl> into a E<.Li NULL> terminated character string.  If the "
"pointer E<.Va len_p> is not E<.Li NULL>, then the function returns the "
"length of the string (not including the E<.Li NULL> terminator) in the "
"location pointed to by E<.Va len_p>.  The format of the text string returned "
"by E<.Fn acl_to_text> is the long text form defined in E<.Xr acl 5>.  The "
"ACL referred to by E<.Va acl> is not changed."
msgstr ""

#. type: Plain text
#: original/man3/acl_to_text.3:70
msgid ""
"This function allocates any memory necessary to contain the string and "
"returns a pointer to the string.  The caller should free any releasable "
"memory, when the new string is no longer required, by calling E<.Xr acl_free "
"3> with the E<.Va (void*)char> returned by E<.Fn acl_to_text> as an argument."
msgstr ""

#. type: Plain text
#: original/man3/acl_to_text.3:78
msgid ""
"On success, this function returns a pointer to the long text form of the "
"ACL.  On error, a value of E<.Li (char *)NULL> is returned, and E<.Va errno> "
"is set appropriately."
msgstr ""

#. type: Plain text
#: original/man3/acl_to_text.3:86
msgid ""
"If any of the following conditions occur, the E<.Fn acl_to_text> function "
"returns a value of E<.Li (char *)NULL> and sets E<.Va errno> to the "
"corresponding value:"
msgstr ""

#. type: Plain text
#: original/man3/acl_to_text.3:96
msgid ""
"The ACL referenced by E<.Va acl> contains one or more improperly formed ACL "
"entries, or for some other reason cannot be translated into a text form of "
"an ACL."
msgstr ""

#. type: Plain text
#: original/man3/acl_to_text.3:107
msgid ""
"E<.Xr acl_free 3>, E<.Xr acl_from_text 3>, E<.Xr acl_to_any_text 3>, E<.Xr "
"acl 5>"
msgstr ""

#. type: Dt
#: original/man3/acl_valid.3:25
#, no-wrap
msgid "ACL_VALID 3"
msgstr ""

#. type: Plain text
#: original/man3/acl_valid.3:29
msgid "E<.Nm acl_valid>"
msgstr ""

#. type: Nd
#: original/man3/acl_valid.3:29
#, no-wrap
msgid "validate an ACL"
msgstr ""

#. type: Plain text
#: original/man3/acl_valid.3:37
msgid "E<.Ft int> E<.Fn acl_valid \"acl_t acl\">"
msgstr ""

#. type: Plain text
#: original/man3/acl_valid.3:43
msgid ""
"The E<.Fn acl_valid> function checks the ACL referred to by the argument E<."
"Va acl> for validity."
msgstr ""

#. type: Plain text
#: original/man3/acl_valid.3:53
msgid "E<.Rv -std acl_valid>"
msgstr ""

#. type: Plain text
#: original/man3/acl_valid.3:61
msgid ""
"If any of the following conditions occur, the E<.Fn acl_valid> function "
"returns E<.Li -1> and sets E<.Va errno> to the corresponding value:"
msgstr ""

#. type: Plain text
#: original/man3/acl_valid.3:73
msgid "One or more of the required ACL entries is not present in E<.Va acl>."
msgstr ""

#. type: Plain text
#: original/man3/acl_valid.3:75
msgid "The ACL contains entries that are not unique."
msgstr ""

#. type: Plain text
#: original/man3/acl_valid.3:82
msgid "E<.Xr acl_check 3>, E<.Xr acl_set_file 3>, E<.Xr acl 5>"
msgstr ""
