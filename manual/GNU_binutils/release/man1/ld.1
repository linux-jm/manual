.\" Copyright (c) 1991, 92, 93, 94, 95, 96, 1997 Free Software Foundation
.\" See section COPYING for conditions for redistribution
.\"
.\" Japanese Version Copyright (c) 1997-2000 NAKANO Takeo all rights reserved.
.\" Translated Wed Jan 7 1998 by NAKANO Takeo <nakano@apm.seikei.ac.jp>
.\" Updated Fri 27 Oct 2000 by NAKANO Takeo
.\"
.TH ld 1 "17 August 1992" "cygnus support" "GNU Development Tools"
.de BP
.sp
.ti \-.2i
\(**
..

.\"O .SH NAME
.\"O ld \- the GNU linker
.SH 名前
ld \- GNU リンカ

.\"O .SH SYNOPSIS
.SH 書式
.hy 0
.na
.TP
.B ld 
.RB "[\|" \-o "
.I output\c
\&\|] \c
.I objfile\c
\&.\|.\|.
.br
.RB "[\|" \-A\c
.I architecture\c
\&\|] 
.RB "[\|" "\-b\ "\c
.I input-format\c
\&\|] 
.RB "[\|" \-Bstatic "\|]"  
.RB "[\|" \-Bdynamic "\|]"  
.RB "[\|" \-Bsymbolic "\|]"  
.RB "[\|" "\-c\ "\c
.I commandfile\c
\&\|] 
.RB "[\|" \-\-cref "\|]"
.RB "[\|" \-d | \-dc | \-dp\c
\|]
.br
.RB "[\|" "\-defsym\ "\c
.I symbol\c
\& = \c
.I expression\c
\&\|]
.RB "[\|" "\-e\ "\c
.I entry\c
\&\|] 
.RB "[\|" \-embedded\-relocs "\|]"
.RB "[\|" \-E "\|]" 
.RB "[\|" \-export\-dynamic "\|]"
.RB "[\|" "\-f\ "\c
.I name\c
\&\|]
.RB "[\|" "\-\-auxiliary\ "\c
.I name\c
\&\|]
.RB "[\|" "\-F\ "\c
.I name\c
\&\|]
.RB "[\|" "\-\-filter\ "\c
.I name\c
\&\|]
.RB "[\|" "\-format\ "\c
.I input-format\c
\&\|] 
.RB "[\|" \-g "\|]" 
.RB "[\|" \-G
.I size\c
\&\|]
.RB "[\|" "\-h\ "\c
.I name\c
\&\|]
.RB "[\|" "\-soname\ "\c
.I name\c
\&\|]
.RB "[\|" \-\-help "\|]"
.RB "[\|" \-i "\|]"
.RB "[\|" \-l\c
.I ar\c
\&\|] 
.RB "[\|" \-L\c
.I searchdir\c
\&\|] 
.RB "[\|" \-M "\|]" 
.RB "[\|" \-Map
.I mapfile\c
\&\|] 
.RB "[\|" \-m
.I emulation\c
\&\|] 
.RB "[\|" \-n | \-N "\|]" 
.RB "[\|" \-noinhibit-exec "\|]" 
.RB "[\|" \-no\-keep\-memory "\|]" 
.RB "[\|" \-no\-warn\-mismatch "\|]"
.RB "[\|" "\-oformat\ "\c
.I output-format\c
\&\|] 
.RB "[\|" "\-R\ "\c
.I filename\c
\&\|]
.RB "[\|" \-relax "\|]"
.RB "[\|" \-r | \-Ur "\|]" 
.RB "[\|" "\-rpath\ "\c
.I directory\c
\&\|]
.RB "[\|" "\-rpath\-link\ "\c
.I directory\c
\&\|]
.RB "[\|" \-S "\|]" 
.RB "[\|" \-s "\|]" 
.RB "[\|" \-shared "\|]" 
.RB "[\|" \-sort\-common "\|]" 
.RB "[\|" "\-split\-by\-reloc\ "\c
.I count\c
\&\|]
.RB "[\|" \-split\-by\-file "\|]" 
.RB "[\|" "\-T\ "\c
.I commandfile\c
\&\|]  
.RB "[\|" "\-Ttext\ "\c
.I textorg\c
\&\|] 
.RB "[\|" "\-Tdata\ "\c
.I dataorg\c
\&\|] 
.RB "[\|" "\-Tbss\ "\c
.I bssorg\c
\&\|]
.RB "[\|" \-t "\|]" 
.RB "[\|" "\-u\ "\c
.I sym\c
\&]
.RB "[\|" \-V "\|]"
.RB "[\|" \-v "\|]"
.RB "[\|" \-\-verbose "\|]"
.RB "[\|" \-\-version "\|]"
.RB "[\|" \-warn\-common "\|]" 
.RB "[\|" \-warn\-constructors "\|]" 
.RB "[\|" \-warn\-multiple\-gp "\|]" 
.RB "[\|" \-warn\-once "\|]" 
.RB "[\|" \-warn\-section\-align "\|]" 
.RB "[\|" \-\-whole\-archive "\|]" 
.RB "[\|" \-\-no\-whole\-archive "\|]" 
.RB "[\|" "\-\-wrap\ "\c
.I symbol\c
\&\|]
.RB "[\|" \-X "\|]" 
.RB "[\|" \-x "\|]" 
.ad b
.hy 1
.\"O .SH DESCRIPTION
.SH 説明
.\"O \c
.\"O .B ld\c
.\"O \& combines a number of object and archive files, relocates
.\"O their data and ties up symbol references. Often the last step in
.\"O building a new compiled program to run is a call to \c
.\"O .B ld\c
.\"O \&.
.B ld
は複数のオブジェクトファイルや書庫 (archive) ファイルを結合し、それら
のデータをリロケートして、シンボルの参照をまとめる。新たな実行
プログラムをコンパイルして作成する作業の最終ステップは、多くの場合
.B ld
の呼び出しとなる。

.\"O \c
.\"O .B ld\c
.\"O \& accepts Linker Command Language files 
.\"O to provide explicit and total control over the linking process.
.\"O This man page does not describe the command language; see the `\|\c
.\"O .B ld\c
.\"O \|' entry in `\|\c
.\"O .B info\c
.\"O \|', or the manual
.\"O .I
.\"O ld: the GNU linker
.\"O \&, for full details on the command language and on other aspects of
.\"O the GNU linker. 
.B ld
はリンカコマンド言語のファイルを受け付ける。このファイルでリンク処理を明
示的に、また完全に制御することができる。この man ページではコマンド言
語を説明していない。コマンド言語や GNU リンカのその他の内容に関する詳
細は \fBinfo\fP の `\fBld\fP' エントリか、マニュアルである
.I ld: the GNU linker
を参照すること。

.\"O This version of \c
.\"O .B ld\c
.\"O \& uses the general purpose BFD libraries
.\"O to operate on object files. This allows \c
.\"O .B ld\c
.\"O \& to read, combine, and
.\"O write object files in many different formats\(em\&for example, COFF or
.\"O \c
.\"O .B a.out\c
.\"O \&.  Different formats may be linked together to produce any
.\"O available kind of object file.  You can use `\|\c
.\"O .B objdump \-i\c
.\"O \|' to get a list of formats supported on various architectures; see 
.\"O .BR objdump ( 1 ).
.B ld
の本バージョンではオブジェクトファイル関連の作業に汎用の BFD ライブラ
リを用いている。これによって \fBld\fP では多くの異なるフォーマットのオ
ブジェクトファイルを読み、書き、結合することができるようになっている (
例えば COFF や \fBa.out\fP)。異なるフォーマットをリンクして、あらゆる
種類のオブジェクトファイルを作成できる。サポートされているフォーマット
や関連するアーキテクチャに関しては `\fB objdump \-i\fP' を実行すればよ
い。詳細は
.BR objdump ( 1 )
を見よ。

.\"O Aside from its flexibility, the GNU linker is more helpful than other
.\"O linkers in providing diagnostic information.  Many linkers abandon
.\"O execution immediately upon encountering an error; whenever possible,
.\"O \c
.\"O .B ld\c
.\"O \& continues executing, allowing you to identify other errors
.\"O (or, in some cases, to get an output file in spite of the error).
GNU リンカは柔軟であるだけでなく、診断 (diagnostic) メッセージ
も他のリンカより詳しい。多くのリンカはエラーが生じるとすぐに動作を停
止してしまうが、
.B ld
は可能な限り処理を続け、他のエラーに関しても知らせようとする (あるいは
エラーにもかかわらず出力ファイルを作成してしまうことさえある)。

.\"O The GNU linker \c
.\"O .B ld\c
.\"O \& is meant to cover a broad range of situations,
.\"O and to be as compatible as possible with other linkers.  As a result,
.\"O you have many choices to control its behavior through the command line,
.\"O and through environment variables.
GNU リンカ
.B ld
は多くの状況をカバーするように作成されている。また他のリンカとできる限
り互換性を保つようにしてある。したがって \fBld\fP の振る舞いは、コマン
ドラインや環境変数によって細かく制御できるようになっている。

.\"O .SH OPTIONS
.SH オプション
.\"O The plethora of command-line options may seem intimidating, but in
.\"O actual practice few of them are used in any particular context.
.\"O For instance, a frequent use of \c
.\"O .B ld\c
.\"O \& is to link standard Unix
.\"O object files on a standard, supported Unix system.  On such a system, to
.\"O link a file \c
.\"O .B hello.o\c
.\"O \&:
コマンドラインオプションのあまりの多さに怖気づくかもしれないが、実際の
作業で指定されるオプションは、ほとんどの場合少ない。例として
.B ld
の良く用いられる例、サポートされている標準的な Unix システムで標準 
Unix のオブジェクトファイルを作成する場合を考えよう。このようなシステ
ムで
.B hello.o
ファイルをリンクする作業は以下のようになる。
.sp
.br
$\ ld\ \-o\ output\ /lib/crt0.o\ hello.o\ \-lc
.br
.sp
.\"O This tells \c
.\"O .B ld\c
.\"O \& to produce a file called \c
.\"O .B output\c
.\"O \& as the
.\"O result of linking the file \c
.\"O .B /lib/crt0.o\c
.\"O \& with \c
.\"O .B hello.o\c
.\"O \& and
.\"O the library \c
.\"O .B libc.a\c
.\"O \& which will come from the standard search
.\"O directories.
この例では
.B ld
に
.B output
という名前のファイルを作成するように命令している。リンクするファイルは
.B /lib/crt0.o
、
.B hello.o
および標準的な検索ディレクトリにあるライブラリ
.B libc.a
である。

.\"O The command-line options to \c
.\"O .B ld\c
.\"O \& may be specified in any order, and
.\"O may be repeated at will.  For the most part, repeating an option with a
.\"O different argument will either have no further effect, or override prior
.\"O occurrences (those further to the left on the command line) of an
.\"O option.  
.B ld
のコマンドラインオプションは任意の順序で指定でき、必要なだけ繰り返すこ
とができる。オプションの繰り返しは、多くの場合最初のもの以外を無視する
か、先の指定 (コマンドラインの左にあるもの) を上書きするかになる。

.\"O The exceptions\(em\&which may meaningfully be used more than once\(em\&are
\c
.\"O .B \-A\c
.\"O \&, \c
.\"O .B \-b\c
.\"O \& (or its synonym \c
.\"O .B \-format\c
.\"O \&), \c
.\"O .B \-defsym\c
.\"O \&,
.\"O \c
.\"O .B \-L\c
.\"O \&, \c
.\"O .B \-l\c
.\"O \&, \c
.\"O .B \-R\c
.\"O \&, and \c
.\"O .B \-u\c
.\"O \&.
例外 (複数回の指定が意味を持つもの) は以下の通り。
.BR \-A 、 \-b " (またはその同義である " \-format ")、"
.BR \-defsym 、 \-L 、 \-l 、 \-R 、 \-u 。

.\"O The list of object files to be linked together, shown as \c
.\"O .I objfile\c
.\"O \&,
.\"O may follow, precede, or be mixed in with command-line options; save that
.\"O an \c
.\"O .I objfile\c
.\"O \& argument may not be placed between an option flag and
.\"O its argument.
リンクする (複数の) オブジェクトファイルは
.I objfile
として与えるが、これはコマンドラインでオプションの後、前、あるいは混ぜ
て置いても構わない。ただし
.I objfie
をオプションのフラグとその引数の間に置くことはできない。

.\"O Usually the linker is invoked with at least one object file, but other
.\"O forms of binary input files can also be specified with \c
.\"O .B \-l\c
.\"O \&,
.\"O \c
.\"O .B \-R\c
.\"O \&, and the script command language.  If \c
.\"O .I no\c
.\"O \& binary input
.\"O files at all are specified, the linker does not produce any output, and
.\"O issues the message `\|\c
.\"O .B No input files\c
.\"O \|'.
通常リンカの実行には最低一つのオブジェクトファイルが指定されるが、異な
るフォーマットを持つバイナリファイルを
.BR \-l 、 \-R
やスクリプトコマンド言語で指定することもできる。バイナリの入力ファイル
が\fI一つも\fP指定されない場合には、リンカは出力ファイルを作成せず、
`\fB No input files\fP' というメッセージを表示する。

.\"O Option arguments must either follow the option letter without intervening
.\"O whitespace, or be given as separate arguments immediately following the
.\"O option that requires them.
オプションの引数はオプション文字の直後にスペースなしで続けることもでき
るし、オプションの次に別の引数として置くこともできる。

.TP
.BI "-A" "architecture"
.\"O In the current release of \c
.\"O .B ld\c
.\"O \&, this option is useful only for the
.\"O Intel 960 family of architectures.  In that \c
.\"O .B ld\c
.\"O \& configuration, the
.\"O \c
.\"O .I architecture\c
.\"O \& argument is one of the two-letter names identifying
.\"O members of the 960 family; the option specifies the desired output
.\"O target, and warns of any incompatible instructions in the input files.
.\"O It also modifies the linker's search strategy for archive libraries, to
.\"O support the use of libraries specific to each particular
.\"O architecture, by including in the search loop names suffixed with the
.\"O string identifying the architecture.
.B ld
のこのリリースでは、このオプションは Intel 960 アーキテクチャのファミ
リに対してのみ意味を持つ。このファミリ向けに設定された
.B ld
では、
.I architecture
引数は 960 ファミリのメンバーを示す 2 文字の名前のどれかを指定する。このオ
プションは出力ターゲットを指定し、入力ファイルにある非互換な命令全てに
対して警告メッセージを表示する。またリンカが書庫ライブラリを検索する
方法を変更し、指定されたアーキテクチャに特有のライブラリが利用できるよ
うにする。これは検索するファイルに、アーキテクチャを示す文字列を後置
したものを加えることによってなされる。

.\"O For example, if your \c
.\"O .B ld\c
.\"O \& command line included `\|\c
.\"O .B \-ACA\c
.\"O \|' as
.\"O well as `\|\c
.\"O .B \-ltry\c
.\"O \|', the linker would look (in its built-in search
.\"O paths, and in any paths you specify with \c
.\"O .B \-L\c
.\"O \&) for a library with
.\"O the names
例えば使用している
.B ld
のコマンドラインに
.B \-ACA
または
.B \-ltry
があれば、リンカは組み込みの検索パスと \fB\-L\fP で指定されたパスを
探し、以下のような名前のライブラリを見つけようとする。
.sp
.br
try
.br
libtry.a
.br
tryca
.br
libtryca.a
.br
.sp

.\"O The first two possibilities would be considered in any event; the last
.\"O two are due to the use of `\|\c
.\"O .B \-ACA\c
.\"O \|'.
最初の二つはどんな場合でも検索されるものであり、後の二つは
.B \-ACA
を用いたことによって加わったものである。

.\"O Future releases of \c
.\"O .B ld\c
.\"O \& may support similar functionality for
.\"O other architecture families.
.B ld
の将来のリリースでは、同じような機能が他のアーキテクチャファミリでもサ
ポートされる可能性がある。

.\"O You can meaningfully use \c
.\"O .B \-A\c
.\"O \& more than once on a command line, if
.\"O an architecture family allows combination of target architectures; each
.\"O use will add another pair of name variants to search for when \c
.\"O .B \-l
.\"O specifies a library.
.B \-A
オプションはコマンドラインで複数回用いられると、それぞれが意味を持つ。
ただしアーキテクチャファミリがターゲットの組み合わせを許す場合に限られ
る。それぞれの指定によって、
.B \-l
で指定されたライブラリに名前のバリエーションを付けたものが検索される。

.TP
.BI "\-b " "input-format"
.\"O Specify the binary format for input object files that follow this option
.\"O on the command line.  You don't usually need to specify this, as
.\"O \c
.\"O .B ld\c
.\"O \& is configured to expect as a default input format the most
.\"O usual format on each machine.  \c
.\"O .I input-format\c
.\"O \& is a text string, the
.\"O name of a particular format supported by the BFD libraries.  
.\"O \c
.\"O .B \-format \c
.\"O .I input-format\c
.\"O \&\c
.\"O \& has the same effect, as does the script command
.\"O .BR TARGET .
コマンドラインでこのオプションに続いて指定された入力オブジェクトファイ
ルのバイナリフォーマットを指定する。通常この指定は必要ない。
.B ld
はそれぞれのマシンで最も一般的なフォーマットをデフォルトの入力フォーマッ
トとするように設定されているからである。
.I input-format
はテキスト文字列で、 BFD ライブラリによってサポートされている特定のフォー
マットの名前である。
.B \-format
.I input\-format
はスクリプトコマンド
.B TARGET
と同じ効力を持つ。

.\"O You may want to use this option if you are linking files with an unusual
.\"O binary format.  You can also use \c
.\"O .B \-b\c
.\"O \& to switch formats explicitly (when
.\"O linking object files of different formats), by including
.\"O \c
.\"O .B \-b \c
.\"O .I input-format\c
.\"O \&\c
.\"O \& before each group of object files in a
.\"O particular format.  
一般的なバイナリフォーマットではないファイルをリンクする場合に、このオ
プションを指定することになる。また異なるフォーマットのオブジェクトファ
イルをリンクする際に、フォーマットを明示的に変更する目的に
.B \-b
を使うこともできる。この際には
.B \-b
.I input\-foramt
をそれぞれのフォーマットに属するオブジェクトファイル群の前に挿入する。

.\"O The default format is taken from the environment variable
.\"O .B GNUTARGET\c
.\"O \&.  You can also define the input
.\"O format from a script, using the command \c
.\"O .B TARGET\c
.\"O \&.
デフォルトのフォーマットは環境変数
.B GNUTARGET
から取得される。スクリプトでコマンド
.B TARGET
を用いて入力フォーマットを設定することもできる。

.TP
.B \-Bstatic 
.\"O Do not link against shared libraries.  This is only meaningful on
.\"O platforms for which shared libraries are supported.
共有ライブラリに対するリンクをしない。これは共有ライブラリをサポートし
ているプラットフォームにおいてのみ意味を持つ。

.TP
.B \-Bdynamic
.\"O Link against dynamic libraries.  This is only meaningful on platforms
.\"O for which shared libraries are supported.  This option is normally the
.\"O default on such platforms.
動的ライブラリに対してリンクする。これは共有ライブラリをサポートしてい
るプラットフォームにおいてのみ意味を持つ。そのようなプラットフォームで
はこのオプションは通常デフォルトになっている。

.TP
.B \-Bsymbolic
.\"O When creating a shared library, bind references to global symbols to
.\"O the definition within the shared library, if any.  Normally, it is
.\"O possible for a program linked against a shared library to override the
.\"O definition within the shared library.  This option is only meaningful
.\"O on ELF platforms which support shared libraries.
共有ライブラリを作る場合、グローバルシンボルへの参照を共有ライブラリ内
部の定義 (definition) と結合する。共有ライブラリにリンクされるプログ
ラムでは、通常この共有ライブラリ内部の定義を上書きすることができる。こ
のオプションが意味を持つのは共有ライブラリをサポートする ELF プラット
フォームのみである。

.TP
.BI "\-c " "commandfile"
.\"O Directs \c
.\"O .B ld\c
.\"O \& to read link commands from the file
.\"O \c
.\"O .I commandfile\c
.\"O \&.  These commands will completely override \c
.\"O .B ld\c
.\"O \&'s
.\"O default link format (rather than adding to it); \c
.\"O .I commandfile\c
.\"O \& must
.\"O specify everything necessary to describe the target format.
.I commandfile
からリンクコマンドを読むように
.B ld
に指示する。これらのコマンドは
.B ld
デフォルトのリンクフォーマットを完全に上書きする (デフォルトに追加され
るわけではない)。
.I commandfile
ではターゲットフォーマットに関して必要な記述がすべてされていなければな
らない。

.\"O You may also include a script of link commands directly in the command
.\"O line by bracketing it between `\|\c
.\"O .B {\c
.\"O \|' and `\|\c
.\"O .B }\c
.\"O \|' characters.
リンクコマンドのスクリプトは、コマンドラインでも指定できる。これにはス
クリプトの文字列をブラケット (`\fB{\fP' と `\fB}\fP') で囲う。

.TP
.B \-\-cref
.\"O Output a cross reference table.  If a linker map file is being
.\"O generated, the cross reference table is printed to the map file.
.\"O Otherwise, it is printed on the standard output.
クロスリファレンスのテーブルを出力する。リンカのマップファイルが生成さ
れる場合には、クロスリファレンステーブルはマップファイルに出力される。
それ以外の場合には標準出力に表示される。

.TP
.B \-d 
.TP
.B \-dc
.TP
.B \-dp
.\"O These three options are equivalent; multiple forms are supported for
.\"O compatibility with other linkers.  Use any of them to make \c
.\"O .B ld
.\"O assign space to common symbols even if a relocatable output file is
.\"O specified (\c
.\"O .B \-r\c
.\"O \&).  The script command
.\"O \c
.\"O .B FORCE_COMMON_ALLOCATION\c
.\"O \& has the same effect.
これらの 3 つのオプションは等価である。複数の形式があるのは他のリンカ
との互換性のためである。これらのいずれかを指定すると、
.B ld
はリロケータブル出力ファイルが指定 (\fB\-r\fP) された場合でも共通シン
ボルのための領域を割り当てる。スクリプトコマンド
.B FORCE_COMMON_ALLOCATION
が同じ効力を持つ。

.TP
.\"O .BI "-defsym " "symbol" "\fR = \fP" expression
.BI "\-defsym " "symbol" "\fR = \fP" expression
.\"O Create a global symbol in the output file, containing the absolute
.\"O address given by \c
.\"O .I expression\c
.\"O \&.  You may use this option as many
.\"O times as necessary to define multiple symbols in the command line.  A
.\"O limited form of arithmetic is supported for the \c
.\"O .I expression\c
.\"O \& in this
.\"O context: you may give a hexadecimal constant or the name of an existing
.\"O symbol, or use \c
.\"O .B +\c
.\"O \& and \c
.\"O .B \-\c
.\"O \& to add or subtract hexadecimal
.\"O constants or symbols.  If you need more elaborate expressions, consider
.\"O using the linker command language from a script.
.I expression
によって与えられた絶対アドレスを含むグローバルシンボルを出力ファイルに
生成する。このオプションは必要なだけコマンドラインに指定でき、複数のシ
ンボルを定義することができる。
.I expression
の指定には簡単な算術もサポートされている。 16 進定数や存在する他のシン
ボルを与えたり、 \fB+\fP や \fB\-\fP をそれらの間の足し引きに用いるこ
ともできる。より手の込んだ数式が必要な場合には、スクリプトでリンカコマ
ンド言語を用いることをすすめる。

.TP
.\"O .BI "-e " "entry"\c
.BI "\-e " "entry"\c
.\"O \& 
.\"O Use \c
.\"O .I entry\c
.\"O \& as the explicit symbol for beginning execution of your
.\"O program, rather than the default entry point.  for a
.\"O discussion of defaults and other ways of specifying the
.\"O entry point.
.I entry
をプログラムのエントリポイントを示す
.\" explicit な
シンボルとして取り扱う (デフォルトのエントリポイントを上書きする)。
デフォルトと他のエントリポイントの指定方法については ld の info の
*Note Entry Point:: を参照すること。

.TP
.B \-embedded\-relocs
.\"O This option is only meaningful when linking MIPS embedded PIC code,
.\"O generated by the
.\"O .B \-membedded\-pic
.\"O option to the GNU compiler and assembler.  It causes the linker to
.\"O create a table which may be used at runtime to relocate any data which
.\"O was statically initialized to pointer values.  See the code in
.\"O testsuite/ld-empic for details.
このオプションが意味を持つのは GNU コンパイラやアセンブラの
.B \-membedded\-pic
オプションによって生成された MIPS embedded な PIC コードをリンクする場
合だけである。これはリンカにテーブルを生成させる。このテーブルは、ポイ
ンタ値に対して static に初期化された全てのデータを実行時にリロケートす
る際に用いられる。詳細は testsuite/ld\-empic 内部のコードを参照のこと。

.TP
.B \-E
.TP
.B \-export\-dynamic
.\"O When creating an ELF file, add all symbols to the dynamic symbol table.
.\"O Normally, the dynamic symbol table contains only symbols which are used
.\"O by a dynamic object.  This option is needed for some uses of
.\"O .I dlopen.
ELF ファイルを作成する際に、全てのシンボルをダイナミックなシンボルテー
ブルに追加する。通常ダイナミックシンボルテーブルには動的なオブジェクト
によって用いられるシンボルのみが含まれている。このオプションは
.I dlopen
を使う場合などに必要となる。

.TP
.\"O .BI "-f " "name"
.BI "\-f " "name"
.TP
.\"O .BI "--auxiliary " "name"
.BI "\-\-auxiliary " "name"
.\"O When creating an ELF shared object, set the internal DT_AUXILIARY field
.\"O to the specified name.  This tells the dynamic linker that the symbol
.\"O table of the shared object should be used as an auxiliary filter on the
.\"O symbol table of the shared object
.\"O .I name.
ELF 共有オブジェクトを作成する際に、内部の DT_AUXILIARY フィールドを指
定した名前に設定する。この指定によって、ダイナミックリンカは扱っている
共有オブジェクトのシンボルテーブルを、他の共有オブジェクト
.I name
のシンボルテーブルの補助フィルタとして用いるようになる。

.TP
.\"O .BI "-F " "name"
.BI "\-F " "name"
.TP
.\"O .BI "--filter " "name"
.BI "\-\-filter " "name"
.\"O When creating an ELF shared object, set the internal DT_FILTER field to
.\"O the specified name.  This tells the dynamic linker that the symbol table
.\"O of the shared object should be used as a filter on the symbol table of
.\"O the shared object
.\"O .I name.
ELF 共有オブジェクトを作成する際に、内部の DT_FILTER フィールドを指
定した名前に設定する。この指定によって、ダイナミックリンカはその
共有オブジェクトのシンボルテーブルを、他の共有オブジェクト
.I name
のシンボルテーブルのフィルタとして用いるようになる。

.TP
.BI "\-format " "input\-format"
.\"O Synonym for \c
.\"O .B \-b\c
.\"O \& \c
.\"O .I input\-format\c
.\"O \&.
.B \-b
.I input\-format
と同義。

.TP
.B \-g
.\"O Accepted, but ignored; provided for compatibility with other tools.
受け付けるが無視される。他のツールとの互換性のために用意されている。

.TP
.BI "\-G " "size"\c
.\"O Set the maximum size of objects to be optimized using the GP register
.\"O to
.\"O .I size
.\"O under MIPS ECOFF.  Ignored for other object file formats.
MIPS ECOFF において、 GP レジスタを用いて最適化するオブジェクトの最大
サイズを
.I size
に設定する。他のオブジェクトファイルフォーマットでは無視される。

.TP
.\"O .BI "-h " "name"
.BI "\-h " "name"
.TP
.\"O .BI "-soname " "name"
.BI "\-soname " "name"
.\"O When creating an ELF shared object, set the internal DT_SONAME field to
.\"O the specified name.  When an executable is linked with a shared object
.\"O which has a DT_SONAME field, then when the executable is run the dynamic
.\"O linker will attempt to load the shared object specified by the DT_SONAME
.\"O field rather than the using the file name given to the linker.
ELF 共有オブジェクトを作成するとき、内部の DT_SONAME フィールドを指定
した名前に設定する。実行ファイルが DT_SONAME フィールドを持つ共有オブ
ジェクトとリンクされると、これの実行時にダイナミックリンカは 
DT_SONAME によって指定された共有オブジェクトをロードしようとする (通常
はリンカに対して指定されたファイルをロードする)。

.TP
.B \-\-help
.\"O Print a summary of the command-line options on the standard output and exit.
.\"O This option and
.\"O .B \-\-version
.\"O begin with two dashes instead of one
.\"O for compatibility with other GNU programs.  The other options start with
.\"O only one dash for compatibility with other linkers.
コマンドラインオプションの要約を標準出力に表示して終了する。このオプショ
ンと
.B \-\-version
は、他の GNU プログラムとの互換性のためダッシュ (\-) 二つで始まる。こ
れ以外のオプションは他のリンカとの互換性のためダッシュ一つで始まる。

.TP
.B \-i
.\"O Perform an incremental link (same as option \c
.\"O .B \-r\c
.\"O \&).
インクリメンタルリンクを実行する (オプション \fB\-r\fP と同じ)。

.TP
.BI "\-l" "ar"\c
.\"O \& 
.\"O Add an archive file \c
.\"O .I ar\c
.\"O \& to the list of files to link.  This 
.\"O option may be used any number of times.  \c
.\"O .B ld\c
.\"O \& will search its
.\"O path-list for occurrences of \c
.\"O .B lib\c
.\"O .I ar\c
.\"O \&.a\c
.\"O \& for every \c
.\"O .I ar
.\"O specified.
アーカイブファイル
.I ar
をリンクするファイルのリストに加える。このオプションは何回でも指定でき
る。
.B ld
は \fIar\fP が指定されるごとに、 \fBlib\fIar\fR.a が見つかるまで検索パ
スを探す。

.TP
.BI "\-L" "searchdir"
.\"O This command adds path \c
.\"O .I searchdir\c
.\"O \& to the list of paths that
.\"O \c
.\"O .B ld\c
.\"O \& will search for archive libraries.  You may use this option
.\"O any number of times.
このコマンドは
.I searchdir
を
.B ld
の書庫ライブラリの検索パスに追加する。このオプションは必要なだけ指定で
きる。

.\"O The default set of paths searched (without being specified with
.\"O \c
.\"O .B \-L\c
.\"O \&) depends on what emulation mode \c
.\"O .B ld\c
.\"O \& is using, and in
.\"O some cases also on how it was configured.    The
.\"O paths can also be specified in a link script with the \c
.\"O .B SEARCH_DIR
.\"O command.
デフォルトの検索パス (\fB\-L\fP が指定されなかったときの検索パス) は
.B ld
が用いているエミュレーションのモードに依存する。また設定に依存する場合
もある。リンクスクリプトでは
.B SEARCH_DIR
コマンドを用いてこのパスを設定することもできる。

.TP
.B \-M 
.\"O Print (to the standard output file) a link map\(em\&diagnostic information
.\"O about where symbols are mapped by \c
.\"O .B ld\c
.\"O \&, and information on global
.\"O common storage allocation.
標準出力にリンクマップを表示する。リンクマップには
.B ld
によってマップされたシンボルの位置情報とグローバルな共通メモリ領域の
割当て情報が含まれている。

.TP
.BI "\-Map " "mapfile"\c
.\"O Print to the file
.\"O .I mapfile
.\"O a link map\(em\&diagnostic information
.\"O about where symbols are mapped by \c
.\"O .B ld\c
.\"O \&, and information on global
.\"O common storage allocation.
ファイル
.I mapfile
にリンクマップを出力する。リンクマップには
.B ld
によってマップされたシンボルの位置情報とグローバルな共通 storage の
割当て情報が含まれている。

.TP
.BI "\-m " "emulation"\c
.\"O Emulate the
.\"O .I emulation
.\"O linker.  You can list the available emulations with the
.\"O .I \-\-verbose
.\"O or
.\"O .I \-V
.\"O options.  This option overrides the compiled-in default, which is the
.\"O system for which you configured
.\"O .BR ld .
リンカ
.I emulation
をエミュレートする。エミュレートできるもののリストは
.I \-\-verbose
または
.I \-V
で得られる。このオプションはコンパイル時のデフォルト (\fBld\fP 
の設定を行ったシステム向けのリンカ) を上書きする。

.TP
.B \-N 
.\"O specifies readable and writable \c
.\"O .B text\c
.\"O \& and \c
.\"O .B data\c
.\"O \& sections. If
.\"O the output format supports Unix style magic numbers, the output is
.\"O marked as \c
.\"O .B OMAGIC\c
.\"O \&.
.B text
と
.B data
セクションを読み書き可能にする。出力フォーマットが Unix スタイルのマジッ
ク・ナンバーをサポートしている場合は、出力ファイルに
.B OMAGIC
がマークされる。

.\"O When you use the `\|\c
.\"O .B \-N\c
.\"O \&\|' option, the linker does not page-align the
.\"O data segment.
.B \-N
オプションを指定するとリンカは data セグメントのページ位置調整を行わな
い。

.TP
.B \-n 
.\"O sets the text segment to be read only, and \c
.\"O .B NMAGIC\c
.\"O \& is written
.\"O if possible.
text セグメントをリードオンリーにする。可能な場合は
.B NMAGIC
が書き込まれる。

.TP
.B \-noinhibit\-exec
.\"O Normally, the linker will not produce an output file if it encounters
.\"O errors during the link process.  With this flag, you can specify that
.\"O you wish the output file retained even after non-fatal errors.
通常リンカはリンク処理の途中でエラーになると出力ファイルを生成しない。
このフラグをもちいると致命的でないエラーの場合には出力ファイルを残すよ
うに指定できる。

.TP
.B \-no\-keep\-memory
.\"O The linker normally optimizes for speed over memory usage by caching
.\"O the symbol tables of input files in memory.  This option tells the
.\"O linker to instead optimize for memory usage, by rereading the symbol
.\"O tables as necessary.  This may be required if the linker runs out of
.\"O memory space while linking a large executable.
通常リンカはメモリ消費量よりも実行速度を優先するように最適化されている。
すなわち入力ファイルのシンボルテーブルがメモリにキャッシュされている。
このオプションを指定すると、メモリ消費を抑えるようにな
る (必要に応じてシンボルテーブルを読み直す)。このオプションは
大きな実行ファイルをリンクするとき、メモリを使い果たしてしまうよう
な場合に指定する必要がある。

.TP
.B \-no\-warn\-mismatch
.\"O Normally the linker will give an error if you try to link together
.\"O input files that are mismatched for some reason, perhaps because they
.\"O have been compiled for different processors or for different
.\"O endiannesses.  This option tells the linker that it should silently
.\"O permit such possible errors.  This option should only be used with
.\"O care, in cases when you have taken some special action that ensures
.\"O that the linker errors are inappropriate.
何らかの理由でマッチしない入力ファイルをいっしょにリンクしようとすると、
リンカは通常エラーになります。この原因としては、
それらの入力ファイルが異なるプロセッサ用に、
あるいは異なるエンディアン用にコンパイルされたなどが考えられます。
このオプションを指定すると、リンカはこの種の潜在的なエラーを
黙って許可します。このオプションは不用意に使うべきではありません。
リンカのエラーをどうしても避けたいような、
特殊な作業を行っているときに限るべきです。

.TP
.BI "\-o " "output"
.\"O .I output\c
.\"O \& is a name for the program produced by \c
.\"O .B ld\c
.\"O \&; if this
.\"O option is not specified, the name `\|\c
.\"O .B a.out\c
.\"O \|' is used by default.  The
.\"O script command \c
.\"O .B OUTPUT\c
.\"O \& can also specify the output file name.
.I output
は 
.B ld
によって作成されるプログラムの名前である。このオプションが指定されなかっ
た場合は
.B a.out
がデフォルトとして用いられる。スクリプトコマンド
.B OUTPUT
でも出力ファイル名を指定できる。

.TP
.BI "\-oformat " "output\-format"
.\"O Specify the binary format for the output object file.
.\"O You don't usually need to specify this, as
.\"O \c
.\"O .B ld\c
.\"O \& is configured to produce as a default output format the most
.\"O usual format on each machine.  \c
.\"O .I output-format\c
.\"O \& is a text string, the
.\"O name of a particular format supported by the BFD libraries.  
.\"O The script command
.\"O .B OUTPUT_FORMAT
.\"O can also specify the output format, but this option overrides it.
出力されるオブジェクトファイルのバイナリフォーマットを指定する。通常は
このオプションは必要ない。
.B ld
でのデフォルトの出力フォーマットは、それぞれのマシンで最も普通のフォー
マットになるように設定されているからである。
.I output-format
はテキスト文字列で、 BFD ライブラリでサポートされている特定のフォーマッ
トの名前である。スクリプトコマンド
.B OUTPUT_FORMAT
でも出力フォーマットを指定できる。しかしこのオプションはスクリプトでの
指定を上書きする。

.TP
.BI "\-R " "filename"
.\"O Read symbol names and their addresses from \c
.\"O .I filename\c
.\"O \&, but do not
.\"O relocate it or include it in the output.  This allows your output file
.\"O to refer symbolically to absolute locations of memory defined in other
.\"O programs.
シンボル名とそれらのアドレスを
.I filename
から読み込む。しかしそれらのリロケートや出力への追加は行わない。これに
よって出力ファイルでは、(他のプログラムで定義された) メモリ上の絶対ア
ドレスをシンボルを用いて参照できることになる。

.TP
.B \-relax
.\"O An option with machine dependent effects.  Currently this option is only
.\"O supported on the H8/300.
機能はマシンに依存する。現在では H8/300 でのみサポートされている。

.\"O On some platforms, use this option to perform global optimizations that
.\"O become possible when the linker resolves addressing in your program, such
.\"O as relaxing address modes and synthesizing new instructions in the
.\"O output object file.  
プラットフォームによっては、このオプションを指定するとグローバルな最適
化を行う場合もある。これはリンカがプログラムのアドレスを置き換える (出
力されるオブジェクトファイルのアドレスモードを relax させたり新しい命
令を同期させる) 場合に可能となる。

.\"O On platforms where this is not supported, `\|\c
.\"O .B \-relax\c
.\"O \&\|' is accepted, but has no effect.
サポートされていないプラットフォームでは、
.B \-relax
は受け付けられるが何も起こらない。

.TP
.B \-r 
.\"O Generates relocatable output\(em\&i.e., generate an output file that can in
.\"O turn serve as input to \c
.\"O .B ld\c
.\"O \&.  This is often called \c
.\"O .I partial
.\"O linking\c
.\"O \&.  As a side effect, in environments that support standard Unix
.\"O magic numbers, this option also sets the output file's magic number to
.\"O \c
.\"O .B OMAGIC\c
.\"O \&.
.\"O If this option is not specified, an absolute file is produced.  When
.\"O linking C++ programs, this option \c
.\"O .I will not\c
.\"O \& resolve references to
.\"O constructors; \c
.\"O .B \-Ur\c
.\"O \& is an alternative. 
リロケータブルな出力を生成する。すなわち再び
.B ld
の入力として用いることができるようなファイルを生成する。これはしばしば
部分 (\fIpartial\fP) リンクと呼ばれる。また標準 Unix の
マジック・ナンバーをサポートする環境では、このオプションは出力ファイル
のマジック・ナンバーを
.B OMAGIC
にする。このオプションが指定されなかった場合は、完全なファイルが生成さ
れる。 C++ プログラムをリンクする場合、このオプションはコンストラクタ
への参照を解決\fIしない\fP。 C++ の場合には代わりに
.B \-Ur
を用いることができる。

.\"O This option does the same as \c
.\"O .B \-i\c
.\"O \&.
このオプションは
.B \-i
と同じ。

.TP
.B \-rpath\ \fIdirectory
.\"O Add a directory to the runtime library search path.  This is used when
.\"O linking an ELF executable with shared objects.  All 
.\"O .B \-rpath
.\"O arguments are concatenated and passed to the runtime linker, which uses
.\"O them to locate shared objects at runtime.  The
.\"O .B \-rpath
.\"O option is also used when locating shared objects which are needed by
.\"O shared objects explicitly included in the link; see the description of
.\"O the
.\"O .B \-rpath\-link
.\"O option.  If
.\"O .B \-rpath
.\"O is not used when linking an ELF executable, the contents of the
.\"O environment variable
.\"O .B LD_RUN_PATH
.\"O will be used if it is defined.
ディレクトリを実行時ライブラリの検索パスに追加する。これは ELF の実
行ファイルを共有オブジェクトとリンクするときに用いられる。
.B \-rpath
の引き数は全て結合され、ダイナミックリンカに渡される。ダイナミックリン
カは、これを用いてロードする共有オブジェクトを実行時に決定する。
.B \-rpath
オプションはリンクに明示的に含まれている共有オブジェクトによって必要と
される別の共有オブジェクトを指定するのに用いることもできる。
.B \-rpath\-link
オプションの説明を見よ。 ELF 実行ファイルの
.B \-rpath
が指定されない場合には、 (指定されていれば) 環境変数
.B LD_RUN_PATH
の値が用いられる。

.\"O The
.\"O .B \-rpath
.\"O option may also be used on SunOS.  By default, on SunOS, the linker
.\"O will form a runtime search patch out of all the
.\"O .B \-L
.\"O options it is given.  If a
.\"O .B \-rpath
.\"O option is used, the runtime search path will be formed exclusively
.\"O using the
.\"O .B \-rpath
.\"O options, ignoring
.\"O the
.\"O .B \-L
.\"O options.  This can be useful when using gcc, which adds many
.\"O .B \-L
.\"O options which may be on NFS mounted filesystems.
.B \-rpath
オプションは SunOS で用いることもできる。 SunOS のデフォルトでは、リン
カは実行時の検索パスを
.B \-L
オプションで与えられたパスから生成する。
.B \-rpath
が用いられると、実行時の検索パスは
.B \-rpath
オプションで与えられたパスのみから生成され、
.B \-L
オプションは無視される。これは gcc を使っていて、
.B \-L
がたくさん指定されてしまう (これらは NFS マウントされたファイルシ
ステムかもしれない) 場合などに便利である。

.TP
.B \-rpath\-link\ \fIdirectory
.\"O When using ELF or SunOS, one shared library may require another.  This
.\"O happens when an
.\"O .B ld\ \-shared
.\"O link includes a shared library as one of the input files.
ELF か SunOS を用いている場合、ある共有ライブラリが別の共有ライブラリ
を必要とする場合がある。これは
.B ld\ \-shared
によるリンクで入力ファイルに共有ライブラリが含まれている場合に起こる。

.\"O When the linker encounters such a dependency when doing a non-shared,
.\"O non-relocateable link, it will automatically try to locate the required
.\"O shared library and include it in the link, if it is not included
.\"O explicitly.  In such a case, the
.\"O .B \-rpath\-link
.\"O option specifies the first set of directories to search.  The
.\"O .B \-rpath\-link
.\"O option may specify a sequence of directory names either by specifying
.\"O a list of names separated by colons, or by appearing multiple times.
リンカが非共有 (非リロケータブル) なリンクを行っているときに、このよう
な依存関係に遭遇すると、リンカは自動的にその必要とされている共有ライブ
ラリも (明示されていなくても) リンクしてしまおうとする。このような場合
に
.B \-rpath\-link
オプションは検索する最初のディレクトリセットを指定する。
.B \-rpath\-link
オプションではディレクトリ名の並びをコロンで区切って一度に指定すること
もできるし、複数回用いて指定することもできる。

.\"O If the required shared library is not found, the linker will issue a
.\"O warning and continue with the link.
必要な共有ライブラリが見つからないと、リンカは警告を出してリンク処理を
継続しようとする。

.TP
.B \-S 
.\"O Omits debugger symbol information (but not all symbols) from the output file.
出力ファイルからデバッガのシンボル情報を削除する (全てのシンボルではな
い)。

.TP
.B \-s 
.\"O Omits all symbol information from the output file.
出力ファイルから全てのシンボル情報を削除する。

.TP
.B \-shared
.\"O Create a shared library.  This is currently only supported on ELF and
.\"O SunOS platforms (on SunOS it is not required, as the linker will
.\"O automatically create a shared library when there are undefined symbols
.\"O and the
.\"O .B \-e
.\"O option is not used).
共有ライブラリを生成する。現在のところ ELF と SunOS プラットフォームで
のみサポートされている (実際には SunOS では不要である。なぜならリンカ
は未定義シンボルが存在していたり
.B \-e
オプションが指定されている場合には自動的に共有ライブラリを生成するから
である)。

.TP
.B \-sort\-common
.\"O Normally, when
.\"O .B ld
.\"O places the global common symbols in the appropriate output sections,
.\"O it sorts them by size.  First come all the one byte symbols, then all
.\"O the two bytes, then all the four bytes, and then everything else.
.\"O This is to prevent gaps between symbols due to
.\"O alignment constraints.  This option disables that sorting.
通常
.B ld
がグローバルな共通シンボルをそれぞれの出力セクションに配置するにあたっ
ては、それらはサイズによってソートされる。まず 1 バイト変数のシンボル、
ついで 2 バイト、 4 バイト変数のシンボル、最後にそれ以外のものが並ぶ。
このオプションはアラインメントによって生じてしまうシンボル間のギャップ
を防止する。このオプションはソートを行わないようにする。

.TP
.B \-split\-by\-reloc\ \fIcount
.\"O Trys to creates extra sections in the output file so that no single
.\"O output section in the file contains more than
.\"O .I count
.\"O relocations.
.\"O This is useful when generating huge relocatable for downloading into
.\"O certain real time kernels with the COFF object file format; since COFF
.\"O cannot represent more than 65535 relocations in a single section.
.\"O Note that this will fail to work with object file formats which do not
.\"O support arbitrary sections.  The linker will not split up individual
.\"O input sections for redistribution, so if a single input section
.\"O contains more than
.\"O .I count
.\"O relocations one output section will contain that many relocations.
出力ファイルに余分なセクションを生成して、ファイル中のそれぞれの出力セ
クションが
.I count
以上のリロケーションを含まないようにする。これは COFF オブジェクトファ
イルフォーマットの巨大なリロケータブルファイルを、リアルタイムカーネル
にダウンロードする場合などに役に立つ。 COFF はセクションあたり 65535 
以上のリロケーションを持てないからである。任意のセクションをサポートし
ていないフォーマットでは、このオプションは機能しないことに注意。リンカ
はそれぞれの入力セクションを分割して再配置するわけではない。したがって
入力ファイルのセクションに
.I count
以上のリロケーションを含むものがあれば、それに対応してそれだけのリロケー
ションを持った出力セクションは作成されてしまう。

.TP
.B \-split\-by\-file
.\"O Similar to
.\"O .B \-split\-by\-reloc
.\"O but creates a new output section for each input file.
.B \-split\-by\-reloc
と似ているが、それぞれの入力ファイルに対して新たな出力セクショ
ンを生成する。

.TP
.BI "\-Tbss " "org"\c
.TP
.BI "\-Tdata " "org"\c
.TP
.BI "\-Ttext " "org"\c
.\"O Use \c
.\"O .I org\c
.\"O \& as the starting address for\(em\&respectively\(em\&the
.\"O \c
.\"O .B bss\c
.\"O \&, \c
.\"O .B data\c
.\"O \&, or the \c
.\"O .B text\c
.\"O \& segment of the output file.
.\"O \c
.\"O .I textorg\c
.\"O \& must be a hexadecimal integer.
それぞれ出力ファイルの \fBbss\fP、 \fBdata\fP、 \fBtext\fP セグメント
に対して
.I org
を開始アドレスにする。
.I org
は 16 進の整数でなければならない。

.TP
.BI "\-T " "commandfile"
.\"O Equivalent to \c
.\"O .B \-c \c
.\"O .I commandfile\c
.\"O \&\c
.\"O \&; supported for compatibility with
.\"O other tools.  
.B \-c \c
.I commandfile
と等価である。他のツールとの互換性のために用意された。

.TP
.B \-t 
.\"O Prints names of input files as \c
.\"O .B ld\c
.\"O \& processes them.
入力ファイルを
.B ld
が処理するごとに、ファイルの名前を表示する。

.TP
.BI "\-u " "sym"
.\"O Forces \c
.\"O .I sym\c
.\"O \& to be entered in the output file as an undefined symbol.
.\"O This may, for example, trigger linking of additional modules from
.\"O standard libraries.  \c
.\"O .B \-u\c
.\"O \& may be repeated with different option
.\"O arguments to enter additional undefined symbols.
.I sym
を出力ファイルに未定義なシンボルとして挿入する。例えばこれは、標準ライ
ブラリから付加的なモジュールをリンクするトリガに使うことができる。
.B \-u
は必要な未定義シンボルの数だけ繰り返すことができる。

.TP
.B \-Ur 
.\"O For anything other than C++ programs, this option is equivalent to
.\"O \c
.\"O .B \-r\c
.\"O \&: it generates relocatable output\(em\&i.e., an output file that can in
.\"O turn serve as input to \c
.\"O .B ld\c
.\"O \&.  When linking C++ programs, \c
.\"O .B \-Ur
.\"O .I will\c
.\"O \& resolve references to constructors, unlike \c
.\"O .B \-r\c
.\"O \&.
C++ プログラム以外では、このオプションは
.B \-r
と等価であり、リロケータブルな出力を生成する (つまり再び
.B ld
の入力ファイルに用いることのできるファイルを出力する)。
C++ プログラムをリンクする際には、
.B \-Ur
は
.B \-r
と異なり、コンストラクタへの参照を解決する。

.TP
.B \-\-verbose
.\"O Display the version number for \c
.\"O .B ld
.\"O and list the supported emulations.
.\"O Display which input files can and can not be opened.
.B ld
のバージョン番号を表示し、サポートされているエミュレーションをリストす
る。入力ファイルがそれぞれオープンできるかどうかも表示する。

.TP
.B \-v, \-V
.\"O Display the version number for \c
.\"O .B ld\c
.\"O \&.
.\"O The
.\"O .B \-V
.\"O option also lists the supported emulations.
.B ld
のバージョン番号を表示する。
.B \-V
はサポートされているエミュレーションもリストする。

.TP
.B \-\-version
.\"O Display the version number for \c
.\"O .B ld
.\"O and exit.
.B ld
のバージョン番号を表示して終了する。

.TP
.B \-warn\-common
.\"O Warn when a common symbol is combined with another common symbol or with
.\"O a symbol definition.  Unix linkers allow this somewhat sloppy practice,
.\"O but linkers on some other operating systems do not.  This option allows
.\"O you to find potential problems from combining global symbols.
共通シンボルが他の共通シンボルやシンボル定義と結合されている場合に警告
を発する。 Unix のリンカはこの点には比較的寛容であるが、他の OS のリン
カにはそうでないものもある。このオプションはグローバルシンボルを結合す
ることによって生じる問題点を見つける手がかりになるかもしれない。

.TP
.B \-warn\-constructors
.\"O Warn if any global constructors are used.  This is only useful for a
.\"O few object file formats.  For formats like COFF or ELF, the linker can
.\"O not detect the use of global constructors.
グローバルコンストラクタが用いられたら警告を発する。これが意味を持つオ
ブジェクトファイルフォーマットは少ない。 COFF や ELF では、リンカはグ
ローバルコンストラクタを検出することができない。

.TP
.B \-warn\-multiple\-gp
.\"O Warn if the output file requires multiple global-pointer values.  This
.\"O option is only meaningful for certain processors, such as the Alpha.
出力ファイルに複数のグローバルなポインタ値が必要な場合に警告を発する。
このオプションが意味を持つのは、 Alpha のような特殊なプロセッサだけで
ある。

.TP
.B \-warn\-once
.\"O Only warn once for each undefined symbol, rather than once per module
.\"O which refers to it.
未定義シンボルに関する警告をシンボルごとに一度だけにする。デフォルトで
はそのシンボルを参照するモジュール一つについて一回警告が出る。

.TP
.B \-warn\-section\-align
.\"O Warn if the address of an output section is changed because of
.\"O alignment.  Typically, the alignment will be set by an input section.
.\"O The address will only be changed if it not explicitly specified; that
.\"O is, if the SECTIONS command does not specify a start address for the
.\"O section.
出力セクションのアドレスがアラインメントのために変更された場合に
警告を出す。通常アラインメントは入力セクションによって設定される。
アドレスは明示的に指定されなかった場合 (つまり SECTIONS コマンドが
セクションのスタートアドレスを指定しなかった場合) にのみ変更されうる。

.TP
.B \-\-whole\-archive
.\"O For each archive mentioned on the command line after the
.\"O .B \-\-whole\-archive
.\"O option, include every object file in the archive in the link, rather
.\"O than searching the archive for the required object files.  This is
.\"O normally used to turn an archive file into a shared library, forcing
.\"O every object to be included in the resulting shared library.
コマンドラインでこのオプション以降に指定されたそれぞれの書庫に対して、
書庫内部の全てのオブジェクトファイルをリンクする (デフォルトでは書庫か
ら必要なオブジェクトファイルを検索する)。これは通常書庫ファイルを共有
ライブラリに変えるとき、内部のオブジェクトを全て共有ライブラリに含め
るために指定される。

.TP
.B \-\-no\-whole\-archive
.\"O Turn off the effect of the
.\"O .B \-\-whole\-archive
.\"O option for archives which appear later on the command line.
コマンドラインでこのオプション以降に現われる書庫に対して
.B \-\-whole\-archive
オプションの効果を無効にする。

.TP
.\"O .BI "--wrap " "symbol"
.BI "\-\-wrap " "symbol"
.\"O Use a wrapper function for 
.\"O .I symbol.
.\"O Any undefined reference to
.\"O .I symbol
.\"O will be resolved to
.\"O .BI "__wrap_" "symbol".
.\"O Any undefined reference to
.\"O .BI "__real_" "symbol"
.\"O will be resolved to
.\"O .I symbol.
.I symbol
に対してラッパ機能を用いる。
.I symbol
への未定義な参照は全て
.BI "__wrap_" "symbol"
として解決される。また
.BI "__REAL_" "symbol"
への未定義な参照はすべて
.I symbol
として解決される。

.TP
.B \-X 
.\"O Delete all temporary local symbols.  For most targets, this is all local
.\"O symbols whose names begin with `\|\c
.\"O .B L\c
.\"O \|'.
一時的なローカルシンボルをすべて削除する。ほとんどのターゲットでは、これは
`\fBL\fP' で始まるローカルシンボルを意味する。

.TP
.B \-x
.\"O Delete all local symbols.
ローカルシンボルを全て削除する。
.PP

.\"O .SH ENVIRONMENT
.SH 環境変数
.\"O \c
.\"O You can change the behavior of
.\"O .B ld\c
.\"O \& with the environment variable \c
.\"O .B GNUTARGET\c
.\"O \&.
.B ld
の動作は環境変数
.B GNUTARGET
によって変更することができる。

.\"O \c
.\"O .B GNUTARGET\c
.\"O \& determines the input-file object format if you don't
.\"O use \c
.\"O .B \-b\c
.\"O \& (or its synonym \c
.\"O .B \-format\c
.\"O \&).  Its value should be one
.\"O of the BFD names for an input format.  If there is no
.\"O \c
.\"O .B GNUTARGET\c
.\"O \& in the environment, \c
.\"O .B ld\c
.\"O \& uses the natural format
.\"O of the host. If \c
.\"O .B GNUTARGET\c
.\"O \& is set to \c
.\"O .B default\c
.\"O \& then BFD attempts to discover the
.\"O input format by examining binary input files; this method often
.\"O succeeds, but there are potential ambiguities, since there is no method
.\"O of ensuring that the magic number used to flag object-file formats is
.\"O unique.  However, the configuration procedure for BFD on each system
.\"O places the conventional format for that system first in the search-list,
.\"O so ambiguities are resolved in favor of convention.
.B GNUTARGET
は \fB\-b\fP (または等価なオプション \fB\-format\fP) を用いない場合の
入力ファイルのオブジェクトフォーマットを定義する。この値は入力フォーマッ
トに対して有効な BFD 名の一つでなければならない。
.B GNUTARGET
が \fBdefault\fP に設定されていた場合には、 BFD は入力されるバイナリファ
イルを調べて入力フォーマットを決定しようとする。これは通常は成功するが、
決定できない可能性もある。オブジェクトファイルフォーマットで用いられて
いるマジック・ナンバーが一意であることを保証する方法は存在しないからで
ある。しかし BFD をそれぞれのシステムで設定する際には、そのシステムに
一般的なフォーマットが検索リストの最初の方に置かれる。したがって複数
フォーマットの可能性が存在した場合には、より一般的なフォーマットとして
解釈される。
.PP

.\"O .SH "SEE ALSO"
.SH 関連項目

.BR objdump ( 1 )
.br
.br
.\"O .RB "`\|" ld "\|' and `\|" binutils "\|'"
.\"O entries in
.\"O .B info\c
.\"O .br
.\"O .I 
.\"O ld: the GNU linker\c
.\"O , Steve Chamberlain and Roland Pesch;
.\"O .I
.\"O The GNU Binary Utilities\c
.\"O , Roland H. Pesch.
.B info
の `\fBld\fP' および `\fBbinutils\fP' エントリ
.br
.I "ld: the GNU linker"
, Steve Chamberlain and Roland Pesch;
.I "The GNU Binary Utilities"
, Roland H. Pesch

.\"O .SH COPYING
.SH 著作権
Copyright (c) 1991, 1992 Free Software Foundation, Inc.
.PP
Permission is granted to make and distribute verbatim copies of
this manual provided the copyright notice and this permission notice
are preserved on all copies.
.PP
Permission is granted to copy and distribute modified versions of this
manual under the conditions for verbatim copying, provided that the
entire resulting derived work is distributed under the terms of a
permission notice identical to this one.
.PP
Permission is granted to copy and distribute translations of this
manual into another language, under the above conditions for modified
versions, except that this permission notice may be included in
translations approved by the Free Software Foundation instead of in
the original English.
