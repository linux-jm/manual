.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man v6.0.2 (Pod::Simple 3.45)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Required to disable full justification in groff 1.23.0.
.if n .ds AD l
.\" ========================================================================
.\"
.IX Title "AR 1"
.TH AR 1 2025-10-13 binutils-2.45.50 "GNU Development Tools"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.mso ja.tmac
.hla ja
.SH 名前
ar \- アーカイブの作成、変更、および抽出
.SH 書式
.IX Header "書式"
ar [\fB\-X32_64\fR] [\fB\-\fR]\fIp\fR[\fImod\fR] [\fB\-\-plugin\fR \fIname\fR] [\fB\-\-target\fR \fIbfdname\fR] [\fB\-\-output\fR \fIdirname\fR] [\fB\-\-record\-libdeps\fR \fIlibdeps\fR] [\fB\-\-thin\fR] [\fIrelpos\fR] [\fIcount\fR] \fIarchive\fR [\fImember\fR...]
.SH 説明
.IX Header "説明"
GNU\fBar\fR プログラムは、書庫(アーカイブ)を作成、変更、および抽出します。\fIarchive\fR は、元の個々のファイル(アーカイブの \fIメンバー\fRと呼ばれる)を取得できる構造で他のファイルのコレクションを保持する単一のファイルです。
.PP
元のファイルの 内容、モード(権限)、タイムスタンプ、所有者、グループはアーカイブに保存され、解凍時に復元できます。
.PP
GNU\fBar\fR は、メンバーが任意の長さの名前を持つアーカイブを保持できます。ただし、\fBar\fR がシステムでどのように構成されているかによっては、他のツールで保持されるアーカイブ形式との互換性のために、member\-name の長さに制限が課される場合があります。これが存在する場合、多くの場合、制限は15文字(a.out に関連するフォーマットでは一般的)または16文字(coff に関連するフォーマットでは一般的)です。
.PP
\&\fBar\fR はバイナリユーティリティと考えられています。なぜなら、このソートのアーカイブは、一般的に必要とされるサブルーチンを保持する \fIlibraries\fR として最も頻繁に使用されるからです。ライブラリは他のライブラリに依存することが多いため、\fB\-\-record\-libdeps\fR オプションが指定されている場合、\fBar\fR は、ライブラリの依存関係を記録することもできます。
.PP
\&\fBar\fR は、修飾子 \fBs\fR を指定したときに、アーカイブ内の再配置可能オブジェクトモジュールで定義されたシンボルへのインデックスを作成します。
作成されたインデックスは、 \fBar\fR がその内容を変更するたびにアーカイブ内で更新されます (\fBq\fR 更新操作用に保存)。
このようなインデックスを持つアーカイブは、ライブラリへのリンクを高速化し、ライブラリ内のルーチンがアーカイブ内の配置に関係なく相互に呼び出すことを可能にします。
.PP
このインデックステーブルを表示するには、\fBnm \-s\fR または \fBnm \-\-print\-armap\fR を使用できます。アーカイブにテーブルがない場合は、\fBar\fR と呼ばれる別の形式の \fBranlib\fR を使用してテーブルだけを追加できます。
.PP
GNU \fBar\fR は、オプションで \fIthin\fR アーカイブを作成できます。このアーカイブには、シンボルインデックスと、アーカイブのメンバーファイルの元のコピーへの参照が含まれています。これは、再配置可能なオブジェクトが使用可能なままであることが期待され、各オブジェクトの内容をコピーしても時間とスペースを無駄にするだけであるローカル構築ツリー内で使用するライブラリを構築する場合に便利です。
.PP
アーカイブは \fIthin\fR の場合もあれば、通常の場合もあります。両方を同時に使用することはできません。.  アーカイブが作成されると、まずそのアーカイブを削除し、次にその場所に新しいアーカイブを作成しない限り、その形式を変更することはできません。
.PP
Thin アーカイブも \fIフラット化\fR されているため、ある thin アーカイブを別のthin アーカイブに追加しても、通常のアーカイブのようにネストされることはありません。代わりに、最初のアーカイブの要素が2番目のアーカイブに個別に追加されます。
.PP
アーカイブの要素へのパスは、アーカイブ自体に対して相対的に保存されます。
.PP
GNU \fBar\fR は 2つの異なるファシリティと互換性があるように設計されています。Unix システム上のさまざまな種類の \fBar\fR のように、コマンドラインオプションを使ってその動作を制御することができます。あるいは、単一のコマンドラインオプション \fB\-M\fR を指定した場合、MRI の「librarian」プログラムのように、標準入力で提供されるスクリプトを使って制御することができます。
.SH オプション
.IX Header "オプション"
GNU \fBar\fR を使用すると、最初のコマンドライン引数内で、操作コード \fIp\fR と修飾子フラグ \fImod\fR を任意の順序で混在させることができます。
.PP
必要に応じて、最初のコマンドライン引数をダッシュ (\-) で始めることができます。
.PP
\&\fIp\fR キー文字は、実行する操作を指定します。次のいずれかを指定できますが、指定する必要があるのは 1つだけです:
.IP \fBd\fR 4
.IX Item "d"
モジュールをアーカイブから \fIDelete\fR します。.  削除するモジュールの名前を \fImember\fR... として指定します。削除するファイルを指定しない場合、アーカイブは変更されません。
.Sp
\&\fBv\fR 修飾子を指定すると、削除された各モジュールが \fBar\fR で一覧表示されます。
.IP \fBm\fR 4
.IX Item "m"
この操作を使用して、アーカイブ内のメンバーを\fI移動\fRします。
.Sp
シンボルが複数のメンバーで定義されている場合、アーカイブ内のメンバーの順序によって、ライブラリを使用したプログラムのリンク方法が異なる場合があります。
.Sp
\&\f(CW\*(C`m\*(C'\fR で修飾子が使用されていない場合、\fImember\fR 引数で指定した任意のメンバはアーカイブの \fI最後尾\fR に移動されます。代わりに、 \fBa\fR、\fBb\fR、または \fBi\fR 修飾子を使用して、指定した場所にも移動できます。
.IP \fBp\fR 4
.IX Item "p"
アーカイブの指定されたメンバーを標準出力ファイルに\fI出力\fRします。\fBv\fR 修飾子が指定されている場合は、メンバー名を表示してからその内容を標準の出力にコピーします。
.Sp
\&\fImember\fR 引数を指定しない場合、アーカイブ内のすべてのファイルが印刷されます。
.IP \fBq\fR 4
.IX Item "q"
\&\fIQuick append\fR; 従来は、置換を確認せずに、\fImember\fR... の最後に\fIarchive\fRファイルを追加していました。
.Sp
修飾子 \fBa\fR、 \fBb\fR、 \fBi\fR はこの操作に\fI影響を与えません\fR。新しいメンバーは常にアーカイブの最後に配置されます。
.Sp
\&\fBv\fR 修飾子は、追加された各ファイルを\fBar\fR にリストさせます。
.Sp
この操作のポイントは速度であるため、\fBar\fR の実装には、アーカイブのシンボルテーブルが存在する場合、それを更新しないオプションがあります。しかし、あまりにも多くの異なるシステムがシンボルテーブルが常に最新であることを前提としているため、 GNU \fBar\fR は quick append を行ってもテーブルを再構築します。
.Sp
注意 \- GNU \fBar\fR は、コマンド \fBqs\fR を \fBr\fR の同義語として扱います。アーカイブ内の既存のファイルを置き換え、最後に新しいファイルを追加します。
.IP \fBr\fR 4
.IX Item "r"
\&\fImember\fR... のファイルを \fIarchive\fR に挿入します(\fI置換\fRを使用して)。この操作は、追加されるメンバーと名前が一致する既存のメンバーが削除されるという点で、 \fBq\fR とは異なります。
.Sp
\&\fImember\fR... で指定されたファイルのいずれかが存在しない場合、\fBar\fR はエラーメッセージを表示し、その名前に一致するアーカイブの既存のメンバーをそのまま残します。
.Sp
デフォルトでは、新しいメンバーはファイルの最後に追加されますが、 \fBa\fR、\fBb\fR、または \fBi\fR のいずれかの修飾子を使用して、既存のメンバーに対して相対的な配置を要求できます。
.Sp
この操作で使用される修飾子 \fBv\fR は、挿入された各ファイルの出力の行と、ファイルが追加された(古いメンバーが削除されていない)か置換されたかを示す \fBa\fR または \fBr\fR の文字の1つを引き出します。
.IP \fBs\fR 4
.IX Item "s"
アーカイブにインデックスを追加するか、すでに存在する場合は更新します。注意
このコマンドは、コマンドまたは修飾子として使用できるため、1つのコマンド文字しか使用できないという規則の例外です。どちらの場合も同じことを行います。
.IP \fBt\fR 4
.IX Item "t"
\&\fIarchive\fRの内容、またはアーカイブに存在する \fImember\fR... にリストされたファイルの内容をリストする\fIテーブル\fRを表示します。通常はメンバー名のみが表示されますが、修飾子 \fBO\fR が指定されている場合は、メンバーの対応するオフセットも表示されます。最後に、モード(パーミッション)、タイムスタンプ、所有者、グループ、サイズを表示するには、 \fBv\fR 修飾子を含める必要があります。
.Sp
\&\fImember\fR を指定しない場合は、アーカイブ内のすべてのファイルが一覧表示されます。
.Sp
アーカイブ(たとえば、\fBb.a\fR) 内に同じ名前のファイル(たとえば、\fBfie\fR)  が複数ある場合、\fBar t b.a fie\fR は最初のもののみをリストします。これらすべてを表示するには、完全なリスト(この例では、\fBar t b.a\fR) を指定する必要があります。
.IP \fBx\fR 4
.IX Item "x"
アーカイブから\fImember\fR) という名前のメンバーを\fI抽出\fR します。この操作で \fBv\fR 修飾子を使用すると、\fBar\fR が抽出するときに個々の名前をリストするように要求できます。
.Sp
.Vb 1
\& I<member> を指定しない場合、アーカイブ内のすべてのファイルが展開されます。
.Ve
.Sp
thin アーカイブからファイルを抽出することはできません。また、 \fBP\fR で作成されたアーカイブからの抽出には制限があります。パスは絶対パスであってはならず、 \f(CW\*(C`..\*(C'\fR を含んではならず、パス内のサブディレクトリが存在している必要があります。これらの制限を避けたい場合は、\fB\-\-output\fR オプションを使用して、出力するディレクトリを指定します。
.PP
操作の動作を調整するために、\fImod\fRキー文字の直後にいくつかの修飾子( \fIp\fR)を指定できます。
.IP \fBa\fR 4
.IX Item "a"
アーカイブの既存のメンバーの\fI後\fRに新しいファイルを追加します。 \fBa\fR修飾子を使用する場合、既存のアーカイブ・メンバーの名前は、\fIarchive\fR の前に \fIrelpos\fR 引数として存在する必要があります。
.IP \fBb\fR 4
.IX Item "b"
新しいファイルをアーカイブの既存のメンバーの\fI前\fRに追加します。\fBb\fR 修飾子を使用する場合、既存のアーカイブ・メンバーの名前は、\fIarchive\fR の前に \fIrelpos\fR 引数として存在する必要があります(\fBi\fR と同じ)。
.IP \fBc\fR 4
.IX Item "c"
アーカイブを\fI作成\fR します。指定された\fIarchive\fR が存在しない場合は、更新を要求したときに常に作成されます。ただし、この修飾子を使用して作成することを事前に指定しない限り、警告が表示されます。
.IP \fBD\fR 4
.IX Item "D"
\&\fIdeterministic\fRモードで操作します。ファイルとアーカイブインデックスを追加するときは、UID、GID、タイムスタンプ にゼロを使用し、すべてのファイルに一貫したファイルモードを使用します。このオプションを使用する場合、\fBar\fR を同一のオプションおよび同一の入力ファイルとともに使用すると、入力ファイルの所有者、グループ、ファイルモード、または変更時刻に関係なく、複数の実行によって同一の出力ファイルが作成されます。
.Sp
\&\fIbinutils\fR が \fB\-\-enable\-deterministic\-archives\fR と設定されている場合、このモードはデフォルトで有効になります。
下記の \fBU\fR 修飾子で無効にすることができます。
.Sp
アーカイブ内の名前を切り詰めます。GNU \fBar\fR は通常、任意の長さのファイル名を許可します。これにより、一部のシステムではネイティブの \fBar\fR プログラムと互換性のないアーカイブが作成されます。これが懸念される場合は、 \fBf\fR 修飾子を使用して、ファイル名をアーカイブに入れるときにファイル名を切り捨てることができます。
.IP \fBi\fR 4
.IX Item "i"
アーカイブの既存のメンバーの\fI前\fRに新しいファイルを挿入します。修飾子 \fBi\fRを使用する場合、既存のアーカイブ・メンバーの名前は、\fIarchive\fR の前に \fIrelpos\fR 引数として存在する必要があります。(\fBb\fR と同じ)。
.IP \fBl\fR 4
.IX Item "l"
Specify dependencies of this library.  依存関係は、このオプション文字の直後に記述し、リンカーのコマンド行と同じ構文を使用し、単一の引数内で指定する必要があります。つまり、複数の項目が必要な場合は、それらを引用して 1つのコマンドライン引数を形成する必要があります。例 \fBl "\-L/usr/local/lib \-lmydep1 \-lmydep2"\fR
.IP \fBN\fR 4
.IX Item "N"
\&\fIcount\fR パラメータを使用します。これは、アーカイブ内に同じ名前のエントリが複数ある場合に使用されます。指定された名前のインスタンス \fIcount\fR をアーカイブから抽出または削除します。
.IP \fBo\fR 4
.IX Item "o"
メンバーを抽出するときに、メンバーの\fIオリジナル\fR日付を保持します。この修飾子を指定しない場合、アーカイブから抽出されたファイルには、抽出時刻がスタンプされます。
.IP \fBO\fR 4
.IX Item "O"
アーカイブ内のメンバー・オフセットを表示します。\fBt\fR オプションと一緒に使用します。
.IP \fBP\fR 4
.IX Item "P"
アーカイブ内の名前を照合または保存する場合は、フルパス名を使用します。
フルパス名で作成されたアーカイブはPOSIXに準拠していないため、最新の GNU ツール以外のツールでは動作しない可能性があります。
GNU \fBar\fR を使用せずにこのようなアーカイブを\fBP\fR で変更すると、アーカイブが thin アーカイブでない限り、フルパス名が削除されます。 \fBP\fR を使用しない \fBr\fR では、置換する要素を選択するときにパスが無視されるため、 \fBP\fR はthin アーカイブにファイルを追加する場合に便利です。そのため、
.Sp
.Vb 1
\&        ar rcST archive.a subdir/file1 subdir/file2 file1
.Ve
.Sp
は、現在のディレクトリの最初の \f(CW\*(C`subdir/file1\*(C'\fR が \f(CW\*(C`file1\*(C'\fR に置き換えられます。 \fBP\fR を追加すると、この置換が防止されます。
.IP \fBs\fR 4
.IX Item "s"
アーカイブに対して他の変更が行われていない場合でも、オブジェクトファイルインデックスをアーカイブに書き込むか、既存のインデックスを更新します。この修飾子フラグは、任意の操作と一緒に使用することも、単独で使用することもできます。アーカイブに対して\fBar s\fRを実行することは、アーカイブに対して\fBranlib\fR を実行することと同じです。
.IP \fBS\fR 4
.IX Item "S"
アーカイブシンボルテーブルを生成しません。これにより、いくつかのステップで大規模なライブラリの構築をスピードアップできます。結果のアーカイブはリンカでは使用できません。シンボルテーブルを構築するには、 \fBS\fR の最後の実行で \fBar\fR 修飾子を省略するか、アーカイブに対して \fBranlib\fR を実行する必要があります。
.IP \fBT\fR 4
.IX Item "T"
\&\fB\-\-thin\fR の廃止されたエイリアス。\fBT\fR は、X/Open System Interface で指定されているように、多くの ar 実装では \fBT\fR が異なる意味を持つため、推奨されません。
.IP \fBu\fR 4
.IX Item "u"
通常、\fBar r\fR... はリストされたすべてのファイルをアーカイブに挿入します。同じ名前の既存のメンバーよりも新しい、リストしたファイルの\fIonly\fR を挿入したい場合は、この修飾子を使用します。\fBu\fR 修飾子は、 \fBr\fR (置換)操作でのみ使用できます。特に、タイムスタンプをチェックすると、\fBq\fRの操作の、速度の利点が失われるため、 \fBqu\fRの組み合わせは許可されません。
.Sp
注意: アーカイブが確定的な方法で作成された場合、たとえば、 \fBD\fR 修飾子を使用して作成された場合、置換は常に行われ、 \fBu\fR 修飾子は無効になります。
.IP \fBU\fR 4
.IX Item "U"
\&\fIdeterministic\fRモードで\fI動作\fRしません。これは、上記の \fBD\fR 修飾子の逆です。追加されたファイルとアーカイブインデックスは、実際のUID、GID、タイムスタンプ、ファイルモードの値を取得します。
.Sp
\&\fIbinutils\fR が \fB\-\-enable\-deterministic\-archives\fR で設定されていない限り、これがデフォルトです。
.IP \fBv\fR 4
.IX Item "v"
この修飾子は、\fIverbose\fRバージョンの操作を要求します。多くの操作では、修飾子 \fBv\fR が追加されると、処理されたファイル名などの追加情報が表示されます。
.IP \fBV\fR 4
.IX Item "V"
この修飾子は \fBar\fRのバージョン番号を表示します。
.PP
\&\fBar\fR プログラムは、修飾子でもアクションでもない いくつかのコマンドラインオプションもサポートしていますが、特定の方法で動作を変更します。
.IP \fB\-\-help\fR 4
.IX Item "--help"
\&\fBar\fRでサポートされているコマンドラインオプションの一覧を表示して終了します。
.IP \fB\-\-version\fR 4
.IX Item "--version"
\&\fBar\fR のバージョン情報を表示して終了します。
.IP \fB\-X32_64\fR 4
.IX Item "-X32_64"
\&\fBar\fR は、AIXとの互換のために、 \fB\-X32_64\fRと綴られた最初のオプションを無視します。このオプションによって生成される動作は、GNU \fBar\fRのデフォルトです。\fBar\fR は、他の \fB\-X\fR オプションをサポートしていません。特に、AIX  \fBar\fRのデフォルトである\fB\-X32\fR はサポートしていません。
.IP "\fB\-\-plugin\fR \fIname\fR" 4
.IX Item "--plugin name"
オプションのコマンドラインスイッチ \fB\-\-plugin\fR \fIname\fR を使用すると、\fBar\fR は \fIname\fR と呼ばれるプラグインをロードします。 これにより、リンク時の最適化情報を含むオブジェクトファイルなど、より多くのファイル形式のサポートが追加されます。
.Sp
このオプションは、ツールチェーンがプラグインサポートを有効にして構築されている場合にのみ使用できます。
.Sp
\&\fB\-\-plugin\fR が指定されていないが、プラグインサポートが有効になっている場合、 \fBar\fR は \fI${libdir}/bfd\-plugins\fR 内のファイルをアルファベット順に繰り返し、問題のオブジェクトを要求する最初のプラグインが使用されます。
.Sp
このプラグイン検索ディレクトリは、\fBld\fR の \fB\-plugin\fR オプションで使用されるもの\fIではない\fRことに注意してください。\fBar\fR にリンカープラグインを使用させるには、\fI${libdir}/bfd\-plugins\fRディレクトリにコピーする必要があります。GCC ベースのコンパイルでは、リンカープラグインは \fIliblto_plugin.so.0.0.0\fR と呼ばれます。Clang ベースのコンパイルでは、\fILLVMgold.so\fR と呼ばれます。GCC プラグインは常に以前のバージョンと下位互換性があるため、最新のものをコピーするだけで十分です。
.IP "\fB\-\-target\fR \fItarget\fR" 4
.IX Item "--target target"
オプションのコマンドラインスイッチ \fB\-\-target\fR \fIbfdname\fR は、アーカイブメンバーがシステムのデフォルトフォーマットとは異なるオブジェクトコードフォーマットであることを指定します。詳細は Target Selection(訳注: infoファイル内のみ) を参照してください。
.IP "\fB\-\-output\fR \fIdirname\fR" 4
.IX Item "--output dirname"
\&\fB\-\-output\fR オプションを使用すると、アーカイブ・メンバーを抽出するディレクトリへのパスを指定できます。このオプションを指定しない場合は、現在のディレクトリが使用されます。
.Sp
注意: このオプションの存在は \fBx\fR の抽出操作を仮定しますが、コマンドラインにはこのオプションを含める必要があります。
.IP "\fB\-\-record\-libdeps\fR \fIlibdeps\fR" 4
.IX Item "--record-libdeps libdeps"
\&\fB\-\-record\-libdeps\fR オプションは \fBl\fR 修飾子と同じですが、長い形式で処理されます。
.IP \fB\-\-thin\fR 4
.IX Item "--thin"
指定された\fIarchive\fRを\fIthin\fRアーカイブにします。すでに存在し、通常のアーカイブである場合、既存のメンバーは\fIarchive\fRと同じディレクトリに存在する必要があります。
.IP \fB@\fR\fIfile\fR 4
.IX Item "@file"
\&\fIfile\fR からコマンドラインオプションを読み込みます。読み込まれた
オプションは、元の @\fIfile\fR オプションの代わりに挿入されます。
\&\fIfile\fRが存在しない場合、または読み込めない場合、オプションは
文字通りに扱われ、削除されません。
.Sp
\&\fIfile\fR 中のオプションは空白で区切られます。空白文字は、オプション
全体を一重引用符または二重引用符で囲むことによってオプションに含める
ことができます。任意の文字 (バックスラッシュを含む) は、含まれる文字の
前にバックスラッシュを付けることによって含めることができます。
\&\fIfile\fR 自体に追加の @\fIfile\fR オプションを含めることができます。
このようなオプションは再帰的に処理されます。
.SH "関連項目"
.IX Header "関連項目"
\&\fBnm\fR\|(1), \fBranlib\fR\|(1), と\fIbinutils\fR 用の Info エントリ。
.SH 著作権
.IX Header "著作権"
Copyright (c) 1991\-2025 Free Software Foundation, Inc.
.PP
Permission is granted to copy, distribute and/or modify this document
under the terms of the GNU Free Documentation License, Version 1.3
or any later version published by the Free Software Foundation;
with no Invariant Sections, with no Front\-Cover Texts, and with no
Back\-Cover Texts.  A copy of the license is included in the
section entitled "GNU Free Documentation License".
.SH 日本語訳
対応バージョン:2.45.50
翻訳日:2025-10-13
翻訳者:ribbon
