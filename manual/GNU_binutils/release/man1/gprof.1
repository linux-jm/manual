.\" Copyright (c) 1983, 1990 The Regents of the University of California.
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms are permitted provided
.\" that: (1) source distributions retain this entire copyright notice and
.\" comment, and (2) distributions including binaries display the following
.\" acknowledgement:  ``This product includes software developed by the
.\" University of California, Berkeley and its contributors'' in the
.\" documentation or other materials provided with the distribution and in
.\" all advertising materials mentioning features or use of this software.
.\" Neither the name of the University nor the names of its contributors may
.\" be used to endorse or promote products derived from this software without
.\" specific prior written permission.
.\" THIS SOFTWARE IS PROVIDED ``AS IS'' AND WITHOUT ANY EXPRESS OR IMPLIED
.\" WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF
.\" MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
.\"
.\"     @(#)gprof.1	6.6 (Berkeley) 7/24/90
.\"
.\" Japanese Version Copyright (c) 1997-2000 NAKANO Takeo all rights reserved.
.\" Translated Fri Jan 9 1998 by NAKANO Takeo <nakano@@apm.seikei.ac.jp>
.\" Updated Fri 27 Oct 2000 by NAKANO Takeo
.\"
.TH GPROF 1 "January 29, 1993"
.\"O .SH NAME
.\"O gprof \- display call graph profile data
.SH 名前
gprof \- コール・グラフ (call graph) のプロファイルを表示する
.\"O .SH SYNOPSIS
.SH 書式
.B gprof [ \-abcsz ] [ \-e|\-E
.I name
.B ] [ \-f|\-F 
.I name
.B ] 
.B [ \-k
.I fromname toname
.B ] [ 
.I objfile
.B [ 
.I gmon.out
.B ] 
.B ] 
.\"O .SH DESCRIPTION
.SH 説明
.\"O .B gprof
.\"O produces an execution profile of C, Pascal, or Fortran77 programs.
.\"O The effect of called routines is incorporated in the profile of each caller.
.\"O The profile data is taken from the call graph profile file
.\"O \&(`gmon.out' default) which is created by programs
.\"O that are compiled with the
.\"O .B \-pg
.\"O option of
.\"O .BR cc ( 1 ) ,
.\"O .BR pc ( 1 ) ,
.\"O and
.\"O .BR f77 ( 1 ) .
.B gprof
は C, Pascal, Fortran77 プログラムの実行プロファイルを生成する。呼び出
されたルーチンの値は呼び出し元に取り込まれる。プロファイルのためのデー
タはコール・グラフ (call graph: 関数コールの親子関係のグラフ) のプロファ
イルデータファイル (デフォルトでは `gmon.out') から取り
込まれる。このファイルは
.BR cc ( 1 ) 、
.BR pc ( 1 ) 、
.BR f77 ( 1 )
で
.B \-pg
オプションを指定してコンパイルされたプログラムによって作成される。
.\"O The
.\"O .B \-pg
.\"O option also links in versions of the library routines
.\"O that are compiled for profiling.
.\"O .B Gprof
.\"O reads the given object file (the default is `a.out')
.\"O and establishes the relation between its symbol table
.\"O and the call graph profile from `gmon.out'.
.\"O If more than one profile file is specified,
.\"O the
.\"O .B gprof
.\"O output shows the sum of the profile information in the given profile files.
.B \-pg
オプションでは、リンクされるライブラリもプロファイル用にコンパイルされ
たものになる。
.B gprof
は指定されたオブジェクトファイル (デフォルトは `a.out') からシンボ
ルテーブルを読み、これと `gmon.out' のコール・グラフ・プロファイルとを
関連付ける。
複数のプロファイルデータファイルが指定された場合には、
.B gprof
はそれらのプロファイル情報をすべて合計して表示する。
.PP
.\"O .B Gprof
.\"O calculates the amount of time spent in each routine.
.\"O Next, these times are propagated along the edges of the call graph.
.\"O Cycles are discovered, and calls into a cycle are made to share the time
.\"O of the cycle.
.\"O The first listing shows the functions
.\"O sorted according to the time they represent
.\"O including the time of their call graph descendants.
.\"O Below each function entry is shown its (direct) call graph children,
.\"O and how their times are propagated to this function.
.\"O A similar display above the function shows how this function's time and the
.\"O time of its descendants is propagated to its (direct) call graph parents.
.B gprof
はそれぞれのルーチンによって消費された時間を計算する。次にこれらの時間
をコール・グラフの枝に沿って親ルーチンへと伝播させる。プログラムの 
サイクル (cycle: 再帰呼び出しの循環) をまとめ、サイクルへのコールを行っ
たルーチンは、サイクルで消費した時間を共有するとみなす。最初のリストは
関数で、消費時間の順にソートされている。
消費時間にはコール・グラフでの子孫の分も含まれる。それぞれの関数エントリ
の下には、その関数のコール・グラフでの (直接の) 子と、そこで消費された
時間がどのように関数に伝播したかが表示される。同様の表示は関数の上にも
表示されており、その関数とそれらの子孫で消費された時間がどのようにコー
ル・グラフの (直接の) 親へ伝播するかが示される。
.PP
.\"O Cycles are also shown, with an entry for the cycle as a whole and
.\"O a listing of the members of the cycle and their contributions to the
.\"O time and call counts of the cycle.
サイクルも表示される。サイクル全体としてのエントリ、そのサイクルに属す
るメンバーのリストとそれぞれのメンバーによって消費された時間、その 
サイクルの呼び出し回数などが表示される。
.PP
.\"O Second, a flat profile is given,
.\"O similar to that provided by
.\"O .BR prof ( 1 )  .
.\"O This listing gives the total execution times, the call counts,
.\"O the time in milliseconds the call spent in the routine itself, and
.\"O the time in milliseconds the call spent in the routine itself including
.\"O its descendants.
次にフラットプロファイル
.RB ( prof (1)
の結果と似たもの) が与えられる。このリストでは合計実行時間、呼び出し回
数、そのルーチン自身で消費した時間 (ミリ秒単位)、子孫の分も含めて消費
した時間 (ミリ秒単位) が表示される。
.PP
.\"O Finally, an index of the function names is provided.
最後に関数名の索引が与えられる。
.\"O .SH OPTIONS
.SH オプション
.\"O The following options are available:
以下のオプションが指定できる:
.TP
.B \-a
.\"O suppresses the printing of statically declared functions.
.\"O If this option is given, all relevant information about the static function
.\"O (e.g., time samples, calls to other functions, calls from other functions)
.\"O belongs to the function loaded just before the static function in the
.\"O \&`objfile' file.
スタティックに宣言された関数を表示しない。このオプションが指定され
ると、スタティックな関数に関する全ての情報 (実行時間、他の関数の呼び出
し、他の関数から呼び出される関係など) は、ファイル `objfile' 中でこの
スタティックな関数の直前にロードされた関数に属することになる。
.TP
.B \-b
.\"O suppresses the printing of a description of each field in the profile.
プロファイルのそれぞれのフィールドに関する説明を表示しない。
.TP
.B \-c
.\"O the static call graph of the program is discovered by a heuristic
.\"O that examines the text space of the object file.
.\"O Static-only parents or children are shown
.\"O with call counts of 0.
プログラムのスタティックなコール・グラフを、オブジェクトファイルのテキ
ストセグメントを調べるという発見的 (heuristic) な手法で作成する。ス
タティック・コールだけの親や子の呼び出し回数は 0 として表示する。
.TP
.BI "\-e " name
.\"O suppresses the printing of the graph profile entry for routine
.\"O .I name
.\"O and all its descendants
.\"O (unless they have other ancestors that aren't suppressed).
.\"O More than one
.\"O .B \-e
.\"O option may be given.
.\"O Only one
.\"O .I name
.\"O may be given with each
.\"O .B \-e
.\"O option.
ルーチン
.I name
と、その子孫すべてに関するグラフプロファイルのエントリを表示しない 
(子孫に関しては、別の祖先がいれば表示される)。
.B \-e
オプションは複数回指定できる。一つの
.B \-e
オプションについて指定できる
.I name
は一つだけである。
.TP
.BI "\-E " name
.\"O suppresses the printing of the graph profile entry for routine
.\"O .I name
.\"O (and its descendants) as
.\"O .B \-e  ,
.\"O above, and also excludes the time spent in
.\"O .I name
.\"O (and its descendants) from the total and percentage time computations.
.\"O (For example,
.\"O .BI "\-E " mcount
.\"O .BI "\-E " mcleanup
.\"O is the default.)
.B \-e
と同様にルーチン
.I name
とその子孫に関するグラフプロファイルのエントリを表示しない。また
.I name
(とその子孫) によって消費された時間も、プログラム実行の総時間 (および
パーセンテージの計算) から除かれる。例えば
.BI "\-E " mcount
.BI "\-E " mcleanup
はデフォルトになっている。
.TP
.BI "\-f " name
.\"O prints the graph profile entry of only the specified routine
.\"O .I name
.\"O and its descendants.
.\"O More than one
.\"O .B \-f
.\"O option may be given.
.\"O Only one
.\"O .I name
.\"O may be given with each
.\"O .B \-f
.\"O option.
ルーチン
.I name
とその子孫に関してのみ、グラフプロファイルのエントリを表示する。
.B \-f
オプションは複数回指定できる。一つの
.B \-f
オプションについて指定できる
.I name
は一つだけである。
.TP
.BI "\-F " name
.\"O prints the graph profile entry of only the routine
.\"O .I name
.\"O and its descendants (as
.\"O .B \-f ,
.\"O above) and also uses only the times of the printed routines
.\"O in total time and percentage computations.
.\"O More than one
.\"O .B \-F
.\"O option may be given.
.\"O Only one
.\"O .I name
.\"O may be given with each
.\"O .B \-F
.\"O option.
.\"O The
.\"O .B \-F
.\"O option
.\"O overrides
.\"O the
.\"O .B \-E
.\"O option.
.B \-f
と同様に、ルーチン
.I name
とその子孫に関してのみ、グラフプロファイルのエントリを表示する。またこ
れらによって用いられた時間だけを合計の実行時間とパーセンテージの計算に
用いる。
.B \-F
オプションは複数指定できる。一つの
.B \-F
オプションについて指定できる
.I name
は一つだけである。
.B \-F
オプションは
.B \-E
オプションによる設定を上書きする。
.TP
.BI "\-k " "fromname toname"
.\"O will delete any arcs from routine
.\"O .I fromname
.\"O to routine
.\"O .IR toname  .
.\"O This can be used to break undesired cycles.
.\"O More than one
.\"O .B \-k
.\"O option may be given.
.\"O Only one pair of routine names may be given with each
.\"O .B \-k
.\"O option.
ルーチン
.I fromname
からルーチン
.I toname
までの枝を削除する。これは不要なサイクルの循環を破壊するのに便利である。
.B \-k
は複数指定できる。一つの
.B \-k
オプションに対して指定できるのは一組のルーチン名だけである。
.TP
.B \-s
.\"O a profile file `gmon.sum' is produced that represents
.\"O the sum of the profile information in all the specified profile files.
.\"O This summary profile file may be given to later
.\"O executions of gprof (probably also with a
.\"O .BR \-s  )
.\"O to accumulate profile data across several runs of an `objfile' file.
プロファイルファイル `gmon.sum' を作成し、指定したプロファイルファイル
の情報すべてからのプロファイル情報を総計したものを書き込む。この合計プ
ロファイルファイルは後に gprof を (おそらくは
.B \-s
と共に) 実行する際に与えて、 `objfile' ファイルを複数回実行して得られ
たプロファイルデータを累積するために用いることもできる。
.TP
.\"O .B -v
.B \-v
.\"O prints the version number for gprof, and then exits.
gprof のバージョン番号を表示して終了する。
.TP
.\"O .B -z
.B \-z
.\"O displays routines that have zero usage (as shown by call counts
.\"O and accumulated time).
.\"O This is useful with the
.\"O .B \-c
.\"O option for discovering which routines were never called.
用いられなかった関数 (呼び出し回数と実行時間でわかる) も表示する。これ
を
.B \-c
オプションと共に用いると、呼び出されなかったルーチンを見つけるのに役
に立つ。
.PP
.\"O .SH FILES
.SH ファイル
.\"O .ta \w'gmon.sum 'u
.\"O a.out	the namelist and text space.
a.out       名前のリストとテキスト空間
.br
.\"O gmon.out	dynamic call graph and profile.
gmon.out    ダイナミックなコール・グラフとプロファイル
.br
.\"O gmon.sum summarized dynamic call graph and profile.
gmon.sum    ダイナミックなコール・グラフとプロファイルのまとめ

.\"O .SH SEE ALSO
.SH 関連項目
.BR monitor ( 3 ) ,
.BR profil ( 2 ) ,
.BR cc ( 1 ) ,
.BR prof ( 1 )
.sp
``An Execution Profiler for Modular Programs'',
by S. Graham, P. Kessler, M. McKusick;
.I
Software \- Practice and Experience,
Vol. 13, pp. 671-685, 1983.
.sp
``gprof: A Call Graph Execution Profiler'',
by S. Graham, P. Kessler, M. McKusick;
.I
Proceedings of the SIGPLAN '82 Symposium on Compiler Construction,
SIGPLAN Notices, Vol. 17, No  6, pp. 120-126, June 1982.

.\"O .SH HISTORY
.SH 履歴
.\"O .B Gprof
.\"O appeared in 4.2 BSD.
.B gprof
は 4.2 BSD から登場した。
.\"O .SH BUGS
.SH バグ
.\"O The granularity of the sampling is shown, but remains
.\"O statistical at best.
.\"O We assume that the time for each execution of a function
.\"O can be expressed by the total time for the function divided
.\"O by the number of times the function is called.
.\"O Thus the time propagated along the call graph arcs to the function's
.\"O parents is directly proportional to the number of times that
.\"O arc is traversed.
サンプリングの粒度 (granularity) も表示されるが、せいぜい統計的なもの
でしかない。ここでは関数の一回あたりの実行時間は、関数の消費した合計時
間を呼び出し回数で割ったものと仮定している。したがって、呼び出しグラフの
枝を伝播して関数の親に伝わる時間は、枝を通過した回数に直に比例すること
になる。
.PP
.\"O Parents that are not themselves profiled will have the time of
.\"O their profiled children propagated to them, but they will appear
.\"O to be spontaneously invoked in the call graph listing, and will
.\"O not have their time propagated further.
.\"O Similarly, signal catchers, even though profiled, will appear
.\"O to be spontaneous (although for more obscure reasons).
.\"O Any profiled children of signal catchers should have their times
.\"O propagated properly, unless the signal catcher was invoked during
.\"O the execution of the profiling routine, in which case all is lost.
自分自身がプロファイルされていない親でも、子から伝播してくる時間を保有
することになる。しかしこれらのルーチンは、呼び出しグラフの中で (どこか
ら呼び出されたのでもなく) 勝手に起動するように見えるので、その時間はそ
れ以上どこへも伝播しない。同様に、シグナルをキャッチしたルーチンは、プ
ロファイルされていても勝手に起動するように見えてしまう (理由はもう少し
複雑だが)。シグナルをキャッチしたルーチンの子がプロファイルされてい
ればその時間を正しく伝播させることができるが、親ルーチンがプロファ
イルルーチンの途中でシグナルがキャッチされた場合には全ての情報は失われる。
.PP
.\"O The profiled program must call
.\"O .BR exit ( 2 )
.\"O or return normally for the profiling information to be saved
.\"O in the `gmon.out' file.
プロファイルされるプログラムは
.BR exit ( 2 )
をコールして終了するか、 main ルーチンからの return で終了しなければな
らない。さもないと終了時にプロファイル情報が `gmon.out' ファイルにセー
ブされない。
