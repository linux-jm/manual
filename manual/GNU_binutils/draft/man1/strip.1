.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man v6.0.2 (Pod::Simple 3.45)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Required to disable full justification in groff 1.23.0.
.if n .ds AD l
.\" ========================================================================
.\"
.IX Title "STRIP 1"
.TH STRIP 1 2025-09-08 binutils-2.45.50 "GNU Development Tools"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
strip \- オブジェクトファイルからシンボルやその他のデータを削除
.SH SYNOPSIS
.IX Header "SYNOPSIS"
strip [\fB\-F\fR \fIbfdname\fR |\fB\-\-target=\fR\fIbfdname\fR]
      [\fB\-I\fR \fIbfdname\fR |\fB\-\-input\-target=\fR\fIbfdname\fR]
      [\fB\-O\fR \fIbfdname\fR |\fB\-\-output\-target=\fR\fIbfdname\fR]
      [\fB\-s\fR|\fB\-\-strip\-all\fR]
      [\fB\-S\fR|\fB\-g\fR|\fB\-d\fR|\fB\-\-strip\-debug\fR]
      [\fB\-\-strip\-dwo\fR]
      [\fB\-K\fR \fIsymbolname\fR|\fB\-\-keep\-symbol=\fR\fIsymbolname\fR]
      [\fB\-M\fR|\fB\-\-merge\-notes\fR][\fB\-\-no\-merge\-notes\fR]
      [\fB\-N\fR \fIsymbolname\fR |\fB\-\-strip\-symbol=\fR\fIsymbolname\fR]
      [\fB\-w\fR|\fB\-\-wildcard\fR]
      [\fB\-x\fR|\fB\-\-discard\-all\fR] [\fB\-X\fR |\fB\-\-discard\-locals\fR]
      [\fB\-R\fR \fIsectionname\fR |\fB\-\-remove\-section=\fR\fIsectionname\fR]
      [\fB\-\-keep\-section=\fR\fIsectionpattern\fR]
      [\fB\-\-remove\-relocations=\fR\fIsectionpattern\fR]
      [\fB\-\-strip\-section\-headers\fR]
      [\fB\-o\fR \fIfile\fR] [\fB\-p\fR|\fB\-\-preserve\-dates\fR]
      [\fB\-D\fR|\fB\-\-enable\-deterministic\-archives\fR]
      [\fB\-U\fR|\fB\-\-disable\-deterministic\-archives\fR]
      [\fB\-\-keep\-section\-symbols\fR]
      [\fB\-\-keep\-file\-symbols\fR]
      [\fB\-\-only\-keep\-debug\fR]
      [\fB\-\-plugin\fR \fIname\fR]
      [\fB\-v\fR |\fB\-\-verbose\fR] [\fB\-V\fR|\fB\-\-version\fR]
      [\fB\-\-help\fR] [\fB\-\-info\fR]
      \fIobjfile\fR...
.SH DESCRIPTION
.IX Header "DESCRIPTION"
GNU\fBstrip\fR は、オブジェクトファイル \fIobjfile\fR からすべてのシンボルを削除します。オブジェクトファイルのリストには、アーカイブも使えます。
少なくとも 1つのオブジェクトファイルを指定する必要があります。
.PP
\&\fBstrip\fR は、引数で指定されたファイルを変更します。変更されたコピーを別の名前で書き込むのではありません。
.SH OPTIONS
.IX Header "OPTIONS"
.IP "\fB\-F\fR \fIbfdname\fR" 4
.IX Item "-F bfdname"
.PD 0
.IP \fB\-\-target=\fR\fIbfdname\fR 4
.IX Item "--target=bfdname"
.PD
元の \fIobjfile\fR をオブジェクトコード形式 \fIbfdname\fR のファイルとして扱い、同じ形式に書き直します。
Xrefなので削る。
.IP \fB\-\-help\fR 4
.IX Item "--help"
\&\fBstrip\fR のオプションの概要を表示して終了します。
.IP \fB\-\-info\fR 4
.IX Item "--info"
使用可能なすべてのアーキテクチャとオブジェクトフォーマットを示すリストを表示します。
.IP "\fB\-I\fR \fIbfdname\fR" 4
.IX Item "-I bfdname"
.PD 0
.IP \fB\-\-input\-target=\fR\fIbfdname\fR 4
.IX Item "--input-target=bfdname"
.PD
元の \fIobjfile\fR をオブジェクトコード形式 \fIbfdname\fR のファイルとして扱います。
Xrefなので削る。
.IP "\fB\-O\fR \fIbfdname\fR" 4
.IX Item "-O bfdname"
.PD 0
.IP \fB\-\-output\-target=\fR\fIbfdname\fR 4
.IX Item "--output-target=bfdname"
.PD
\&\fIobjfile\fR を出力形式 \fIbfdname\fR のファイルに置き換えます。
Xrefなので削る。
.IP "\fB\-R\fR \fIsectionname\fR" 4
.IX Item "-R sectionname"
.PD 0
.IP \fB\-\-remove\-section=\fR\fIsectionname\fR 4
.IX Item "--remove-section=sectionname"
.PD
\&\fIsectionname\fR という名前のセクションを、本来ならば削除されるセクションに加えて、出力ファイルから削除します。このオプションは、複数回指定できます。このオプションを不適切に使用すると、出力ファイルが使用できなくなる可能性があることに注意してください。ワイルドカード文字 \fB*\fR は、\fIsectionname\fR の最後に指定できます。その場合、 \fIsectionname\fR で始まるセクションはすべて削除されます。
.Sp
\&\fIsectionpattern\fR の最初の文字が感嘆符 (!) の場合、同じコマンドラインで以前に\fB\-\-remove\-section\fR を使用して削除されたとしても、一致するセクションは削除されません。たとえば以下のようなものです:\`
.Sp
.Vb 1
\&          \-\-remove\-section=.text.* \-\-remove\-section=!.text.foo
.Ve
.Sp
パターン \*(Aq.text.*\*(Aq に一致するすべてのセクションが削除されますが、セクション \*(Aq.text.foo\*(Aq は削除されません。
.IP \fB\-\-keep\-section=\fR\fIsectionpattern\fR 4
.IX Item "--keep-section=sectionpattern"
出力ファイルからセクションを削除する場合は、\fIsectionpattern\fR と一致するセクションを保持します。
.IP \fB\-\-remove\-relocations=\fR\fIsectionpattern\fR 4
.IX Item "--remove-relocations=sectionpattern"
\&\fIsectionpattern\fR に一致するセクションの出力ファイルから再配置情報を削除します。このオプションは、複数回指定できます。このオプションを不適切に使用すると、出力ファイルが使用できなくなる可能性があることに注意してください。\fIsectionpattern\fR では、ワイルドカード文字を使用できます。
たとえば以下のようなものです:\`
.Sp
.Vb 1
\&          \-\-remove\-relocations=.text.*
.Ve
.Sp
パターン 「.text.* 」に一致するすべてのセクションの再配置情報を削除します。
.Sp
\&\fIsectionpattern\fR の最初の文字が感嘆符(!)の場合、同じコマンドラインで以前に \fB\-\-remove\-relocations\fR を使用したときに再配置が削除されたとしても、一致するセクションの再配置は削除されません。
たとえば以下のようなものです:\`
.Sp
.Vb 1
\&          \-\-remove\-relocations=.text.* \-\-remove\-relocations=!.text.foo
.Ve
.Sp
パターン \*(Aq.text.*\*(Aq に一致するセクションの再配置はすべて削除されますが、セクション \*(Aq.text.foo\*(Aq の再配置は削除されません。
.IP \fB\-\-strip\-section\-headers\fR 4
.IX Item "--strip-section-headers"
セクションヘッダを削除します。このオプションは ELF ファイルに固有です。\fB\-\-strip\-all\fR と \fB\-\-merge\-notes\fR を意味します。
.IP \fB\-s\fR 4
.IX Item "-s"
.PD 0
.IP \fB\-\-strip\-all\fR 4
.IX Item "--strip-all"
.PD
すべてのシンボルを削除します。
.IP \fB\-g\fR 4
.IX Item "-g"
.PD 0
.IP \fB\-S\fR 4
.IX Item "-S"
.IP \fB\-d\fR 4
.IX Item "-d"
.IP \fB\-\-strip\-debug\fR 4
.IX Item "--strip-debug"
.PD
デバッグシンボルのみ削除します。
.IP \fB\-\-strip\-dwo\fR 4
.IX Item "--strip-dwo"
すべてのDWARF.dwo セクションの内容を削除し、残りのデバッグセクションとすべてのシンボルはそのままにします。
詳細については、 \fBobjcopy\fR セクションのこのオプションの説明を参照してください。
.IP \fB\-\-strip\-unneeded\fR 4
.IX Item "--strip-unneeded"
\&\fB\-\-strip\-debug\fR によって除去されたセクションとデバッグシンボルに加えて、再配置処理に不要なすべてのシンボルを削除します。
.IP "\fB\-K\fR \fIsymbolname\fR" 4
.IX Item "-K symbolname"
.PD 0
.IP \fB\-\-keep\-symbol=\fR\fIsymbolname\fR 4
.IX Item "--keep-symbol=symbolname"
.PD
シンボルを除去するときは、通常除去される場合でも、シンボル \fIsymbolname\fR をそのままにします。このオプションは、複数回指定できます。
.IP \fB\-M\fR 4
.IX Item "-M"
.PD 0
.IP \fB\-\-merge\-notes\fR 4
.IX Item "--merge-notes"
.IP \fB\-\-no\-merge\-notes\fR 4
.IX Item "--no-merge-notes"
.PD
EL Fファイルでは、重複する注記を削除して SHT_NOT Eタイプのセクションのサイズを小さくします (または小さくしません)。デフォルトでは、デバッグまたは DWO 情報を除去しない限り、この削減が試行されます。
.IP "\fB\-N\fR \fIsymbolname\fR" 4
.IX Item "-N symbolname"
.PD 0
.IP \fB\-\-strip\-symbol=\fR\fIsymbolname\fR 4
.IX Item "--strip-symbol=symbolname"
.PD
ソースファイルから symbol\fIsymbolname\fR を削除します。このオプションは複数回指定することができ、 \fB\-K\fR 以外のストリップオプションと組み合わせることもできます。
.IP "\fB\-o\fR \fIfile\fR" 4
.IX Item "-o file"
既存のファイルを置き換えるのではなく、ストリップされた出力を \fIfile\fR に書き込みます。この引数を使用する場合、指定できる \fIobjfile\fR 引数は1つだけです。
.IP \fB\-p\fR 4
.IX Item "-p"
.PD 0
.IP \fB\-\-preserve\-dates\fR 4
.IX Item "--preserve-dates"
.PD
ファイルのアクセス日と変更日を保持します。
.IP \fB\-D\fR 4
.IX Item "-D"
.PD 0
.IP \fB\-\-enable\-deterministic\-archives\fR 4
.IX Item "--enable-deterministic-archives"
.PD
\&\fIdeterministic\fR モードで動作します。アーカイブメンバーをコピーしてアーカイブインデックスを書き込む場合は、UID、GID、タイムスタンプにゼロを使用し、すべてのファイルに対して一貫したファイルモードを使用します。
.Sp
\&\fIbinutils\fR が \fB\-\-enable\-deterministic\-archives\fR と設定されている場合、このモードはデフォルトで有効になります。
以下の \fB\-U\fR オプションで無効にできます。
.IP \fB\-U\fR 4
.IX Item "-U"
.PD 0
.IP \fB\-\-disable\-deterministic\-archives\fR 4
.IX Item "--disable-deterministic-archives"
.PD
\&\fInot\fR を \fIdeterministic\fR モードで動作させます。これは、上記の \fB\-D\fR オプションの逆です。アーカイブメンバーをコピーしてアーカイブインデックスを書き込む場合は、実際の UID、GID、タイムスタンプ、およびファイルモードの値を使用します。
.Sp
\&\fIbinutils\fR が \fB\-\-enable\-deterministic\-archives\fR で設定されていない限り、これがデフォルトです。
.IP \fB\-w\fR 4
.IX Item "-w"
.PD 0
.IP \fB\-\-wildcard\fR 4
.IX Item "--wildcard"
.PD
他のコマンドラインオプションで使用される \fIsymbolname\fRで正規表現を許可します。疑問符 (?) 、アスタリスク (*) 、バックスラッシュ (\e) 、および角カッコ ([]) の演算子は、シンボル名のどこにでも使用できます。シンボル名の最初の文字が感嘆符 (!) の場合は、そのシンボルの真偽値が逆になります。
たとえば以下のようなものです:\`
.Sp
.Vb 1
\&          \-w \-K !foo \-K fo*
.Ve
.Sp
これは strip に「fo」という文字で始まるシンボルだけを保持し、「foo」というシンボルを破棄させます。
.IP \fB\-x\fR 4
.IX Item "-x"
.PD 0
.IP \fB\-\-discard\-all\fR 4
.IX Item "--discard-all"
.PD
非グローバルなシンボルを削除します。
.IP \fB\-X\fR 4
.IX Item "-X"
.PD 0
.IP \fB\-\-discard\-locals\fR 4
.IX Item "--discard-locals"
.PD
コンパイラが生成したローカルシンボルを削除します。
  (通常 "L" または "." ではじまるシンボルです) 。
.IP \fB\-\-keep\-section\-symbols\fR 4
.IX Item "--keep-section-symbols"
\&\fB\-\-strip\-debug\fR や \fB\-\-strip\-unneeded\fR などを使用してファイルをストリップする場合、通常はストリップされるセクション名を指定する記号が保持されます。
.IP \fB\-\-keep\-file\-symbols\fR 4
.IX Item "--keep-file-symbols"
\&\fB\-\-strip\-debug\fR や \fB\-\-strip\-unneeded\fR などを使用してファイルをストリップする場合、ソースファイル名を指定する記号を保持します。これらの記号を使用しない場合はストリップされます。
.IP \fB\-\-only\-keep\-debug\fR 4
.IX Item "--only-keep-debug"
ファイルをストリップし、\fB\-\-strip\-debug\fR ではストリップされないセクションの内容を空にし、デバッグセクションをそのままにします。ELF ファイルでは、すべての注記セクションが出力にも保持されます。
.Sp
注意:除去されたセクションのセクションヘッダーはサイズも含めて保持されますが、セクションの内容は破棄されます。
実行可能ファイルが別のアドレス空間に再配置された場合でも、他のツールが debuginfo ファイルと実際の実行可能ファイルを照合できるように、セクションヘッダーは保持されます。
.Sp
このオプションを \fB\-\-add\-gnu\-debuglink\fR と組み合わせて使用して、 2つの部分からなる実行可能ファイルを作成することを目的としています。1つはストリップされたバイナリで、 RAM やディストリビューションで占有するスペースが少なくなります。もう 1つはデバッグ機能が必要な場合にのみ必要となるデバッグ情報ファイルです。これらのファイルを作成する推奨手順は、次のとおりです:
.RS 4
.ie n .IP "1.<実行可能ファイルを通常どおりリンクします。""foo"" と呼ばれていると仮定すると、 >" 4
.el .IP "1.<実行可能ファイルを通常どおりリンクします。\f(CWfoo\fR と呼ばれていると仮定すると、 >" 4
.IX Item "1.<実行可能ファイルを通常どおりリンクします。foo と呼ばれていると仮定すると、 >"
.PD 0
.ie n .IP "1.<""objcopy\-\-only\-keep\-debug foo foo.dbg"" を実行して、デバッグ情報を含むファイルを作成します。>" 4
.el .IP "1.<\f(CWobjcopy\-\-only\-keep\-debug foo foo.dbg\fR を実行して、デバッグ情報を含むファイルを作成します。>" 4
.IX Item "1.<objcopy--only-keep-debug foo foo.dbg を実行して、デバッグ情報を含むファイルを作成します。>"
.ie n .IP "1.<""objcopy\-\-strip\-debug foo"" を実行して、ストリップされた実行可能ファイルを作成します。>" 4
.el .IP "1.<\f(CWobjcopy\-\-strip\-debug foo\fR を実行して、ストリップされた実行可能ファイルを作成します。>" 4
.IX Item "1.<objcopy--strip-debug foo を実行して、ストリップされた実行可能ファイルを作成します。>"
.ie n .IP "1.<""objcopy\-\-add\-gnu\-debuglink=foo.dbg foo"" を実行して、デバッグ情報へのリンクを、ストリップされた実行可能ファイルに追加します。>" 4
.el .IP "1.<\f(CWobjcopy\-\-add\-gnu\-debuglink=foo.dbg foo\fR を実行して、デバッグ情報へのリンクを、ストリップされた実行可能ファイルに追加します。>" 4
.IX Item "1.<objcopy--add-gnu-debuglink=foo.dbg foo を実行して、デバッグ情報へのリンクを、ストリップされた実行可能ファイルに追加します。>"
.PD
.RE
.RS 4
.Sp
注意\-\-\- デバッグ情報ファイルの拡張子としての \f(CW\*(C`.dbg\*(C'\fR の選択は任意です。また、 \f(CW\*(C`\-\-only\-keep\-debug\*(C'\fR ステップは任意です。代わりに次のようにすることもできます:
.IP 1.<実行可能ファイルを通常どおりリンクします。> 4
.IX Item "1.<実行可能ファイルを通常どおりリンクします。>"
.PD 0
.ie n .IP "1.<Copy ""foo"" to ""foo.full"">" 4
.el .IP "1.<Copy \f(CWfoo\fR to \f(CWfoo.full\fR>" 4
.IX Item "1.<Copy foo to foo.full>"
.ie n .IP "1.<Run ""strip \-\-strip\-debug foo"">" 4
.el .IP "1.<Run \f(CWstrip \-\-strip\-debug foo\fR>" 4
.IX Item "1.<Run strip --strip-debug foo>"
.ie n .IP "1.<Run ""objcopy \-\-add\-gnu\-debuglink=foo.full foo"">" 4
.el .IP "1.<Run \f(CWobjcopy \-\-add\-gnu\-debuglink=foo.full foo\fR>" 4
.IX Item "1.<Run objcopy --add-gnu-debuglink=foo.full foo>"
.PD
.RE
.RS 4
.Sp
つまり、 \fB\-\-add\-gnu\-debuglink\fR によってポイントされるファイルが完全な実行形式になります。\fB\-\-only\-keep\-debug\fR スイッチで作成されたファイルである必要はありません。
.Sp
注意\-\-\- このスイッチは、完全にリンクされたファイルでの使用のみを目的としています。デバッグ情報が不完全な可能性があるオブジェクトファイルに対してこれを使用しても意味がありません。加えて、gnu_debuglink 機能は現在、デバッグ情報を含む 1つのファイル名の存在のみをサポートしており、オブジェクトファイルごとに複数のファイル名をサポートしていません。
.RE
.IP "\fB\-\-plugin\fR \fIname\fR" 4
.IX Item "--plugin name"
\&\fIname\fR というプラグインをロードして、追加のターゲット・タイプのサポートを追加します。このオプションは、プラグインサポートを有効にしてツールチェーンを構築した場合にのみ使用できます。
.Sp
\&\fB\-\-plugin\fR が指定されていないが、プラグインサポートが有効になっている場合、\fBstrip\fR は \fI${libdir}/bfd\-plugins\fR 内のファイルをアルファベット順に繰り返し、問題のオブジェクトを要求する最初のプラグインが使用されます。
.Sp
このプラグイン検索ディレクトリは、\fBld\fR の \fB\-plugin\fR オプションで使用されるもの\fIではない\fRことに注意してください。\fBstrip\fRにリンカ・プラグインを使わせるには、 \fI${libdir}/bfd\-plugins\fR のディレクトリにコピーする必要があります。GCC ベースのコンパイルでは、リンカープラグインは \fIliblto_plugin.so.0.0.0\fR と呼ばれます。Clang ベースのコンパイルでは、\fILLVMgold.so\fR と呼ばれます。GCC プラグインは常に以前のバージョンと下位互換性があるため、最新のものをコピーするだけで十分です。
.IP \fB\-V\fR 4
.IX Item "-V"
.PD 0
.IP \fB\-\-version\fR 4
.IX Item "--version"
.PD
\&\fBstrip\fR のバージョン番号を表示します。
.IP \fB\-v\fR 4
.IX Item "-v"
.PD 0
.IP \fB\-\-verbose\fR 4
.IX Item "--verbose"
.PD
詳細出力:変更されたすべてのオブジェクトファイルをリストします。アーカイブの場合、 \fBstrip \-v\fR はアーカイブのすべてのメンバーをリストします。
.IP \fB@\fR\fIfile\fR 4
.IX Item "@file"
\&\fIfile\fRからコマンドラインオプションを読み込みます。読み込まれたオプショ
ンは、元の@\fIfile\fR オプションの代わりに挿入されます。 \fIfile\fRが存
在しない場合、または読み込めない場合、オプションは文字通りに扱われ、削除
されません。
.Sp
\&\fIfile\fR 中のオプションは空白で区切られます。空白文字は、オプション全
体を一重引用符または二重引用符で囲むことによってオプションに含めることが
できます。任意の文字(バックスラッシュを含む)は、含まれる文字の前にバック
スラッシュを付けることによって含めることができます。 \fIfile\fR 自体に追
加の@\fIfile\fR オプションを含めることができます。このようなオプション
は再帰的に処理されます。
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fIbinutils\fR のInfo エントリ。
.SH COPYRIGHT
.IX Header "COPYRIGHT"
Copyright (c) 1991\-2025 Free Software Foundation, Inc.
.PP
Permission is granted to copy, distribute and/or modify this document
under the terms of the GNU Free Documentation License, Version 1.3
or any later version published by the Free Software Foundation;
with no Invariant Sections, with no Front\-Cover Texts, and with no
Back\-Cover Texts.  A copy of the license is included in the
section entitled "GNU Free Documentation License".
