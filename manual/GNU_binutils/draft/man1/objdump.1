.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man v6.0.2 (Pod::Simple 3.45)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Required to disable full justification in groff 1.23.0.
.if n .ds AD l
.\" ========================================================================
.\"
.IX Title "OBJDUMP 1"
.TH OBJDUMP 1 2025-09-17 binutils-2.45.50 "GNU Development Tools"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.mso ja.tmac
.hla ja
.SH 名前
objdump \- オブジェクトファイルの情報を表示
.SH 書式
.IX Header "書式"
objdump [\fB\-a\fR|\fB\-\-archive\-headers\fR]
        [\fB\-b\fR \fIbfdname\fR|\fB\-\-target=\fR\fIbfdname\fR]
        [\fB\-C\fR|\fB\-\-demangle\fR[=\fIstyle\fR] ]
        [\fB\-d\fR|\fB\-\-disassemble\fR[=\fIsymbol\fR]]
        [\fB\-D\fR|\fB\-\-disassemble\-all\fR]
        [\fB\-z\fR|\fB\-\-disassemble\-zeroes\fR]
        [\fB\-EB\fR|\fB\-EL\fR|\fB\-\-endian=\fR{big | little }]
        [\fB\-f\fR|\fB\-\-file\-headers\fR]
        [\fB\-F\fR|\fB\-\-file\-offsets\fR]
        [\fB\-\-file\-start\-context\fR]
        [\fB\-g\fR|\fB\-\-debugging\fR]
        [\fB\-e\fR|\fB\-\-debugging\-tags\fR]
        [\fB\-h\fR|\fB\-\-section\-headers\fR|\fB\-\-headers\fR]
        [\fB\-i\fR|\fB\-\-info\fR]
        [\fB\-j\fR \fIsection\fR|\fB\-\-section=\fR\fIsection\fR]
        [\fB\-l\fR|\fB\-\-line\-numbers\fR]
        [\fB\-S\fR|\fB\-\-source\fR]
        [\fB\-\-source\-comment\fR[=\fItext\fR]]
        [\fB\-m\fR \fImachine\fR|\fB\-\-architecture=\fR\fImachine\fR]
        [\fB\-M\fR \fIoptions\fR|\fB\-\-disassembler\-options=\fR\fIoptions\fR]
        [\fB\-p\fR|\fB\-\-private\-headers\fR]
        [\fB\-P\fR \fIoptions\fR|\fB\-\-private=\fR\fIoptions\fR]
        [\fB\-r\fR|\fB\-\-reloc\fR]
        [\fB\-R\fR|\fB\-\-dynamic\-reloc\fR]
        [\fB\-s\fR|\fB\-\-full\-contents\fR]
        [\fB\-Z\fR|\fB\-\-decompress\fR]
        [\fB\-W[lLiaprmfFsoORtUuTgAck]\fR|
         \fB\-\-dwarf\fR[=rawline,=decodedline,=info,=abbrev,=pubnames,=aranges,=macro,=frames,=frames\-interp,=str,=str\-offsets,=loc,=Ranges,=pubtypes,=trace_info,=trace_abbrev,=trace_aranges,=gdb_index,=addr,=cu_index,=links]]
        [\fB\-WK\fR|\fB\-\-dwarf=follow\-links\fR]
        [\fB\-WN\fR|\fB\-\-dwarf=no\-follow\-links\fR]
        [\fB\-wD\fR|\fB\-\-dwarf=use\-debuginfod\fR]
        [\fB\-wE\fR|\fB\-\-dwarf=do\-not\-use\-debuginfod\fR]
        [\fB\-L\fR|\fB\-\-process\-links\fR]
        [\fB\-\-ctf=\fR\fIsection\fR]
        [\fB\-\-sframe=\fR\fIsection\fR]
        [\fB\-G\fR|\fB\-\-stabs\fR]
        [\fB\-t\fR|\fB\-\-syms\fR]
        [\fB\-T\fR|\fB\-\-dynamic\-syms\fR]
        [\fB\-x\fR|\fB\-\-all\-headers\fR]
        [\fB\-w\fR|\fB\-\-wide\fR]
        [\fB\-\-start\-address=\fR\fIaddress\fR]
        [\fB\-\-stop\-address=\fR\fIaddress\fR]
        [\fB\-\-no\-addresses\fR]
        [\fB\-\-prefix\-addresses\fR]
        [\fB\-\-[no\-]show\-raw\-insn\fR]
        [\fB\-\-adjust\-vma=\fR\fIoffset\fR]
        [\fB\-\-show\-all\-symbols\fR]
        [\fB\-\-dwarf\-depth=\fR\fIn\fR]
        [\fB\-\-dwarf\-start=\fR\fIn\fR]
        [\fB\-\-ctf\-parent=\fR\fIsection\fR]
        [\fB\-\-no\-recurse\-limit\fR|\fB\-\-recurse\-limit\fR]
        [\fB\-\-special\-syms\fR]
        [\fB\-\-prefix=\fR\fIprefix\fR]
        [\fB\-\-prefix\-strip=\fR\fIlevel\fR]
        [\fB\-\-insn\-width=\fR\fIwidth\fR]
        [\fB\-\-visualize\-jumps[=color|=extended\-color|=off]\fR
        [\fB\-\-disassembler\-color=[off|terminal|on|extended]\fR
        [\fB\-U\fR \fImethod\fR] [\fB\-\-unicode=\fR\fImethod\fR]
        [\fB\-V\fR|\fB\-\-version\fR]
        [\fB\-H\fR|\fB\-\-help\fR]
        \fIobjfile\fR...
.SH 説明
.IX Header "説明"
\&\fBobjdump\fR は指定されたひとつ以上のオブジェクトファイルについて、その情報を表示します。
オプションは、表示する特定の情報を制御します。この情報は、プログラムをコンパイルして動作させたいだけのプログラマーとは対照的に、コンパイルツールに取り組んでいるプログラマーにとって主に役立ちます。
.PP
\&\fIobjfile\fR...は、検査されるオブジェクトファイルです。アーカイブを指定すると、 \fBobjdump\fR は各メンバー・オブジェクト・ファイルに関する情報を表示します。
.SH オプション
.IX Header "オプション"
ここで選択肢として示されているオプションの、長い形式と短い形式は同等です。少なくとも \fB\-a,\-d,\-D,\-e,\-f,\-g,\-G,\-h,\-H,\-p,\-P,\-r,\-R,\-s,\-S,\-t,\-T,\-V,\-x\fR のどれかから 1つのオプションを指定する必要があります。
.IP \fB\-a\fR 4
.IX Item "-a"
.PD 0
.IP \fB\-\-archive\-header\fR 4
.IX Item "--archive-header"
.PD
\&\fIobjfile\fR ファイルのいずれかがアーカイブの場合は、アーカイブ・ヘッダー情報を表示します (\fBls\-l\fRのような形式)。\fBar tv\fR でリストできる情報の他に、\fBobjdump\-a\fR は各アーカイブ・メンバーのオブジェクト・ファイル・フォーマットを表示します。
.IP \fB\-\-adjust\-vma=\fR\fIoffset\fR 4
.IX Item "--adjust-vma=offset"
情報をダンプするときは、まずすべてのセクション・アドレスに \fIoffset\fR を追加します。これは、セクションアドレスがシンボルテーブルに対応していない場合に便利です。これは、 a.out などのセクションアドレスを表現できない形式を使用して特定のアドレスにセクションを配置する場合に発生する可能性があります。
.IP "\fB\-b\fR \fIbfdname\fR" 4
.IX Item "-b bfdname"
.PD 0
.IP \fB\-\-target=\fR\fIbfdname\fR 4
.IX Item "--target=bfdname"
.PD
オブジェクトファイルのオブジェクトコード形式が \fIbfdname\fR であることを指定します。\fIobjdump\fR は多くのフォーマットを自動的に認識するので、このオプションは必要ないかもしれません。
.Sp
たとえば、
.Sp
.Vb 1
\&        objdump \-b oasys \-m vax \-h fu.o
.Ve
.Sp
は、Oasys コンパイラによって生成された形式の VAX オブジェクトファイルとして明示的に識別される \fIfu.o\fR のセクションヘッダー (\fB\-h\fR) からの概要情報を表示します。\fB\-i\fR オプションを使用して、使用可能なフォーマットをリストできます。
Xrefなので削る
.IP \fB\-C\fR 4
.IX Item "-C"
.PD 0
.IP \fB\-\-demangle[=\fR\fIstyle\fR\fB]\fR 4
.IX Item "--demangle[=style]"
.PD
(\fIdemangle\fR)低レベルシンボル名をユーザレベルの名前にデコードします。
これにより、システムによって先頭に追加されたアンダースコアが削除されるだけでなく、C++ 関数名が読みやすくなります。コンパイラが異なれば、操作スタイルも異なります。オプションの demangling style 引数を使用すると、コンパイラに適した デコード(demangling) スタイルを選択できます。
.IP \fB\-\-recurse\-limit\fR 4
.IX Item "--recurse-limit"
.PD 0
.IP \fB\-\-no\-recurse\-limit\fR 4
.IX Item "--no-recurse-limit"
.IP \fB\-\-recursion\-limit\fR 4
.IX Item "--recursion-limit"
.IP \fB\-\-no\-recursion\-limit\fR 4
.IX Item "--no-recursion-limit"
.PD
文字列のデコード (demangling) 中に実行される反復の量に対する制限を有効または無効にします。名前をエンコード (mangling) する形式は無限レベルの再帰を許すので、デコード操作がホストマシンで利用可能なスタック空間の量を使い果たし、メモリ障害を引き起こすような文字列を作成する可能性があります。この制限では、再帰を 2048レベルまでのネストに制限することで、これが発生しないようにしています。
.Sp
デフォルトでは、この制限は有効になっていますが、本当に複雑な名前をデコード (demangle) するには無効にする必要がある場合があります。ただし、再帰制限が無効になっている場合は、スタックが枯渇する可能性があり、そのようなイベントに関するバグレポートは拒否されることに注意してください。
.IP \fB\-g\fR 4
.IX Item "-g"
.PD 0
.IP \fB\-\-debugging\fR 4
.IX Item "--debugging"
.PD
デバッグ情報を表示します。これは、ファイルに保存されている STABS デバッグ形式情報の解析をこころみ、C のような構文を使用して出力します。STABS デバッグが見つからない場合、このオプションは \fB\-W\fR オプションに戻り、ファイル内の DWARF 情報を出力します。
.IP \fB\-e\fR 4
.IX Item "-e"
.PD 0
.IP \fB\-\-debugging\-tags\fR 4
.IX Item "--debugging-tags"
.PD
\&\fB\-g\fR と似ていますが、情報は ctags ツールと互換性のある形式で生成されます。
.IP \fB\-d\fR 4
.IX Item "-d"
.PD 0
.IP \fB\-\-disassemble\fR 4
.IX Item "--disassemble"
.IP \fB\-\-disassemble=\fR\fIsymbol\fR 4
.IX Item "--disassemble=symbol"
.PD
入力ファイルからマシン命令のアセンブラニーモニックを表示します。このオプションは、命令が含まれているはずのセクションだけを逆アセンブルします。オプションの \fIsymbol\fR 引数が (場合によっては複数回) 指定された場合は、(すべての) \fIsymbol\fR で始まるアセンブラニーモニックが表示されます。\fIsymbol\fR が関数名の場合、逆アセンブルは関数の最後で停止します。それ以外の場合は、次のシンボルが出現した時点で停止します。\fIsymbol\fR に一致するものがない場合は、何も表示されません。
.Sp
\&\fB\-\-dwarf=follow\-links\fR オプションが有効になっている場合、リンクされたデバッグ情報ファイル内のシンボルテーブルが読み込まれ、逆アセンブル時に使用されることに注意してください。
.IP \fB\-D\fR 4
.IX Item "-D"
.PD 0
.IP \fB\-\-disassemble\-all\fR 4
.IX Item "--disassemble-all"
.PD
\&\fB\-d\fR と同様ですが、命令を含むことが期待されるセクションだけでなく、空でない non\-bss セクションの内容をすべて逆アセンブルします。
\&\fB\-j\fR を使用すると、特定のセクションを選択できます。
.Sp
このオプションは、コードセクション内の命令の逆アセンブルにも微妙な影響を与えます。オプション \fB\-d\fR が有効な場合、 objdump はコードセクションに存在するシンボルが命令間の境界で発生すると想定し、そのような境界を越えて逆アセンブルすることを拒否します。ただし、オプション \fB\-D\fR が有効な場合、この仮定は省略されます。これは、例えば、データがコードセクションに格納されている場合、\fB\-d\fR と \fB\-D\fR の出力が異なる可能性があることを意味します。
.Sp
ターゲットが ARM アーキテクチャである場合、このスイッチは、逆アセンブラに対して、コードセクションにあるデータの断片を命令であるかのようにデコードさせる効果もあります。
.Sp
\&\fB\-\-dwarf=follow\-links\fR オプションが有効になっている場合、リンクされたデバッグ情報ファイル内のシンボルテーブルが読み込まれ、逆アセンブル時に使用されることに注意してください。
.IP \fB\-\-no\-addresses\fR 4
.IX Item "--no-addresses"
逆アセンブル時に、各行毎にアドレスまたは、シンボルと再配置オフセットを出力しません。\fB\-\-no\-show\-raw\-insn\fRと組み合わせて使用すると、コンパイラの出力を比較する場合に便利です。
.IP \fB\-\-prefix\-addresses\fR 4
.IX Item "--prefix-addresses"
逆アセンブルするとき、各行ごとに完全なアドレスを表示します。これは古い逆アセンブル形式です。
.IP \fB\-EB\fR 4
.IX Item "-EB"
.PD 0
.IP \fB\-EL\fR 4
.IX Item "-EL"
.IP \fB\-\-endian={big|little}\fR 4
.IX Item "--endian={big|little}"
.PD
オブジェクトファイルのエンディアンを指定します。これは逆アセンブリにのみ影響します。これは、S レコードなどのエンディアン情報を記述していないファイル形式を逆アセンブルする場合に便利です。
.IP \fB\-f\fR 4
.IX Item "-f"
.PD 0
.IP \fB\-\-file\-headers\fR 4
.IX Item "--file-headers"
.PD
各\fIobjfile\fR ファイルのヘッダー全体のサマリー情報を表示します。
.IP \fB\-F\fR 4
.IX Item "-F"
.PD 0
.IP \fB\-\-file\-offsets\fR 4
.IX Item "--file-offsets"
.PD
セクションを逆アセンブルするときは、シンボルが表示されるたびに、ダンプしようとしているデータの領域のファイルオフセットも表示します。ゼロがスキップされている場合は、逆アセンブルが再開されたときに、スキップされたゼロの数と、逆アセンブルが再開される場所のファイルオフセットをユーザに通知します。セクションをダンプするときに、ダンプの開始位置からのファイルオフセットを表示します。
.IP \fB\-\-file\-start\-context\fR 4
.IX Item "--file-start-context"
まだ表示されていないファイルからインターリスト化されたソースコード/逆アセンブル (\fB\-S\fRを想定) を表示するときに、コンテキストをファイルの先頭まで拡張することを指定します。
.IP \fB\-h\fR 4
.IX Item "-h"
.PD 0
.IP \fB\-\-section\-headers\fR 4
.IX Item "--section-headers"
.IP \fB\-\-headers\fR 4
.IX Item "--headers"
.PD
オブジェクトファイルのセクションヘッダーから概要情報を表示します。
.Sp
ファイルセグメントは、たとえば \fBld\fR に対して \fB\-Ttext\fR、 \fB\-Tdata\fR、または \fB\-Tbss\fR のオプションを使用することによって、非標準のアドレスに再配置される場合があります。ただし、a.out などの一部のオブジェクトファイル形式には、ファイルセグメントの開始アドレスが格納されません。このような状況では、 \fBld\fR はセクションを正しく再配置しますが、\fBobjdump \-h\fR を使用してファイルセクションヘッダーをリストすると、正しいアドレスを表示できません。
代わりに、ターゲットに対して暗黙的な通常のアドレスが表示されます。
.Sp
場合によっては、セクションに READONLY 属性と NOREAD 属性の両方を設定できることに注意してください。このような場合、NOREAD アトリビュートが優先されますが、フラグビットの正確な設定が重要な場合があるため、 \fBobjdump\fR は両方を報告します。
.IP \fB\-H\fR 4
.IX Item "-H"
.PD 0
.IP \fB\-\-help\fR 4
.IX Item "--help"
.PD
オプションの概要を \fBobjdump\fR に出力して終了します。
.IP \fB\-i\fR 4
.IX Item "-i"
.PD 0
.IP \fB\-\-info\fR 4
.IX Item "--info"
.PD
\&\fB\-b\fR または \fB\-m\fR を使用して指定できるすべてのアーキテクチャとオブジェクトフォーマットを示すリストを表示します。
.IP "\fB\-j\fR \fIname\fR" 4
.IX Item "-j name"
.PD 0
.IP \fB\-\-section=\fR\fIname\fR 4
.IX Item "--section=name"
.PD
セクション \fIname\fR の情報を表示します。このオプションは、複数回指定できます。
.IP \fB\-L\fR 4
.IX Item "-L"
.PD 0
.IP \fB\-\-process\-links\fR 4
.IX Item "--process-links"
.PD
メインファイルにリンクされている個別のdebuginfoファイルにあるデバッグ以外のセクションの内容を表示します。このオプションは自動的に \fB\-WK\fR オプションを仮定し、他のコマンドラインオプションによって要求されたセクションのみが表示されます。
.IP \fB\-l\fR 4
.IX Item "-l"
.PD 0
.IP \fB\-\-line\-numbers\fR 4
.IX Item "--line-numbers"
.PD
表示されたオブジェクトコードまたは再配置に対応するファイル名とソース行番号を使用して、 (デバッグ情報を使用して) 表示にラベルを付けます。
\&\fB\-d\fR、 \fB\-D\fR、 \fB\-r\fR とともに使うときにのみ便利です。
.IP "\fB\-m\fR \fImachine\fR" 4
.IX Item "-m machine"
.PD 0
.IP \fB\-\-architecture=\fR\fImachine\fR 4
.IX Item "--architecture=machine"
.PD
オブジェクトファイルを逆アセンブルする際に使用するアーキテクチャを指定します。これは、S レコードなどのアーキテクチャ情報を記述していないオブジェクトファイルを逆アセンブルする場合に便利です。\fB\-i\fR オプションを使用して、使用可能なアーキテクチャを一覧表示できます。
.Sp
ほとんどのアーキテクチャでは、アーキテクチャ名とマシン名をコロンで区切って指定できます。たとえば、\fBfoo:bar\fR は、\fBfoo\fR アーキテクチャの \fBbar\fR マシンタイプを参照します。これは、objdump が複数のアーキテクチャをサポートするように設定されている場合に役立ちます。
.Sp
ターゲットが ARM アーキテクチャの場合、この切り替えには追加の効果があります。逆アセンブルは、 \fImachine\fR で指定されたアーキテクチャでサポートされている命令のみに制限されます。
入力ファイルにアーキテクチャ情報が含まれていないためにこのスイッチを使用する必要がありますが、すべての命令を逆アセンブルすることも望ましい場合は、\fB\-marm\fR を使用します。
.IP "\fB\-M\fR \fIoptions\fR" 4
.IX Item "-M options"
.PD 0
.IP \fB\-\-disassembler\-options=\fR\fIoptions\fR 4
.IX Item "--disassembler-options=options"
.PD
ターゲット固有の情報を逆アセンブラに渡します。いくつかのターゲットのみサポートしています。複数の逆アセンブラオプションを指定する必要がある場合は、複数の \fB\-M\fR オプションを使用するか、カンマ区切りのリストにまとめることができます。
.Sp
ARCでは、 \fBdsp\fR は DSP 命令の表示を制御し、 \fBspfp\fR は FPX 単精度 FP 命令の表示を選択し、\fBdpfp\fR は FPX 倍精度 FP 命令の表示を選択し、 \fBquarkse_em\fR は特殊な TakeNE\-EM 命令の表示を選択し、 \fBfpuda\fR は倍精度アシスト命令の表示を選択し、\fBfpus\fR は FPU 単精度 FP 命令の表示を選択し、 \fBfpud\fR はFPU 倍精度 FP 命令の表示を選択します。
さらに、\fBhex\fR を使用して、すべての即値を 16進数で出力することもできます。デフォルトでは、short immediate 値は 10進数で出力され、long immediate 値は 16進数で出力されます。
.Sp
\&\fBcpu=.\fR を使用すると、命令を逆アセンブルするときに特定の ISA を適用し、\fB\-m\fR の値や ELF ファイル内の値を上書きすることができます。
ARC EM または HS ISA を選択すると便利な場合があります。これらのアーキテクチャは同じであり、逆アセンブラはコードが EM 用か HS 用かを決定するためにプライベート ELF ヘッダーデータに依存しているためです。このオプションは複数回指定できます。しかし、最新の値のみが使用されます。有効な値は、アセンブラの \fB\-mcpu=.\fR オプションと同じです。
.Sp
ターゲットが ARM アーキテクチャの場合、このスイッチを使用して、逆アセンブラ時に使用するレジスタ名セットを選択できます。\fB\-M reg\-names\-std\fR (デフォルト) を指定すると、ARM の命令セットドキュメントで使用されているレジスタ名が選択されますが、レジスタ 13は「sp」、レジスタ 14は「lr」、レジスタ 15は「pc」と呼ばれます。\fB\-M reg\-names\-apcs\fR を指定すると、ARM Procedure Call Standard で使用される名前セットが選択されます。一方、 \fB\-M reg\-names\-raw\fR を指定すると、 \fBr\fR の後に登録番号が続くだけの名前セットが使用されます。
.Sp
また、 \fB\-M reg\-names\-atpcs\fR と \fB\-M reg\-names\-special\-atpcs\fR で使用可能な APCS レジスタ命名方式には、ARM/Thumb Procedure Call Standard 命名規則を使用する 2つのバリエーションがあります。(ノーマルレジスタ名または特殊レジスタ名)
.Sp
このオプションは、ARM アーキテクチャでも使用できます。スイッチ \fB\-\-disassembler\-options=force\-thumb\fR を使用して、逆アセンブラにすべての命令を Thumb 命令として解釈させることができます。これは、他のコンパイラで生成された thumb コードを逆アセンブルしようとする場合に便利です。
.Sp
AArch64 ターゲットの場合、このスイッチを使用して、 \fB\-M no\-aliases\fR オプションを使用して命令を最も一般的な命令として逆アセンブルするかどうか、または \fB\-M notes\fR を使用して命令ノートをコメントとして生成するかどうかを設定できます。
.Sp
x86 では、一部のオプションは \fB\-m\fR スイッチの機能と重複しますが、細かく制御できます。
.RS 4
.ie n .IP """x86\-64""" 4
.el .IP \f(CWx86\-64\fR 4
.IX Item "x86-64"
.PD 0
.ie n .IP """i386""" 4
.el .IP \f(CWi386\fR 4
.IX Item "i386"
.ie n .IP """i8086""" 4
.el .IP \f(CWi8086\fR 4
.IX Item "i8086"
.PD
特定のアーキテクチャの逆アセンブリを選択します。
.ie n .IP """intel""" 4
.el .IP \f(CWintel\fR 4
.IX Item "intel"
.PD 0
.ie n .IP """att""" 4
.el .IP \f(CWatt\fR 4
.IX Item "att"
.PD
intel 構文モードと AT&T 構文モードを選択します。
.ie n .IP """amd64""" 4
.el .IP \f(CWamd64\fR 4
.IX Item "amd64"
.PD 0
.ie n .IP """intel64""" 4
.el .IP \f(CWintel64\fR 4
.IX Item "intel64"
.PD
AMD64 ISAx とI ntel64 ISA から選択します。
.ie n .IP """intel\-mnemonic""" 4
.el .IP \f(CWintel\-mnemonic\fR 4
.IX Item "intel-mnemonic"
.PD 0
.ie n .IP """att\-mnemonic""" 4
.el .IP \f(CWatt\-mnemonic\fR 4
.IX Item "att-mnemonic"
.PD
インテルニーモニックモードと AT&T ニーモニックモードを選択します。
注意:\f(CW\*(C`intel\-mnemonic\*(C'\fR は \f(CW\*(C`intel\*(C'\fR を意味し、 \f(CW\*(C`att\-mnemonic\*(C'\fR は \f(CW\*(C`att\*(C'\fR を意味します。
.ie n .IP """addr64""" 4
.el .IP \f(CWaddr64\fR 4
.IX Item "addr64"
.PD 0
.ie n .IP """addr32""" 4
.el .IP \f(CWaddr32\fR 4
.IX Item "addr32"
.ie n .IP """addr16""" 4
.el .IP \f(CWaddr16\fR 4
.IX Item "addr16"
.ie n .IP """data32""" 4
.el .IP \f(CWdata32\fR 4
.IX Item "data32"
.ie n .IP """data16""" 4
.el .IP \f(CWdata16\fR 4
.IX Item "data16"
.PD
デフォルトのアドレスサイズとオペランドサイズを指定します。これらの 5つのオプションは、オプション文字列の後半に \f(CW\*(C`x86\-64\*(C'\fR、 \f(CW\*(C`i386\*(C'\fR 、または \f(CW\*(C`i8086\*(C'\fR が出現する場合に上書きされます。
.ie n .IP """suffix""" 4
.el .IP \f(CWsuffix\fR 4
.IX Item "suffix"
AT&T モードの場合、および Intel モードの限られた命令セットの場合、オペランドによってサフィックスが推測される場合でも、または特定の命令の場合は逆アセンブラモードのデフォルトでも、ニーモニックサフィックスを出力するように実行に指示します。
.RE
.RS 4
.Sp
PowerPCの場合、 \fB\-M\fR の引数 \fBraw\fR は、エイリアスではなくハードウェア命令を選択します。例えば、 \f(CW\*(C`clrlwi\*(C'\fRではなく \f(CW\*(C`rlwinm\*(C'\fR 、 \f(CW\*(C`li\*(C'\fRではなく \f(CW\*(C`addi\*(C'\fR が見えます。CPU を選択する \fBgas\fR の \fB\-m\fR 引数はすべてサポートされています。それらは:
\&\fB403\fR, \fB405\fR, \fB440\fR, \fB464\fR, \fB476\fR,
\&\fB601\fR, \fB603\fR, \fB604\fR, \fB620\fR, \fB7400\fR,
\&\fB7410\fR, \fB7450\fR, \fB7455\fR, \fB750cl\fR,
\&\fB821\fR, \fB850\fR, \fB860\fR, \fBa2\fR, \fBbooke\fR,
\&\fBbooke32\fR, \fBcell\fR, \fBcom\fR, \fBe200z2\fR, \fBe200z4\fR,
\&\fBe300\fR, \fBe500\fR, \fBe500mc\fR, \fBe500mc64\fR,
\&\fBe500x2\fR, \fBe5500\fR, \fBe6500\fR, \fBefs\fR,
\&\fBpower4\fR, \fBpower5\fR, \fBpower6\fR, \fBpower7\fR,
\&\fBpower8\fR, \fBpower9\fR, \fBpower10\fR, \fBpower11\fR,
\&\fBppc\fR, \fBppc32\fR, \fBppc64\fR, \fBppc64bridge\fR,
\&\fBppcps\fR, \fBpwr\fR, \fBpwr2\fR, \fBpwr4\fR, \fBpwr5\fR,
\&\fBpwr5x\fR, \fBpwr6\fR, \fBpwr7\fR, \fBpwr8\fR, \fBpwr9\fR,
\&\fBpwr10\fR, \fBpwr11\fR, \fBpwrx\fR, \fBtitan\fR, \fBvle\fR,
と \fBfuture\fR です。
\&\fB32\fR および \fB64\fR は、デフォルトまたは以前のプロセッサ選択を変更し、 64ビット命令をそれぞれ無効または有効にします。さらに、 \fBaltivec\fR、 \fBany\fR、\fBlsp\fR、 \fBhtm\fR、 \fBvsx\fR、\fBspe\fR、 \fBspe2\fRでは、以前の \fIあるいはそれ以降\fR のプロセッサ選択に機能が追加されています。
\&\fBany\fR は binutils が知っている opcode を逆アセンブルしますが、opcode が 2つの異なる意味を持っていたり、異なる引数を持っていたりすると、期待したような逆アセンブルは行われません。
CPU を選択せずに逆アセンブルした場合、BFD によってオブジェクトファイルヘッダーから収集された情報からデフォルトが選択されますが、結果は期待どおりにならない可能性があります。
.Sp
RISC\-V では、次のオプションがサポートされています:
.ie n .IP """max""" 4
.el .IP \f(CWmax\fR 4
.IX Item "max"
アーキテクチャ文字列をチェックしない逆アセンブル。これはベストエフォートモードであるため、重複する ISA 拡張の場合、最初の一致(特定のコンテキストでは正しくない可能性がある)が命令のデコードに使用されます。これは、ELF ファイルが ISA 文字列を公開せず、自動 ISA サブセット推論を防止し、デフォルトのフォールバック ISA 文字列 (\f(CW\*(C`rv64gc\*(C'\fR) がバイナリ内のすべての命令をカバーしない場合に便利です。
.ie n .IP """numeric""" 4
.el .IP \f(CWnumeric\fR 4
.IX Item "numeric"
ABI 名ではなく、数値のレジスタ名を出力します(例:\f(CW\*(C`sp\*(C'\fR の代わりに \f(CW\*(C`x2\*(C'\fR を出力します)。
.ie n .IP """no\-aliases""" 4
.el .IP \f(CWno\-aliases\fR 4
.IX Item "no-aliases"
標準的な命令にのみ逆アセンブルします。例えば、圧縮された命令はそのように表現されます (\f(CW\*(C`addi sp,sp,\-128\*(C'\fR は \f(CW\*(C`c.addi16sp sp,\-128\*(C'\fR となります)。
.ie n .IP """priv\-spec=\fISPEC\fR""" 4
.el .IP \f(CWpriv\-spec=\fR\f(CISPEC\fR\f(CW\fR 4
.IX Item "priv-spec=SPEC"
選択した特権仕様バージョン (例: \f(CW1.10\fR, \f(CW1.11\fR, \f(CW1.12\fR, \f(CW1.13\fR) に従ってレポートを表示します。
.RE
.RS 4
.Sp
MIPS の場合、このオプションは逆アセンブルされた命令内の命令ニーモニック名とレジスタ名の表示を制御します。次の複数の選択肢をカンマ区切りの文字列として指定できます。無効なオプションは無視されます:
.ie n .IP """no\-aliases""" 4
.el .IP \f(CWno\-aliases\fR 4
.IX Item "no-aliases"
擬似命令ニーモニックの代わりに「生の」命令ニーモニックを出力します。つまり、 「move」の代わりに 「daddu」または 「or」、 「nop」の代わりに 「sll」などを出力します。
.ie n .IP """msa""" 4
.el .IP \f(CWmsa\fR 4
.IX Item "msa"
MSA 命令を逆アセンブルします。
.ie n .IP """virt""" 4
.el .IP \f(CWvirt\fR 4
.IX Item "virt"
仮想化 ASE 命令を逆アセンブルします。
.ie n .IP """xpa""" 4
.el .IP \f(CWxpa\fR 4
.IX Item "xpa"
eXtended Physical Address (XPA) ASE命令を逆アセンブルします。
.ie n .IP """gpr\-names=\fIABI\fR""" 4
.el .IP \f(CWgpr\-names=\fR\f(CIABI\fR\f(CW\fR 4
.IX Item "gpr-names=ABI"
指定された ABI に適切な GPR(汎用レジスタ) 名を出力します。デフォルトでは、逆アセンブルされるバイナリの ABI に従って GPR 名が選択されます。
.ie n .IP """fpr\-names=\fIABI\fR""" 4
.el .IP \f(CWfpr\-names=\fR\f(CIABI\fR\f(CW\fR 4
.IX Item "fpr-names=ABI"
指定された ABI に適切な FPR(浮動小数点レジスタ) 名を出力します。デフォルトでは、名前ではなくFPR番号が表示されます。
.ie n .IP """cp0\-names=\fIARCH\fR""" 4
.el .IP \f(CWcp0\-names=\fR\f(CIARCH\fR\f(CW\fR 4
.IX Item "cp0-names=ARCH"
\&\fIARCH\fR で指定した CPU またはアーキテクチャに応じて、CP0 (system control coprocessor;coprocessor 0) レジスタ名を出力します。デフォルトでは、CP0 レジスタ名は、逆アセンブルされるバイナリのアーキテクチャと CPU に従って選択されます。
.ie n .IP """hwr\-names=\fIARCH\fR""" 4
.el .IP \f(CWhwr\-names=\fR\f(CIARCH\fR\f(CW\fR 4
.IX Item "hwr-names=ARCH"
\&\fIARCH\fR で指定された CPU またはアーキテクチャに応じて、HWR (\f(CW\*(C`rdhwr\*(C'\fR 命令で使用されるハードウェア・レジスタ) 名を出力します。デフォルトでは、HWR 名は、逆アセンブルされるバイナリのアーキテクチャと CPU に従って選択されます。
.ie n .IP """reg\-names=\fIABI\fR""" 4
.el .IP \f(CWreg\-names=\fR\f(CIABI\fR\f(CW\fR 4
.IX Item "reg-names=ABI"
選択したABIに適切な GPR 名と FPR 名を出力します。
.ie n .IP """reg\-names=\fIARCH\fR""" 4
.el .IP \f(CWreg\-names=\fR\f(CIARCH\fR\f(CW\fR 4
.IX Item "reg-names=ARCH"
選択したCPU またはアーキテクチャに応じて、CPU 固有のレジスタ名 (CP0 レジスタ名、HWR 名) を表示します。
.RE
.RS 4
.Sp
上記のいずれのオプションでも、\fIABI\fR または \fIARCH\fR を \fBnumeric\fR として指定すると、選択したタイプのレジスタに対して、名前ではなく番号が表示されます。
\&\fB\-\-help\fR オプションを使用すると、\fIABI\fR と \fIARCH\fR の使用可能な値を一覧表示できます。
.Sp
VAX の場合は、\fB\-M entry:0xf00ba\fR でファンクションエントリアドレスを指定できます。これを複数回使用して、シンボルテーブルを含まない VAX バイナリファイル(ROM ダンプなど) を適切に逆アセンブルすることができます。これらの場合、関数エントリは VAX 命令としてデコードされるため、これにより関数の残りの部分が誤って逆アセンブルされる可能性があります。(訳注:原文を確認してください)
.RE
.IP \fB\-p\fR 4
.IX Item "-p"
.PD 0
.IP \fB\-\-private\-headers\fR 4
.IX Item "--private-headers"
.PD
オブジェクトファイル形式に固有の情報を出力します。出力される情報は、オブジェクトファイルの形式によって異なります。一部のオブジェクトファイル形式では、追加情報は出力されません。
.IP "\fB\-P\fR \fIoptions\fR" 4
.IX Item "-P options"
.PD 0
.IP \fB\-\-private=\fR\fIoptions\fR 4
.IX Item "--private=options"
.PD
オブジェクトファイル形式に固有の情報を出力します。引数 \fIoptions\fR は、形式に応じたカンマ区切りのリストです (オプションのリストはヘルプとともに表示されます)。
.Sp
XCOFF で有効なオプションは以下のとおりです:
.RS 4
.ie n .IP """header""" 4
.el .IP \f(CWheader\fR 4
.IX Item "header"
.PD 0
.ie n .IP """aout""" 4
.el .IP \f(CWaout\fR 4
.IX Item "aout"
.ie n .IP """sections""" 4
.el .IP \f(CWsections\fR 4
.IX Item "sections"
.ie n .IP """syms""" 4
.el .IP \f(CWsyms\fR 4
.IX Item "syms"
.ie n .IP """relocs""" 4
.el .IP \f(CWrelocs\fR 4
.IX Item "relocs"
.ie n .IP """lineno,""" 4
.el .IP \f(CWlineno,\fR 4
.IX Item "lineno,"
.ie n .IP """loader""" 4
.el .IP \f(CWloader\fR 4
.IX Item "loader"
.ie n .IP """except""" 4
.el .IP \f(CWexcept\fR 4
.IX Item "except"
.ie n .IP """typchk""" 4
.el .IP \f(CWtypchk\fR 4
.IX Item "typchk"
.ie n .IP """traceback""" 4
.el .IP \f(CWtraceback\fR 4
.IX Item "traceback"
.ie n .IP """toc""" 4
.el .IP \f(CWtoc\fR 4
.IX Item "toc"
.ie n .IP """ldinfo""" 4
.el .IP \f(CWldinfo\fR 4
.IX Item "ldinfo"
.PD
.RE
.RS 4
.Sp
PE で有効なオプションは以下のとおりです:
.ie n .IP """header""" 4
.el .IP \f(CWheader\fR 4
.IX Item "header"
.PD 0
.ie n .IP """sections""" 4
.el .IP \f(CWsections\fR 4
.IX Item "sections"
.PD
.RE
.RS 4
.Sp
すべてのオブジェクトフォーマットがこのオプションをサポートしているわけではありません。特に ELF 形式では使用されません。
.RE
.IP \fB\-r\fR 4
.IX Item "-r"
.PD 0
.IP \fB\-\-reloc\fR 4
.IX Item "--reloc"
.PD
ファイルの再配置エントリを出力します。\fB\-d\fR または \fB\-D\fR とともに使用する場合、再配置情報は逆アセンブルの合間に出力されます。
.IP \fB\-R\fR 4
.IX Item "-R"
.PD 0
.IP \fB\-\-dynamic\-reloc\fR 4
.IX Item "--dynamic-reloc"
.PD
ファイルの動的再配置エントリを出力します。これは、特定のタイプの共有ライブラリなどの動的オブジェクトに対してのみ意味があります。\fB\-r\fR に関しては、\fB\-d\fR または \fB\-D\fR で使用される場合、再配置は逆アセンブルの合間に出力されます。
.Sp
注意:\fBobjdump\fR は、RELR タイプの再配置の表示をサポートしていません。これらは \fBreadelf\fR プログラムで表示できます。
.IP \fB\-s\fR 4
.IX Item "-s"
.PD 0
.IP \fB\-\-full\-contents\fR 4
.IX Item "--full-contents"
.PD
セクションの完全な内容を表示します。特定のセクションを要求するために \fB\-j\fR と組み合わせて使用されることがよくあります。デフォルトでは、空でない non\-bss セクションがすべて表示されます。デフォルトでは、圧縮されたセクションは圧縮形式で表示されます。解凍された形式で内容を表示するには、コマンドラインに \fB\-Z\fR オプションを追加します。
.IP \fB\-S\fR 4
.IX Item "-S"
.PD 0
.IP \fB\-\-source\fR 4
.IX Item "--source"
.PD
可能であれば、逆アセンブルされたソースコードを表示します。\fB\-d\fR を仮定します。
.IP \fB\-\-show\-all\-symbols\fR 4
.IX Item "--show-all-symbols"
逆アセンブルするときは、最初のアドレスだけでなく、指定されたアドレスに一致するすべてのシンボルを表示します。
.IP \fB\-\-source\-comment[=\fR\fItxt\fR\fB]\fR 4
.IX Item "--source-comment[=txt]"
\&\fB\-S\fR オプションと同様ですが、すべてのソース・コード行は接頭辞 \fItxt\fR で表示されます。通常、\fItxt\fR はコメント文字列であり、アセンブラコードとソースコードを区別するために使用できます。\fItxt\fR が指定されない場合は、デフォルトの文字列 \fI\`#"\fR (ハッシュの後にスペース) が使用されます。
.IP \fB\-\-prefix=\fR\fIprefix\fR 4
.IX Item "--prefix=prefix"
\&\fB\-S\fR とともに使用する場合、絶対パスに追加するには \fIprefix\fR を指定します。
.IP \fB\-\-prefix\-strip=\fR\fIlevel\fR 4
.IX Item "--prefix-strip=level"
固定された絶対パスを削除する初期ディレクトリ名の数を指定します。 \fB\-\-prefix=\fR\fIprefix\fR がない場合は無効です。
.IP \fB\-\-show\-raw\-insn\fR 4
.IX Item "--show-raw-insn"
命令を逆アセンブルするときは、命令をシンボル形式だけでなく 16進数形式でも出力します。\fB\-\-prefix\-addresses\fR が使われる時を除いて、これはデフォルトです。
.IP \fB\-\-no\-show\-raw\-insn\fR 4
.IX Item "--no-show-raw-insn"
命令を逆アセンブルする場合、命令バイトを表示しません。
これは \fB\-\-prefix\-addresses\fR が使われる時のデフォルトです。
.IP \fB\-\-insn\-width=\fR\fIwidth\fR 4
.IX Item "--insn-width=width"
命令を逆アセンブルするときに、\fIwidth\fR バイトを 1行で表示します。
.IP \fB\-\-visualize\-jumps[=color|=extended\-color|=off]\fR 4
.IX Item "--visualize-jumps[=color|=extended-color|=off]"
開始アドレスとターゲットアドレスの間に ASCII アートを描画することで、関数内に留まるジャンプを視覚化します。オプションの \fB=color\fR 引数は、単純な端末の色を使用して出力に色を追加します。代わりに \fB=extended\-color\fR 引数 は8ビットの色を追加しますが、全ての端末で動作するとは限りません。
.Sp
\&\fBvisualize\-jumps\fR オプションを有効にした後で無効にする必要がある場合は、 \fBvisualize\-jumps=off\fR を使用します。
.IP \fB\-\-disassembler\-color=off\fR 4
.IX Item "--disassembler-color=off"
.PD 0
.IP \fB\-\-disassembler\-color=terminal\fR 4
.IX Item "--disassembler-color=terminal"
.IP \fB\-\-disassembler\-color=on|color|colour\fR 4
.IX Item "--disassembler-color=on|color|colour"
.IP \fB\-\-disassembler\-color=extended|extended\-color|extended\-colour\fR 4
.IX Item "--disassembler-color=extended|extended-color|extended-colour"
.PD
逆アセンブル出力での色付き構文強調表示の使用を有効または無効にします。デフォルトの動作は configure time オプションによって決定されます。すべてのアーキテクチャが色付きの構文強調表示をサポートしているわけではなく、使用する端末によっては、色付きの出力が実際には判読できない場合があることに注意してください。
.Sp
\&\fBon\fR 引数は、単純な端末色を使用して色を追加します。
.Sp
\&\fBterminal\fR 引数も同様ですが、出力デバイスが端末の場合に限ります。
.Sp
\&\fBextended\-color\fR 引数は \fBon\fR 引数と似ていますが、 8ビットカラーを使用します。これらは全ての端末で動作するとは限りません。
.Sp
\&\fBoff\fR 引数は色付き逆アセンブルを無効にします。
.IP \fB\-W[lLiaprmfFsoORtUuTgAckK]\fR 4
.IX Item "-W[lLiaprmfFsoORtUuTgAckK]"
.PD 0
.IP \fB\-\-dwarf[=rawline,=decodedline,=info,=abbrev,=pubnames,=aranges,=macro,=frames,=frames\-interp,=str,=str\-offsets,=loc,=Ranges,=pubtypes,=trace_info,=trace_abbrev,=trace_aranges,=gdb_index,=addr,=cu_index,=links,=follow\-links]\fR 4
.IX Item "--dwarf[=rawline,=decodedline,=info,=abbrev,=pubnames,=aranges,=macro,=frames,=frames-interp,=str,=str-offsets,=loc,=Ranges,=pubtypes,=trace_info,=trace_abbrev,=trace_aranges,=gdb_index,=addr,=cu_index,=links,=follow-links]"
.PD
ファイル内の DWARF デバッグセクションの内容を表示します (存在する場合)。圧縮されたデバッグセクションは、表示される前に自動的に (一時的に) 解凍されます。スイッチの後にオプションの文字または単語が 1つ以上続く場合は、それらのタイプのデータのみがダンプされます。文字と単語は以下の情報を参照します:
.RS 4
.ie n .IP """a""" 4
.el .IP \f(CWa\fR 4
.IX Item "a"
.PD 0
.ie n .IP """=abbrev""" 4
.el .IP \f(CW=abbrev\fR 4
.IX Item "=abbrev"
.PD
\&\fB.debug_abbrev\fR セクションの内容を表示します。
.ie n .IP """A""" 4
.el .IP \f(CWA\fR 4
.IX Item "A"
.PD 0
.ie n .IP """=addr""" 4
.el .IP \f(CW=addr\fR 4
.IX Item "=addr"
.PD
\&\fB.debug_addr\fR セクションの内容を表示します。
.ie n .IP """c""" 4
.el .IP \f(CWc\fR 4
.IX Item "c"
.PD 0
.ie n .IP """=cu_index""" 4
.el .IP \f(CW=cu_index\fR 4
.IX Item "=cu_index"
.PD
\&\fB.debug_cu_index\fR セクションと \fB.debug_tu_index\fR セクションの内容を表示します。
.ie n .IP """f""" 4
.el .IP \f(CWf\fR 4
.IX Item "f"
.PD 0
.ie n .IP """=frames""" 4
.el .IP \f(CW=frames\fR 4
.IX Item "=frames"
.PD
\&\fB.debug_frame\fR セクションの内容をそのまま表示します。
.ie n .IP """F""" 4
.el .IP \f(CWF\fR 4
.IX Item "F"
.PD 0
.ie n .IP """=frames\-interp""" 4
.el .IP \f(CW=frames\-interp\fR 4
.IX Item "=frames-interp"
.PD
\&\fB.debug_frame\fR セクションの解釈された内容を表示します。
.ie n .IP """g""" 4
.el .IP \f(CWg\fR 4
.IX Item "g"
.PD 0
.ie n .IP """=gdb_index""" 4
.el .IP \f(CW=gdb_index\fR 4
.IX Item "=gdb_index"
.PD
\&\fB.gdb_index\fR セクションと \fB.debug_names\fR セクションの内容を表示します。
.ie n .IP """i""" 4
.el .IP \f(CWi\fR 4
.IX Item "i"
.PD 0
.ie n .IP """=info""" 4
.el .IP \f(CW=info\fR 4
.IX Item "=info"
.PD
\&\fB.debug_info\fR セクションの内容を表示します。注意: このオプションからの出力は、 \fB\-\-dwarf\-depth\fR および \fB\-\-dwarf\-start\fR オプションを使用して制限することもできます。
.ie n .IP """k""" 4
.el .IP \f(CWk\fR 4
.IX Item "k"
.PD 0
.ie n .IP """=links""" 4
.el .IP \f(CW=links\fR 4
.IX Item "=links"
.PD
\&\fB.gnu_debuglink\fR、 \fB.gnu_debugaltlink\fR、および \fB.debug_sup\fR セクションが存在する場合、その内容を表示します。また、 \fB.debug_info\fR セクション の DW_AT_GNU_dwo_name または DW_AT_dwo_name 属性によって指定されている場合は、個別の dwarf オブジェクトファイル (dwo) へのリンクも表示します。
.ie n .IP """K""" 4
.el .IP \f(CWK\fR 4
.IX Item "K"
.PD 0
.ie n .IP """=follow\-links""" 4
.el .IP \f(CW=follow\-links\fR 4
.IX Item "=follow-links"
.PD
リンクされた個別のデバッグ情報ファイルで見つかった、選択されたデバッグセクションの内容を表示します。これにより、同じデバッグセクションが複数のファイルに存在する場合、複数のバージョンが表示される可能性があります。
.Sp
さらに、 DWARF 属性を表示するときに、個別のデバッグ情報ファイルを参照するフォームが見つかった場合は、参照された内容も表示されます。
.Sp
注意 \- 一部のディストリビューションでは、このオプションはデフォルトで有効になっています。\fBN\fR デバッグオプションを使用して無効にできます。デフォルトは、 binutils の設定時に \fB\-\-enable\-follow\-debug\-links=yes\fR または \fB\-\-enable\-follow\-debug\-links=no\fR オプションで選択できます。これらが使用されない場合、デフォルトでは次のデバッグリンクが有効になります。
.Sp
注意 \- binutils が構築された時に debuginfod プロトコルのサポートが有効になっていた場合、このオプションは \fIDEBUGINFOD_URLS\fR 環境変数に指定された debuginfod サーバへの接続も行います。この問題の解決には時間がかかる場合があります。この動作は、デバッグオプション \fB=do\-not\-use\-debuginfod\fR を使用して無効にできます。
.ie n .IP """N""" 4
.el .IP \f(CWN\fR 4
.IX Item "N"
.PD 0
.ie n .IP """=no\-follow\-links""" 4
.el .IP \f(CW=no\-follow\-links\fR 4
.IX Item "=no-follow-links"
.PD
個別のデバッグ情報ファイルへの次のリンクを無効にします。
.ie n .IP """D""" 4
.el .IP \f(CWD\fR 4
.IX Item "D"
.PD 0
.ie n .IP """=use\-debuginfod""" 4
.el .IP \f(CW=use\-debuginfod\fR 4
.IX Item "=use-debuginfod"
.PD
デバッグリンクをたどる必要がある場合に、 debuginfod サーバとの通信を有効にします。これがデフォルトの動作です。
.ie n .IP """E""" 4
.el .IP \f(CWE\fR 4
.IX Item "E"
.PD 0
.ie n .IP """=do\-not\-use\-debuginfod""" 4
.el .IP \f(CW=do\-not\-use\-debuginfod\fR 4
.IX Item "=do-not-use-debuginfod"
.PD
デバッグリンクをたどる必要がある場合に、debuginfod サーバへの接続を無効にします。
.ie n .IP """l""" 4
.el .IP \f(CWl\fR 4
.IX Item "l"
.PD 0
.ie n .IP """=rawline""" 4
.el .IP \f(CW=rawline\fR 4
.IX Item "=rawline"
.PD
\&\fB.debug_line\fR セクションの内容を raw 形式で表示します。
.ie n .IP """L""" 4
.el .IP \f(CWL\fR 4
.IX Item "L"
.PD 0
.ie n .IP """=decodedline""" 4
.el .IP \f(CW=decodedline\fR 4
.IX Item "=decodedline"
.PD
\&\fB.debug_line\fR セクションの解釈された内容を表示します。
.ie n .IP """m""" 4
.el .IP \f(CWm\fR 4
.IX Item "m"
.PD 0
.ie n .IP """=macro""" 4
.el .IP \f(CW=macro\fR 4
.IX Item "=macro"
.PD
\&\fB.debug_macro\fR セクションと \fB.debug_macinfo\fR セクションの内容を表示します。
.ie n .IP """o""" 4
.el .IP \f(CWo\fR 4
.IX Item "o"
.PD 0
.ie n .IP """=loc""" 4
.el .IP \f(CW=loc\fR 4
.IX Item "=loc"
.PD
\&\fB.debug_loc\fR セクションおよび \fB.debug_loclists\fR セクションの内容を表示します。
.ie n .IP """O""" 4
.el .IP \f(CWO\fR 4
.IX Item "O"
.PD 0
.ie n .IP """=str\-offsets""" 4
.el .IP \f(CW=str\-offsets\fR 4
.IX Item "=str-offsets"
.PD
\&\fB.debug_str_offsets\fR セクションの内容を表示します。
.ie n .IP """p""" 4
.el .IP \f(CWp\fR 4
.IX Item "p"
.PD 0
.ie n .IP """=pubnames""" 4
.el .IP \f(CW=pubnames\fR 4
.IX Item "=pubnames"
.PD
\&\fB.debug_pubnames\fR および \fB.debug_gnu_pubnames\fR セクションの内容を表示します。
.ie n .IP """r""" 4
.el .IP \f(CWr\fR 4
.IX Item "r"
.PD 0
.ie n .IP """=aranges""" 4
.el .IP \f(CW=aranges\fR 4
.IX Item "=aranges"
.PD
\&\fB.debug_aranges\fR セクションの内容を表示します。
.ie n .IP """R""" 4
.el .IP \f(CWR\fR 4
.IX Item "R"
.PD 0
.ie n .IP """=Ranges""" 4
.el .IP \f(CW=Ranges\fR 4
.IX Item "=Ranges"
.PD
\&\fB.debug_ranges\fR セクションと \fB.debug_rnglists\fR セクションの内容を表示します。
.ie n .IP """s""" 4
.el .IP \f(CWs\fR 4
.IX Item "s"
.PD 0
.ie n .IP """=str""" 4
.el .IP \f(CW=str\fR 4
.IX Item "=str"
.PD
\&\fB.debug_str\fR、\fB.debug_line_str\fR 、\fB.debug_str_offsets\fR の各セクションの内容を表示します。
.ie n .IP """t""" 4
.el .IP \f(CWt\fR 4
.IX Item "t"
.PD 0
.ie n .IP """=pubtype""" 4
.el .IP \f(CW=pubtype\fR 4
.IX Item "=pubtype"
.PD
\&\fB.debug_pubtypes\fR および \fB.debug_gnu_pubtypes\fR セクションの内容を表示します。
.ie n .IP """T""" 4
.el .IP \f(CWT\fR 4
.IX Item "T"
.PD 0
.ie n .IP """=trace_aranges""" 4
.el .IP \f(CW=trace_aranges\fR 4
.IX Item "=trace_aranges"
.PD
\&\fB.trace_aranges\fR セクションの内容を表示します。
.ie n .IP """u""" 4
.el .IP \f(CWu\fR 4
.IX Item "u"
.PD 0
.ie n .IP """=trace_abbrev""" 4
.el .IP \f(CW=trace_abbrev\fR 4
.IX Item "=trace_abbrev"
.PD
\&\fB.trace_abbrev\fR セクションの内容を表示します。
.ie n .IP """U""" 4
.el .IP \f(CWU\fR 4
.IX Item "U"
.PD 0
.ie n .IP """=trace_info""" 4
.el .IP \f(CW=trace_info\fR 4
.IX Item "=trace_info"
.PD
\&\fB.trace_info\fR セクションの内容を表示します。
.RE
.RS 4
.Sp
注意: \fB.debug_static_funcs\fR、\fB.debug_static_vars\fR 、および \fBdebug_weaknames\fR セクションの内容の表示は、現在サポートされていません。
.RE
.IP \fB\-\-dwarf\-depth=\fR\fIn\fR 4
.IX Item "--dwarf-depth=n"
\&\f(CW\*(C`.debug_info\*(C'\fR セクションのダンプを \fIn\fR の子に制限します。
これは \fB\-\-debug\-dump=info\fR を指定した場合にのみ有用です。デフォルトでは、すべての DIE が出力されます。\fIn\fR の特別な値 0 もこの効果を持ちます。
.Sp
\&\fIn\fR にゼロ以外の値を指定すると、 \fIn\fR 位以上の DIE は出力されません。\fIn\fR の範囲は 0 ベースです。
.IP \fB\-\-dwarf\-start=\fR\fIn\fR 4
.IX Item "--dwarf-start=n"
番号 \fIn\fR の DIE で始まる DIE だけを出力します。これは \fB\-\-debug\-dump=info\fR を指定した場合にのみ有用です。
.Sp
このオプションを指定すると、番号が \fIn\fR の DIE より前のすべてのヘッダー情報およびすべての DIE の表示が抑制されます。指定された DIE の兄弟と子だけが出力されます。
.Sp
これは \fB\-\-dwarf\-depth\fR と組み合わせて使用できます。
.IP \fB\-\-dwarf\-check\fR 4
.IX Item "--dwarf-check"
Dwarf 情報における一貫性の追加チェックを有効にします。
.IP \fB\-\-ctf[=\fR\fIsection\fR\fB]\fR 4
.IX Item "--ctf[=section]"
指定した CTF セクションの内容を表示します。CTF セクション自体には多くのサブセクションが含まれており、それらはすべて順番に表示されます。
.Sp
デフォルトでは、 \fI.ctf\fR という名前のセクションの名前が表示されます。これは \fBld\fR によって発行された名前です。
.IP \fB\-\-ctf\-parent=\fR\fImember\fR 4
.IX Item "--ctf-parent=member"
CTF セクションが曖昧に定義された型を含む場合、多くの CTF 辞書のアーカイブから構成され、そのすべてが曖昧さのない型を含む 1つの辞書から継承されます。このメンバはデフォルトで、このメンバを含むセクションと同様に \fI.ctf\fR という名前になりますが、リンク時に \f(CW\*(C`ctf_link_set_memb_name_changer\*(C'\fR 関数を使用してこの名前を変更できます。親アーカイブメンバーの名前を変更するために名前変更子を使用するリンカーによって作成された CTF アーカイブを見る場合、 \fB\-\-ctf\-parent\fR を使用して親に使用される名前を指定できます。
.IP \fB\-\-ctf\-parent\-section=\fR\fIsection\fR 4
.IX Item "--ctf-parent-section=section"
このオプションを使用すると、あいまいでない型を含む CTF 親辞書に対して、あいまいな残りを含む子辞書とはまったく異なるセクションを選択できます。リンカーはこのように構成された ELF オブジェクトを生成しませんが、一部のサード・パーティーのリンカーは生成します。また、複数の raw ファイルとして書き出された CTF を検査して objcopy で構成すると便利です。これにより、CTF は異なる ELF セクションに配置されますが、単一の CTF dict の異なるメンバーには配置されません。
.IP \fB\-\-sframe[=\fR\fIsection\fR\fB]\fR 4
.IX Item "--sframe[=section]"
指定した SFrame セクションの内容を表示します。
.Sp
デフォルトでは、 \fI.sframe\fR という名前のセクションの名前が表示されます。これは、 \fBld\fR によって発行された名前です。
.IP \fB\-G\fR 4
.IX Item "-G"
.PD 0
.IP \fB\-\-stabs\fR 4
.IX Item "--stabs"
.PD
要求されたセクションの内容をすべて表示します。ELF ファイルの .stab セクション、.stab.index セクション、および .stab.excl セクションの内容を表示します。\f(CW\*(C`.stab\*(C'\fR デバッグシンボルテーブルエントリが ELF セクションに含まれているシステム (Solaris 2.0など) でのみ有効です。その他のほとんどのファイル形式では、デバッグシンボルテーブルエントリはリンケージシンボルとインターリーブされ、\fB\-\-syms\fR の出力に表示されます。
.IP \fB\-\-start\-address=\fR\fIaddress\fR 4
.IX Item "--start-address=address"
指定したアドレスからデータの表示を開始します。これは、 \fB\-d\fR、 \fB\-r\fR 、および\fB\-s\fRオプションの出力に影響します。
.IP \fB\-\-stop\-address=\fR\fIaddress\fR 4
.IX Item "--stop-address=address"
指定されたアドレスのデータの表示を停止します。これは、 \fB\-d\fR、 \fB\-r\fR 、および\fB\-s\fRオプションの出力に影響します。
.IP \fB\-t\fR 4
.IX Item "-t"
.PD 0
.IP \fB\-\-syms\fR 4
.IX Item "--syms"
.PD
ファイルのシンボルテーブルエントリを出力します。
これは \fBnm\fR プログラムで提供される情報に似ていますが、表示形式が異なります。出力の形式は、ダンプされるファイルの形式によって異なりますが、主に 2つのタイプがあります。1つ目は以下のようになります:
.Sp
.Vb 2
\&        [  4](sec  3)(fl 0x00)(ty   0)(scl   3) (nx 1) 0x00000000 .bss
\&        [  6](sec  1)(fl 0x00)(ty   0)(scl   2) (nx 0) 0x00000000 fred
.Ve
.Sp
ここで、角括弧内の数字はシンボルテーブル内のエントリの番号、 \fIsec\fR 番号はセクション番号、 \fIfl\fR 値はシンボルのフラグビット、 \fIty\fR 番号はシンボルのタイプ、 \fIscl\fR 番号はシンボルのストレージクラス、 \fInx\fR 値はシンボルに関連付けられた補助エントリの数です。最後の 2つのフィールドは、シンボルの値と名前です。
.Sp
もう 1つの一般的な出力形式は、通常 ELF ベースのファイルに見られるもので、次のようなものです:
.Sp
.Vb 2
\&        00000000 l    d  .bss   00000000 .bss
\&        00000000 g       .text  00000000 fred
.Ve
.Sp
ここで、最初の数字はシンボルの値(アドレスと呼ばれることもあります)です。次のフィールドは、実際には、シンボルに設定されているフラグビットを示す文字とスペースのセットです。これらの文字については、以下で説明します。次はシンボルが関連付けられているセクションです。セクションが絶対である (つまりどのセクションとも接続されていない) 場合は \fI*ABS*\fR 、セクションがダンプされるファイル内で参照されているが、そこで定義されていない場合は \fI*UND*\fR です。
.Sp
セクション名の後には別のフィールドがあります。番号は、一般的なシンボルの場合はアラインメント、その他のシンボルの場合はサイズです。最後にシンボルの名前が表示されます。
.Sp
フラグ文字は 7つのグループに分かれ、それは以下のとおりです:
.RS 4
.ie n .IP """l""" 4
.el .IP \f(CWl\fR 4
.IX Item "l"
.PD 0
.ie n .IP """g""" 4
.el .IP \f(CWg\fR 4
.IX Item "g"
.ie n .IP """u""" 4
.el .IP \f(CWu\fR 4
.IX Item "u"
.ie n .IP """!""" 4
.el .IP \f(CW!\fR 4
.IX Item "!"
.PD
シンボルが ローカル(l)、 グローバル(g)、 一意のグローバル(u) であり、グローバルでもローカルでもない (スペース) か、グローバルとローカルの両方(!) です。シンボルは、デバッグに使用されるなど、さまざまな理由でローカルにもグローバルにもできませんが、ローカルとグローバルの両方にある場合は、おそらくバグを示しています。一意大域シンボルは、 ELF シンボルバインディングの標準セットに対する GNU 拡張です。このようなシンボルの場合、動的リンカーは、プロセス全体でこの名前とタイプを持つシンボルが 1つだけ使用されていることを確認します。
.ie n .IP """w""" 4
.el .IP \f(CWw\fR 4
.IX Item "w"
シンボルは弱 (w) または強 (スペース) です。
.ie n .IP """C""" 4
.el .IP \f(CWC\fR 4
.IX Item "C"
記号は、コンストラクタ (C) または通常の記号 (スペース) です。
.ie n .IP """W""" 4
.el .IP \f(CWW\fR 4
.IX Item "W"
シンボルは、警告 (W) または通常のシンボル (スペース) です。警告シンボルの名前は、警告シンボルの後に続くシンボルが参照された場合に表示されるメッセージです。
.ie n .IP """I""" 4
.el .IP \f(CWI\fR 4
.IX Item "I"
.PD 0
.ie n .IP """i""" 4
.el .IP \f(CWi\fR 4
.IX Item "i"
.PD
シンボルは、別のシンボルへの間接参照 (I) 、再配置処理中に評価される関数 (i) 、または通常のシンボル (スペース) です。
.ie n .IP """d""" 4
.el .IP \f(CWd\fR 4
.IX Item "d"
.PD 0
.ie n .IP """D""" 4
.el .IP \f(CWD\fR 4
.IX Item "D"
.PD
シンボルは、デバッグシンボル (d) 、ダイナミックシンボル (D) 、または通常のシンボル (スペース) です。
.ie n .IP """F""" 4
.el .IP \f(CWF\fR 4
.IX Item "F"
.PD 0
.ie n .IP """f""" 4
.el .IP \f(CWf\fR 4
.IX Item "f"
.ie n .IP """O""" 4
.el .IP \f(CWO\fR 4
.IX Item "O"
.PD
シンボルは、関数 (F) 、ファイル (f) 、オブジェクト (O) の名前、または通常のシンボル (スペース) です。
.RE
.RS 4
.RE
.IP \fB\-T\fR 4
.IX Item "-T"
.PD 0
.IP \fB\-\-dynamic\-syms\fR 4
.IX Item "--dynamic-syms"
.PD
ファイルの動的シンボルテーブルエントリを出力します。これは、特定のタイプの共有ライブラリなどの動的オブジェクトに対してのみ意味があります。これは、 \fBnm\fR プログラムで \fB\-D\fR (\fB\-\-dynamic\fR) オプションが指定された場合に提供される情報に似ています。
.Sp
出力形式は \fB\-\-syms\fR オプションで生成される形式と似ていますが、シンボル名の前に追加フィールドが挿入され、シンボルに関連付けられたバージョン情報が提供される点が異なります。
バージョンが、シンボルへのバージョン化されていない参照を解決するときに使用されるデフォルトのバージョンである場合はそのまま表示され、そうでない場合は括弧で囲まれます。
.IP \fB\-\-special\-syms\fR 4
.IX Item "--special-syms"
シンボルを表示する場合、ターゲットが何らかの形で特別であると考え、通常はユーザーが興味を持たないシンボルも含まれます。
.IP "\fB\-U\fR \fI[d|i|l|e|x|h]\fR" 4
.IX Item "-U [d|i|l|e|x|h]"
.PD 0
.IP \fB\-\-unicode=\fR\fI[default|invalid|locale|escape|hex|highlight]\fR 4
.IX Item "--unicode=[default|invalid|locale|escape|hex|highlight]"
.PD
文字列内の UTF\-8 エンコード・マルチバイト文字の表示を制御します。
デフォルト(\fB\-\-unicode=default\fR)では、特別な処理は行われません。\fB\-\-unicode=locale\fR オプションを選択すると、シーケンスが現在のロケールで表示されます。ロケールによっては、サポートされない場合もあります。オプション \fB\-\-unicode=hex\fR および \fB\-\-unicode=invalid\fR では、不等号括弧または波括弧で囲まれた 16進バイト列として表示されます。
.Sp
\&\fB\-\-unicode=escape\fR オプションを選択すると、これらはエスケープシーケンス(\fI\euxxxx\fR) として表示され、\fB\-\-unicode=highlight\fR オプションを選択すると、赤色で強調表示されたエスケープシーケンスとして表示されます (出力デバイスでサポートされている場合)。色分けは、ユニコード配列の存在が予期されない場合に注意を引くことを目的としています。
.IP \fB\-V\fR 4
.IX Item "-V"
.PD 0
.IP \fB\-\-version\fR 4
.IX Item "--version"
.PD
\&\fBobjdump\fR のバージョン番号を表示して終了します。
.IP \fB\-x\fR 4
.IX Item "-x"
.PD 0
.IP \fB\-\-all\-headers\fR 4
.IX Item "--all-headers"
.PD
シンボルテーブルや再配置エントリなど、使用可能なすべてのヘッダ情報を表示します。 \fB\-x\fR を使用すると、 \fB\-a \-f \-h \-p \-r \-t\fR全体を指定したことになります。
.IP \fB\-w\fR 4
.IX Item "-w"
.PD 0
.IP \fB\-\-wide\fR 4
.IX Item "--wide"
.PD
列数が 80 を超える出力デバイス用に一部の行をフォーマットします。
また、シンボル名が表示されるときに切り詰めません。
.IP \fB\-z\fR 4
.IX Item "-z"
.PD 0
.IP \fB\-\-disassemble\-zeroes\fR 4
.IX Item "--disassemble-zeroes"
.PD
通常、逆アセンブル出力はゼロのブロックをスキップします。このオプションは、他のデータと同様に、逆アセンブラがこれらのブロックを逆アセンブルするように指示します。
.IP \fB\-Z\fR 4
.IX Item "-Z"
.PD 0
.IP \fB\-\-decompress\fR 4
.IX Item "--decompress"
.PD
\&\fB\-Z\fR オプションは、 \fB\-s\fR オプションと組み合わせて使用します。\fBobjdump\fR に対して、内容を表示する前に圧縮されたセクションを解凍するように指示します。
.IP \fB@\fR\fIfile\fR 4
.IX Item "@file"
\&\fIfile\fR からコマンドラインオプションを読み込みます。読み込まれた
オプションは、元の @\fIfile\fR オプションの代わりに挿入されます。
\&\fIfile\fRが存在しない場合、または読み込めない場合、オプションは
文字通りに扱われ、削除されません。
.Sp
\&\fIfile\fR 中のオプションは空白で区切られます。空白文字は、オプション
全体を一重引用符または二重引用符で囲むことによってオプションに含める
ことができます。任意の文字 (バックスラッシュを含む) は、含まれる文字の
前にバックスラッシュを付けることによって含めることができます。
\&\fIfile\fR 自体に追加の @\fIfile\fR オプションを含めることができます。
このようなオプションは再帰的に処理されます。
.SH "関連項目"
.IX Header "関連項目"
\&\fBnm\fR\|(1), \fBreadelf\fR\|(1), と \fIbinutils\fR のInfo エントリ。
.SH 著作権
.IX Header "著作権"
Copyright (c) 1991\-2025 Free Software Foundation, Inc.
.PP
Permission is granted to copy, distribute and/or modify this document
under the terms of the GNU Free Documentation License, Version 1.3
or any later version published by the Free Software Foundation;
with no Invariant Sections, with no Front\-Cover Texts, and with no
Back\-Cover Texts.  A copy of the license is included in the
section entitled "GNU Free Documentation License".
